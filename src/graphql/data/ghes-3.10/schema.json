{
  "queries": [
    {
      "name": "codeOfConduct",
      "type": "CodeOfConduct",
      "kind": "objects",
      "id": "codeofconduct",
      "href": "/graphql/reference/objects#codeofconduct",
      "description": "<p>Look up a code of conduct by its key.</p>",
      "args": [
        {
          "name": "key",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The code of conduct's key.</p>"
        }
      ]
    },
    {
      "name": "codesOfConduct",
      "type": "[CodeOfConduct]",
      "kind": "objects",
      "id": "codeofconduct",
      "href": "/graphql/reference/objects#codeofconduct",
      "description": "<p>Look up a code of conduct by its key.</p>",
      "args": []
    },
    {
      "name": "enterprise",
      "type": "Enterprise",
      "kind": "objects",
      "id": "enterprise",
      "href": "/graphql/reference/objects#enterprise",
      "description": "<p>Look up an enterprise by URL slug.</p>",
      "args": [
        {
          "name": "invitationToken",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The enterprise invitation token.</p>"
        },
        {
          "name": "slug",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The enterprise URL slug.</p>"
        }
      ]
    },
    {
      "name": "license",
      "type": "License",
      "kind": "objects",
      "id": "license",
      "href": "/graphql/reference/objects#license",
      "description": "<p>Look up an open source license by its key.</p>",
      "args": [
        {
          "name": "key",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The license's downcased SPDX ID.</p>"
        }
      ]
    },
    {
      "name": "licenses",
      "type": "[License]!",
      "kind": "objects",
      "id": "license",
      "href": "/graphql/reference/objects#license",
      "description": "<p>Return a list of known open source licenses.</p>",
      "args": []
    },
    {
      "name": "meta",
      "type": "GitHubMetadata!",
      "kind": "objects",
      "id": "githubmetadata",
      "href": "/graphql/reference/objects#githubmetadata",
      "description": "<p>Return information about the GitHub instance.</p>",
      "args": []
    },
    {
      "name": "node",
      "type": "Node",
      "kind": "interfaces",
      "id": "node",
      "href": "/graphql/reference/interfaces#node",
      "description": "<p>Fetches an object given its ID.</p>",
      "args": [
        {
          "name": "id",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "description": "<p>ID of the object.</p>"
        }
      ]
    },
    {
      "name": "nodes",
      "type": "[Node]!",
      "kind": "interfaces",
      "id": "node",
      "href": "/graphql/reference/interfaces#node",
      "description": "<p>Lookup nodes by a list of IDs.</p>",
      "args": [
        {
          "name": "ids",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "description": "<p>The list of node IDs.</p>"
        }
      ]
    },
    {
      "name": "organization",
      "type": "Organization",
      "kind": "objects",
      "id": "organization",
      "href": "/graphql/reference/objects#organization",
      "description": "<p>Lookup a organization by login.</p>",
      "args": [
        {
          "name": "login",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The organization's login.</p>"
        }
      ]
    },
    {
      "name": "organizations",
      "type": "OrganizationConnection!",
      "kind": "objects",
      "id": "organizationconnection",
      "href": "/graphql/reference/objects#organizationconnection",
      "description": "<p>A list of organizations.</p>",
      "args": [
        {
          "name": "after",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
        },
        {
          "name": "before",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
        },
        {
          "name": "first",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
        },
        {
          "name": "last",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
        },
        {
          "name": "orderBy",
          "type": "OrganizationOrder",
          "id": "organizationorder",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#organizationorder",
          "description": "<p>Ordering options for the User's organizations.</p>"
        }
      ]
    },
    {
      "name": "rateLimit",
      "type": "RateLimit",
      "kind": "objects",
      "id": "ratelimit",
      "href": "/graphql/reference/objects#ratelimit",
      "description": "<p>The client's rate limit information.</p>",
      "args": [
        {
          "name": "dryRun",
          "defaultValue": false,
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "description": "<p>If true, calculate the cost for the query without evaluating it.</p>"
        }
      ]
    },
    {
      "name": "relay",
      "type": "Query!",
      "kind": "objects",
      "id": "query",
      "href": "/graphql/reference/objects#query",
      "description": "<p>Workaround for re-exposing the root query object. (Refer to\n<a href=\"https://github.com/facebook/relay/issues/112\">https://github.com/facebook/relay/issues/112</a> for more information.).</p>",
      "args": []
    },
    {
      "name": "repository",
      "type": "Repository",
      "kind": "objects",
      "id": "repository",
      "href": "/graphql/reference/objects#repository",
      "description": "<p>Lookup a given repository by the owner and repository name.</p>",
      "args": [
        {
          "name": "followRenames",
          "defaultValue": true,
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "description": "<p>Follow repository renames. If disabled, a repository referenced by its old name will return an error.</p>"
        },
        {
          "name": "name",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The name of the repository.</p>"
        },
        {
          "name": "owner",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The login field of a user or organization.</p>"
        }
      ]
    },
    {
      "name": "repositoryOwner",
      "type": "RepositoryOwner",
      "kind": "interfaces",
      "id": "repositoryowner",
      "href": "/graphql/reference/interfaces#repositoryowner",
      "description": "<p>Lookup a repository owner (ie. either a User or an Organization) by login.</p>",
      "args": [
        {
          "name": "login",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The username to lookup the owner by.</p>"
        }
      ]
    },
    {
      "name": "resource",
      "type": "UniformResourceLocatable",
      "kind": "interfaces",
      "id": "uniformresourcelocatable",
      "href": "/graphql/reference/interfaces#uniformresourcelocatable",
      "description": "<p>Lookup resource by a URL.</p>",
      "args": [
        {
          "name": "url",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "description": "<p>The URL.</p>"
        }
      ]
    },
    {
      "name": "search",
      "type": "SearchResultItemConnection!",
      "kind": "objects",
      "id": "searchresultitemconnection",
      "href": "/graphql/reference/objects#searchresultitemconnection",
      "description": "<p>Perform a search across resources, returning a maximum of 1,000 results.</p>",
      "args": [
        {
          "name": "after",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
        },
        {
          "name": "before",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
        },
        {
          "name": "first",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
        },
        {
          "name": "last",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
        },
        {
          "name": "query",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The search string to look for.</p>"
        },
        {
          "name": "type",
          "type": "SearchType!",
          "id": "searchtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#searchtype",
          "description": "<p>The types of search items to search within.</p>"
        }
      ]
    },
    {
      "name": "securityAdvisories",
      "type": "SecurityAdvisoryConnection!",
      "kind": "objects",
      "id": "securityadvisoryconnection",
      "href": "/graphql/reference/objects#securityadvisoryconnection",
      "description": "<p>GitHub Security Advisories.</p>",
      "args": [
        {
          "name": "after",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
        },
        {
          "name": "before",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
        },
        {
          "name": "classifications",
          "type": "[SecurityAdvisoryClassification!]",
          "id": "securityadvisoryclassification",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryclassification",
          "description": "<p>A list of classifications to filter advisories by.</p>"
        },
        {
          "name": "first",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
        },
        {
          "name": "last",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
        },
        {
          "name": "publishedSince",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime",
          "description": "<p>Filter advisories to those published since a time in the past.</p>"
        },
        {
          "name": "updatedSince",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime",
          "description": "<p>Filter advisories to those updated since a time in the past.</p>"
        }
      ]
    },
    {
      "name": "securityAdvisory",
      "type": "SecurityAdvisory",
      "kind": "objects",
      "id": "securityadvisory",
      "href": "/graphql/reference/objects#securityadvisory",
      "description": "<p>Fetch a Security Advisory by its GHSA ID.</p>",
      "args": [
        {
          "name": "ghsaId",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>GitHub Security Advisory ID.</p>"
        }
      ]
    },
    {
      "name": "securityVulnerabilities",
      "type": "SecurityVulnerabilityConnection!",
      "kind": "objects",
      "id": "securityvulnerabilityconnection",
      "href": "/graphql/reference/objects#securityvulnerabilityconnection",
      "description": "<p>Software Vulnerabilities documented by GitHub Security Advisories.</p>",
      "args": [
        {
          "name": "after",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
        },
        {
          "name": "before",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
        },
        {
          "name": "classifications",
          "type": "[SecurityAdvisoryClassification!]",
          "id": "securityadvisoryclassification",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryclassification",
          "description": "<p>A list of advisory classifications to filter vulnerabilities by.</p>"
        },
        {
          "name": "ecosystem",
          "type": "SecurityAdvisoryEcosystem",
          "id": "securityadvisoryecosystem",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryecosystem",
          "description": "<p>An ecosystem to filter vulnerabilities by.</p>"
        },
        {
          "name": "first",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
        },
        {
          "name": "last",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
        },
        {
          "name": "package",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A package name to filter vulnerabilities by.</p>"
        },
        {
          "name": "severities",
          "type": "[SecurityAdvisorySeverity!]",
          "id": "securityadvisoryseverity",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryseverity",
          "description": "<p>A list of severities to filter vulnerabilities by.</p>"
        }
      ]
    },
    {
      "name": "topic",
      "type": "Topic",
      "kind": "objects",
      "id": "topic",
      "href": "/graphql/reference/objects#topic",
      "description": "<p>Look up a topic by name.</p>",
      "args": [
        {
          "name": "name",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The topic's name.</p>"
        }
      ]
    },
    {
      "name": "user",
      "type": "User",
      "kind": "objects",
      "id": "user",
      "href": "/graphql/reference/objects#user",
      "description": "<p>Lookup a user by login.</p>",
      "args": [
        {
          "name": "login",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The user's login.</p>"
        }
      ]
    },
    {
      "name": "users",
      "type": "UserConnection!",
      "kind": "objects",
      "id": "userconnection",
      "href": "/graphql/reference/objects#userconnection",
      "description": "<p>A list of users.</p>",
      "args": [
        {
          "name": "after",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
        },
        {
          "name": "before",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
        },
        {
          "name": "first",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
        },
        {
          "name": "last",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
        }
      ]
    },
    {
      "name": "viewer",
      "type": "User!",
      "kind": "objects",
      "id": "user",
      "href": "/graphql/reference/objects#user",
      "description": "<p>The currently authenticated user.</p>",
      "args": []
    }
  ],
  "mutations": [
    {
      "name": "abortQueuedMigrations",
      "kind": "mutations",
      "id": "abortqueuedmigrations",
      "href": "/graphql/reference/mutations#abortqueuedmigrations",
      "description": "<p>Clear all of a customer's queued migrations.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AbortQueuedMigrationsInput!",
          "id": "abortqueuedmigrationsinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#abortqueuedmigrationsinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "success",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "description": "<p>Did the operation succeed?.</p>"
        }
      ]
    },
    {
      "name": "addAssigneesToAssignable",
      "kind": "mutations",
      "id": "addassigneestoassignable",
      "href": "/graphql/reference/mutations#addassigneestoassignable",
      "description": "<p>Adds assignees to an assignable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddAssigneesToAssignableInput!",
          "id": "addassigneestoassignableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addassigneestoassignableinput"
        }
      ],
      "returnFields": [
        {
          "name": "assignable",
          "type": "Assignable",
          "id": "assignable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#assignable",
          "description": "<p>The item that was assigned.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "addComment",
      "kind": "mutations",
      "id": "addcomment",
      "href": "/graphql/reference/mutations#addcomment",
      "description": "<p>Adds a comment to an Issue or Pull Request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddCommentInput!",
          "id": "addcommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addcommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "commentEdge",
          "type": "IssueCommentEdge",
          "id": "issuecommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentedge",
          "description": "<p>The edge from the subject's comment connection.</p>"
        },
        {
          "name": "subject",
          "type": "Node",
          "id": "node",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#node",
          "description": "<p>The subject.</p>"
        },
        {
          "name": "timelineEdge",
          "type": "IssueTimelineItemEdge",
          "id": "issuetimelineitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineitemedge",
          "description": "<p>The edge from the subject's timeline connection.</p>"
        }
      ]
    },
    {
      "name": "addDiscussionComment",
      "kind": "mutations",
      "id": "adddiscussioncomment",
      "href": "/graphql/reference/mutations#adddiscussioncomment",
      "description": "<p>Adds a comment to a Discussion, possibly as a reply to another comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddDiscussionCommentInput!",
          "id": "adddiscussioncommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#adddiscussioncommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "comment",
          "type": "DiscussionComment",
          "id": "discussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncomment",
          "description": "<p>The newly created discussion comment.</p>"
        }
      ]
    },
    {
      "name": "addDiscussionPollVote",
      "kind": "mutations",
      "id": "adddiscussionpollvote",
      "href": "/graphql/reference/mutations#adddiscussionpollvote",
      "description": "<p>Vote for an option in a discussion poll.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddDiscussionPollVoteInput!",
          "id": "adddiscussionpollvoteinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#adddiscussionpollvoteinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pollOption",
          "type": "DiscussionPollOption",
          "id": "discussionpolloption",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionpolloption",
          "description": "<p>The poll option that a vote was added to.</p>"
        }
      ]
    },
    {
      "name": "addEnterpriseAdmin",
      "kind": "mutations",
      "id": "addenterpriseadmin",
      "href": "/graphql/reference/mutations#addenterpriseadmin",
      "description": "<p>Adds an administrator to the global enterprise account.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddEnterpriseAdminInput!",
          "id": "addenterpriseadmininput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addenterpriseadmininput"
        }
      ],
      "returnFields": [
        {
          "name": "admin",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "description": "<p>The user who was added as an administrator.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The updated enterprise.</p>"
        },
        {
          "name": "role",
          "type": "EnterpriseAdministratorRole",
          "id": "enterpriseadministratorrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseadministratorrole",
          "description": "<p>The role of the administrator.</p>"
        },
        {
          "name": "viewer",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "description": "<p>The viewer performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "addEnterpriseOrganizationMember",
      "kind": "mutations",
      "id": "addenterpriseorganizationmember",
      "href": "/graphql/reference/mutations#addenterpriseorganizationmember",
      "description": "<p>Adds enterprise members to an organization within the enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddEnterpriseOrganizationMemberInput!",
          "id": "addenterpriseorganizationmemberinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addenterpriseorganizationmemberinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "users",
          "type": "[User!]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "description": "<p>The users who were added to the organization.</p>"
        }
      ]
    },
    {
      "name": "addLabelsToLabelable",
      "kind": "mutations",
      "id": "addlabelstolabelable",
      "href": "/graphql/reference/mutations#addlabelstolabelable",
      "description": "<p>Adds labels to a labelable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddLabelsToLabelableInput!",
          "id": "addlabelstolabelableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addlabelstolabelableinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "labelable",
          "type": "Labelable",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable",
          "description": "<p>The item that was labeled.</p>"
        }
      ]
    },
    {
      "name": "addProjectCard",
      "kind": "mutations",
      "id": "addprojectcard",
      "href": "/graphql/reference/mutations#addprojectcard",
      "description": "<p>Adds a card to a ProjectColumn. Either <code>contentId</code> or <code>note</code> must be provided but <strong>not</strong> both.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddProjectCardInput!",
          "id": "addprojectcardinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addprojectcardinput"
        }
      ],
      "returnFields": [
        {
          "name": "cardEdge",
          "type": "ProjectCardEdge",
          "id": "projectcardedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardedge",
          "description": "<p>The edge from the ProjectColumn's card connection.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectColumn",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn",
          "description": "<p>The ProjectColumn.</p>"
        }
      ]
    },
    {
      "name": "addProjectColumn",
      "kind": "mutations",
      "id": "addprojectcolumn",
      "href": "/graphql/reference/mutations#addprojectcolumn",
      "description": "<p>Adds a column to a Project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddProjectColumnInput!",
          "id": "addprojectcolumninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addprojectcolumninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "columnEdge",
          "type": "ProjectColumnEdge",
          "id": "projectcolumnedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumnedge",
          "description": "<p>The edge from the project's column connection.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The project.</p>"
        }
      ]
    },
    {
      "name": "addProjectV2DraftIssue",
      "kind": "mutations",
      "id": "addprojectv2draftissue",
      "href": "/graphql/reference/mutations#addprojectv2draftissue",
      "description": "<p>Creates a new draft issue and add it to a Project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddProjectV2DraftIssueInput!",
          "id": "addprojectv2draftissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addprojectv2draftissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectItem",
          "type": "ProjectV2Item",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item",
          "description": "<p>The draft issue added to the project.</p>"
        }
      ]
    },
    {
      "name": "addProjectV2ItemById",
      "kind": "mutations",
      "id": "addprojectv2itembyid",
      "href": "/graphql/reference/mutations#addprojectv2itembyid",
      "description": "<p>Links an existing content instance to a Project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddProjectV2ItemByIdInput!",
          "id": "addprojectv2itembyidinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addprojectv2itembyidinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "item",
          "type": "ProjectV2Item",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item",
          "description": "<p>The item added to the project.</p>"
        }
      ]
    },
    {
      "name": "addPullRequestReview",
      "kind": "mutations",
      "id": "addpullrequestreview",
      "href": "/graphql/reference/mutations#addpullrequestreview",
      "description": "<p>Adds a review to a Pull Request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddPullRequestReviewInput!",
          "id": "addpullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addpullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The newly created pull request review.</p>"
        },
        {
          "name": "reviewEdge",
          "type": "PullRequestReviewEdge",
          "id": "pullrequestreviewedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewedge",
          "description": "<p>The edge from the pull request's review connection.</p>"
        }
      ]
    },
    {
      "name": "addPullRequestReviewComment",
      "kind": "mutations",
      "id": "addpullrequestreviewcomment",
      "href": "/graphql/reference/mutations#addpullrequestreviewcomment",
      "description": "<p>Adds a comment to a review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddPullRequestReviewCommentInput!",
          "id": "addpullrequestreviewcommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addpullrequestreviewcommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "comment",
          "type": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment",
          "description": "<p>The newly created comment.</p>"
        },
        {
          "name": "commentEdge",
          "type": "PullRequestReviewCommentEdge",
          "id": "pullrequestreviewcommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcommentedge",
          "description": "<p>The edge from the review's comment connection.</p>"
        }
      ]
    },
    {
      "name": "addPullRequestReviewThread",
      "kind": "mutations",
      "id": "addpullrequestreviewthread",
      "href": "/graphql/reference/mutations#addpullrequestreviewthread",
      "description": "<p>Adds a new thread to a pending Pull Request Review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddPullRequestReviewThreadInput!",
          "id": "addpullrequestreviewthreadinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addpullrequestreviewthreadinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "thread",
          "type": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthread",
          "description": "<p>The newly created thread.</p>"
        }
      ]
    },
    {
      "name": "addReaction",
      "kind": "mutations",
      "id": "addreaction",
      "href": "/graphql/reference/mutations#addreaction",
      "description": "<p>Adds a reaction to a subject.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddReactionInput!",
          "id": "addreactioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addreactioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "reaction",
          "type": "Reaction",
          "id": "reaction",
          "kind": "objects",
          "href": "/graphql/reference/objects#reaction",
          "description": "<p>The reaction object.</p>"
        },
        {
          "name": "reactionGroups",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup",
          "description": "<p>The reaction groups for the subject.</p>"
        },
        {
          "name": "subject",
          "type": "Reactable",
          "id": "reactable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#reactable",
          "description": "<p>The reactable subject.</p>"
        }
      ]
    },
    {
      "name": "addStar",
      "kind": "mutations",
      "id": "addstar",
      "href": "/graphql/reference/mutations#addstar",
      "description": "<p>Adds a star to a Starrable.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddStarInput!",
          "id": "addstarinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addstarinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "starrable",
          "type": "Starrable",
          "id": "starrable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#starrable",
          "description": "<p>The starrable.</p>"
        }
      ]
    },
    {
      "name": "addUpvote",
      "kind": "mutations",
      "id": "addupvote",
      "href": "/graphql/reference/mutations#addupvote",
      "description": "<p>Add an upvote to a discussion or discussion comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddUpvoteInput!",
          "id": "addupvoteinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addupvoteinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "subject",
          "type": "Votable",
          "id": "votable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#votable",
          "description": "<p>The votable subject.</p>"
        }
      ]
    },
    {
      "name": "addVerifiableDomain",
      "kind": "mutations",
      "id": "addverifiabledomain",
      "href": "/graphql/reference/mutations#addverifiabledomain",
      "description": "<p>Adds a verifiable domain to an owning account.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddVerifiableDomainInput!",
          "id": "addverifiabledomaininput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addverifiabledomaininput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "domain",
          "type": "VerifiableDomain",
          "id": "verifiabledomain",
          "kind": "objects",
          "href": "/graphql/reference/objects#verifiabledomain",
          "description": "<p>The verifiable domain that was added.</p>"
        }
      ]
    },
    {
      "name": "approveDeployments",
      "kind": "mutations",
      "id": "approvedeployments",
      "href": "/graphql/reference/mutations#approvedeployments",
      "description": "<p>Approve all pending deployments under one or more environments.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ApproveDeploymentsInput!",
          "id": "approvedeploymentsinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#approvedeploymentsinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deployments",
          "type": "[Deployment!]",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment",
          "description": "<p>The affected deployments.</p>"
        }
      ]
    },
    {
      "name": "approveVerifiableDomain",
      "kind": "mutations",
      "id": "approveverifiabledomain",
      "href": "/graphql/reference/mutations#approveverifiabledomain",
      "description": "<p>Approve a verifiable domain for notification delivery.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ApproveVerifiableDomainInput!",
          "id": "approveverifiabledomaininput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#approveverifiabledomaininput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "domain",
          "type": "VerifiableDomain",
          "id": "verifiabledomain",
          "kind": "objects",
          "href": "/graphql/reference/objects#verifiabledomain",
          "description": "<p>The verifiable domain that was approved.</p>"
        }
      ]
    },
    {
      "name": "archiveProjectV2Item",
      "kind": "mutations",
      "id": "archiveprojectv2item",
      "href": "/graphql/reference/mutations#archiveprojectv2item",
      "description": "<p>Archives a ProjectV2Item.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ArchiveProjectV2ItemInput!",
          "id": "archiveprojectv2iteminput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#archiveprojectv2iteminput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "item",
          "type": "ProjectV2Item",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item",
          "description": "<p>The item archived from the project.</p>"
        }
      ]
    },
    {
      "name": "archiveRepository",
      "kind": "mutations",
      "id": "archiverepository",
      "href": "/graphql/reference/mutations#archiverepository",
      "description": "<p>Marks a repository as archived.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ArchiveRepositoryInput!",
          "id": "archiverepositoryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#archiverepositoryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The repository that was marked as archived.</p>"
        }
      ]
    },
    {
      "name": "changeUserStatus",
      "kind": "mutations",
      "id": "changeuserstatus",
      "href": "/graphql/reference/mutations#changeuserstatus",
      "description": "<p>Update your status on GitHub.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ChangeUserStatusInput!",
          "id": "changeuserstatusinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#changeuserstatusinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "status",
          "type": "UserStatus",
          "id": "userstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatus",
          "description": "<p>Your updated status.</p>"
        }
      ]
    },
    {
      "name": "clearLabelsFromLabelable",
      "kind": "mutations",
      "id": "clearlabelsfromlabelable",
      "href": "/graphql/reference/mutations#clearlabelsfromlabelable",
      "description": "<p>Clears all labels from a labelable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ClearLabelsFromLabelableInput!",
          "id": "clearlabelsfromlabelableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#clearlabelsfromlabelableinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "labelable",
          "type": "Labelable",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable",
          "description": "<p>The item that was unlabeled.</p>"
        }
      ]
    },
    {
      "name": "clearProjectV2ItemFieldValue",
      "kind": "mutations",
      "id": "clearprojectv2itemfieldvalue",
      "href": "/graphql/reference/mutations#clearprojectv2itemfieldvalue",
      "description": "<p>This mutation clears the value of a field for an item in a Project. Currently\nonly text, number, date, assignees, labels, single-select, iteration and\nmilestone fields are supported.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ClearProjectV2ItemFieldValueInput!",
          "id": "clearprojectv2itemfieldvalueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#clearprojectv2itemfieldvalueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2Item",
          "type": "ProjectV2Item",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item",
          "description": "<p>The updated item.</p>"
        }
      ]
    },
    {
      "name": "cloneProject",
      "kind": "mutations",
      "id": "cloneproject",
      "href": "/graphql/reference/mutations#cloneproject",
      "description": "<p>Creates a new project by cloning configuration from an existing project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CloneProjectInput!",
          "id": "cloneprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#cloneprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "jobStatusId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The id of the JobStatus for populating cloned fields.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The new cloned project.</p>"
        }
      ]
    },
    {
      "name": "cloneTemplateRepository",
      "kind": "mutations",
      "id": "clonetemplaterepository",
      "href": "/graphql/reference/mutations#clonetemplaterepository",
      "description": "<p>Create a new repository with the same files and directory structure as a template repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CloneTemplateRepositoryInput!",
          "id": "clonetemplaterepositoryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#clonetemplaterepositoryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The new repository.</p>"
        }
      ]
    },
    {
      "name": "closeDiscussion",
      "kind": "mutations",
      "id": "closediscussion",
      "href": "/graphql/reference/mutations#closediscussion",
      "description": "<p>Close a discussion.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CloseDiscussionInput!",
          "id": "closediscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#closediscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "discussion",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion",
          "description": "<p>The discussion that was closed.</p>"
        }
      ]
    },
    {
      "name": "closeIssue",
      "kind": "mutations",
      "id": "closeissue",
      "href": "/graphql/reference/mutations#closeissue",
      "description": "<p>Close an issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CloseIssueInput!",
          "id": "closeissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#closeissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue that was closed.</p>"
        }
      ]
    },
    {
      "name": "closePullRequest",
      "kind": "mutations",
      "id": "closepullrequest",
      "href": "/graphql/reference/mutations#closepullrequest",
      "description": "<p>Close a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ClosePullRequestInput!",
          "id": "closepullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#closepullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that was closed.</p>"
        }
      ]
    },
    {
      "name": "convertProjectCardNoteToIssue",
      "kind": "mutations",
      "id": "convertprojectcardnotetoissue",
      "href": "/graphql/reference/mutations#convertprojectcardnotetoissue",
      "description": "<p>Convert a project note card to one associated with a newly created issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ConvertProjectCardNoteToIssueInput!",
          "id": "convertprojectcardnotetoissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#convertprojectcardnotetoissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectCard",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "description": "<p>The updated ProjectCard.</p>"
        }
      ]
    },
    {
      "name": "convertPullRequestToDraft",
      "kind": "mutations",
      "id": "convertpullrequesttodraft",
      "href": "/graphql/reference/mutations#convertpullrequesttodraft",
      "description": "<p>Converts a pull request to draft.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ConvertPullRequestToDraftInput!",
          "id": "convertpullrequesttodraftinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#convertpullrequesttodraftinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that is now a draft.</p>"
        }
      ]
    },
    {
      "name": "copyProjectV2",
      "kind": "mutations",
      "id": "copyprojectv2",
      "href": "/graphql/reference/mutations#copyprojectv2",
      "description": "<p>Copy a project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CopyProjectV2Input!",
          "id": "copyprojectv2input",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#copyprojectv2input"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "description": "<p>The copied project.</p>"
        }
      ]
    },
    {
      "name": "createAttributionInvitation",
      "kind": "mutations",
      "id": "createattributioninvitation",
      "href": "/graphql/reference/mutations#createattributioninvitation",
      "description": "<p>Invites a user to claim reattributable data.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateAttributionInvitationInput!",
          "id": "createattributioninvitationinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createattributioninvitationinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "owner",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization",
          "description": "<p>The owner scoping the reattributable data.</p>"
        },
        {
          "name": "source",
          "type": "Claimable",
          "id": "claimable",
          "kind": "unions",
          "href": "/graphql/reference/unions#claimable",
          "description": "<p>The account owning the data to reattribute.</p>"
        },
        {
          "name": "target",
          "type": "Claimable",
          "id": "claimable",
          "kind": "unions",
          "href": "/graphql/reference/unions#claimable",
          "description": "<p>The account which may claim the data.</p>"
        }
      ]
    },
    {
      "name": "createBranchProtectionRule",
      "kind": "mutations",
      "id": "createbranchprotectionrule",
      "href": "/graphql/reference/mutations#createbranchprotectionrule",
      "description": "<p>Create a new branch protection rule.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateBranchProtectionRuleInput!",
          "id": "createbranchprotectionruleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createbranchprotectionruleinput"
        }
      ],
      "returnFields": [
        {
          "name": "branchProtectionRule",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule",
          "description": "<p>The newly created BranchProtectionRule.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "createCheckRun",
      "kind": "mutations",
      "id": "createcheckrun",
      "href": "/graphql/reference/mutations#createcheckrun",
      "description": "<p>Create a check run.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateCheckRunInput!",
          "id": "createcheckruninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createcheckruninput"
        }
      ],
      "returnFields": [
        {
          "name": "checkRun",
          "type": "CheckRun",
          "id": "checkrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrun",
          "description": "<p>The newly created check run.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "createCheckSuite",
      "kind": "mutations",
      "id": "createchecksuite",
      "href": "/graphql/reference/mutations#createchecksuite",
      "description": "<p>Create a check suite.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateCheckSuiteInput!",
          "id": "createchecksuiteinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createchecksuiteinput"
        }
      ],
      "returnFields": [
        {
          "name": "checkSuite",
          "type": "CheckSuite",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite",
          "description": "<p>The newly created check suite.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "createCommitOnBranch",
      "kind": "mutations",
      "id": "createcommitonbranch",
      "href": "/graphql/reference/mutations#createcommitonbranch",
      "description": "<p>Appends a commit to the given branch as the authenticated user.</p>\n<p>This mutation creates a commit whose parent is the HEAD of the provided\nbranch and also updates that branch to point to the new commit.\nIt can be thought of as similar to <code>git commit</code>.</p>\n<h3 id=\"locating-a-branch\" tabindex=\"-1\"><a class=\"heading-link\" href=\"#locating-a-branch\">Locating a Branch<span class=\"heading-link-symbol\" aria-hidden=\"true\"></span></a></h3>\n<p>Commits are appended to a <code>branch</code> of type <code>Ref</code>.\nThis must refer to a git branch (i.e.  the fully qualified path must\nbegin with <code>refs/heads/</code>, although including this prefix is optional.</p>\n<p>Callers may specify the <code>branch</code> to commit to either by its global node\nID or by passing both of <code>repositoryNameWithOwner</code> and <code>refName</code>.  For\nmore details see the documentation for <code>CommittableBranch</code>.</p>\n<h3 id=\"describing-changes\" tabindex=\"-1\"><a class=\"heading-link\" href=\"#describing-changes\">Describing Changes<span class=\"heading-link-symbol\" aria-hidden=\"true\"></span></a></h3>\n<p><code>fileChanges</code> are specified as a <code>FilesChanges</code> object describing\n<code>FileAdditions</code> and <code>FileDeletions</code>.</p>\n<p>Please see the documentation for <code>FileChanges</code> for more information on\nhow to use this argument to describe any set of file changes.</p>\n<h3 id=\"authorship\" tabindex=\"-1\"><a class=\"heading-link\" href=\"#authorship\">Authorship<span class=\"heading-link-symbol\" aria-hidden=\"true\"></span></a></h3>\n<p>Similar to the web commit interface, this mutation does not support\nspecifying the author or committer of the commit and will not add\nsupport for this in the future.</p>\n<p>A commit created by a successful execution of this mutation will be\nauthored by the owner of the credential which authenticates the API\nrequest.  The committer will be identical to that of commits authored\nusing the web interface.</p>\n<p>If you need full control over author and committer information, please\nuse the Git Database REST API instead.</p>\n<h3 id=\"commit-signing\" tabindex=\"-1\"><a class=\"heading-link\" href=\"#commit-signing\">Commit Signing<span class=\"heading-link-symbol\" aria-hidden=\"true\"></span></a></h3>\n<p>Commits made using this mutation are automatically signed by GitHub if\nsupported and will be marked as verified in the user interface.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateCommitOnBranchInput!",
          "id": "createcommitonbranchinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createcommitonbranchinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "commit",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit",
          "description": "<p>The new commit.</p>"
        },
        {
          "name": "ref",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref",
          "description": "<p>The ref which has been updated to point to the new commit.</p>"
        }
      ]
    },
    {
      "name": "createDeployment",
      "kind": "mutations",
      "id": "createdeployment",
      "href": "/graphql/reference/mutations#createdeployment",
      "description": "<p>Creates a new deployment event.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Deployments preview",
        "description": "This preview adds support for deployments mutations and new deployments features.",
        "toggled_by": "flash-preview",
        "toggled_on": [
          "DeploymentStatus.environment",
          "Mutation.createDeploymentStatus",
          "Mutation.createDeployment"
        ],
        "owning_teams": [
          "@github/c2c-actions-service"
        ],
        "accept_header": "application/vnd.github.flash-preview+json",
        "href": "/graphql/overview/schema-previews#deployments-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateDeploymentInput!",
          "id": "createdeploymentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createdeploymentinput"
        }
      ],
      "returnFields": [
        {
          "name": "autoMerged",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "description": "<p>True if the default branch has been auto-merged into the deployment ref.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deployment",
          "type": "Deployment",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment",
          "description": "<p>The new deployment.</p>"
        }
      ]
    },
    {
      "name": "createDeploymentStatus",
      "kind": "mutations",
      "id": "createdeploymentstatus",
      "href": "/graphql/reference/mutations#createdeploymentstatus",
      "description": "<p>Create a deployment status.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Deployments preview",
        "description": "This preview adds support for deployments mutations and new deployments features.",
        "toggled_by": "flash-preview",
        "toggled_on": [
          "DeploymentStatus.environment",
          "Mutation.createDeploymentStatus",
          "Mutation.createDeployment"
        ],
        "owning_teams": [
          "@github/c2c-actions-service"
        ],
        "accept_header": "application/vnd.github.flash-preview+json",
        "href": "/graphql/overview/schema-previews#deployments-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateDeploymentStatusInput!",
          "id": "createdeploymentstatusinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createdeploymentstatusinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deploymentStatus",
          "type": "DeploymentStatus",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus",
          "description": "<p>The new deployment status.</p>"
        }
      ]
    },
    {
      "name": "createDiscussion",
      "kind": "mutations",
      "id": "creatediscussion",
      "href": "/graphql/reference/mutations#creatediscussion",
      "description": "<p>Create a discussion.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateDiscussionInput!",
          "id": "creatediscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#creatediscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "discussion",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion",
          "description": "<p>The discussion that was just created.</p>"
        }
      ]
    },
    {
      "name": "createEnterpriseOrganization",
      "kind": "mutations",
      "id": "createenterpriseorganization",
      "href": "/graphql/reference/mutations#createenterpriseorganization",
      "description": "<p>Creates an organization as part of an enterprise account.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateEnterpriseOrganizationInput!",
          "id": "createenterpriseorganizationinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createenterpriseorganizationinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise that owns the created organization.</p>"
        },
        {
          "name": "organization",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization",
          "description": "<p>The organization that was created.</p>"
        }
      ]
    },
    {
      "name": "createEnvironment",
      "kind": "mutations",
      "id": "createenvironment",
      "href": "/graphql/reference/mutations#createenvironment",
      "description": "<p>Creates an environment or simply returns it if already exists.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateEnvironmentInput!",
          "id": "createenvironmentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createenvironmentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "environment",
          "type": "Environment",
          "id": "environment",
          "kind": "objects",
          "href": "/graphql/reference/objects#environment",
          "description": "<p>The new or existing environment.</p>"
        }
      ]
    },
    {
      "name": "createIpAllowListEntry",
      "kind": "mutations",
      "id": "createipallowlistentry",
      "href": "/graphql/reference/mutations#createipallowlistentry",
      "description": "<p>Creates a new IP allow list entry.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateIpAllowListEntryInput!",
          "id": "createipallowlistentryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createipallowlistentryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "ipAllowListEntry",
          "type": "IpAllowListEntry",
          "id": "ipallowlistentry",
          "kind": "objects",
          "href": "/graphql/reference/objects#ipallowlistentry",
          "description": "<p>The IP allow list entry that was created.</p>"
        }
      ]
    },
    {
      "name": "createIssue",
      "kind": "mutations",
      "id": "createissue",
      "href": "/graphql/reference/mutations#createissue",
      "description": "<p>Creates a new issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateIssueInput!",
          "id": "createissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The new issue.</p>"
        }
      ]
    },
    {
      "name": "createLabel",
      "kind": "mutations",
      "id": "createlabel",
      "href": "/graphql/reference/mutations#createlabel",
      "description": "<p>Creates a new label.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateLabelInput!",
          "id": "createlabelinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createlabelinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "label",
          "type": "Label",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label",
          "description": "<p>The new label.</p>"
        }
      ]
    },
    {
      "name": "createLinkedBranch",
      "kind": "mutations",
      "id": "createlinkedbranch",
      "href": "/graphql/reference/mutations#createlinkedbranch",
      "description": "<p>Create a branch linked to an issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateLinkedBranchInput!",
          "id": "createlinkedbranchinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createlinkedbranchinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "linkedBranch",
          "type": "LinkedBranch",
          "id": "linkedbranch",
          "kind": "objects",
          "href": "/graphql/reference/objects#linkedbranch",
          "description": "<p>The new branch issue reference.</p>"
        }
      ]
    },
    {
      "name": "createMigrationSource",
      "kind": "mutations",
      "id": "createmigrationsource",
      "href": "/graphql/reference/mutations#createmigrationsource",
      "description": "<p>Creates a GitHub Enterprise Importer (GEI) migration source.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateMigrationSourceInput!",
          "id": "createmigrationsourceinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createmigrationsourceinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "migrationSource",
          "type": "MigrationSource",
          "id": "migrationsource",
          "kind": "objects",
          "href": "/graphql/reference/objects#migrationsource",
          "description": "<p>The created migration source.</p>"
        }
      ]
    },
    {
      "name": "createProject",
      "kind": "mutations",
      "id": "createproject",
      "href": "/graphql/reference/mutations#createproject",
      "description": "<p>Creates a new project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateProjectInput!",
          "id": "createprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The new project.</p>"
        }
      ]
    },
    {
      "name": "createProjectV2",
      "kind": "mutations",
      "id": "createprojectv2",
      "href": "/graphql/reference/mutations#createprojectv2",
      "description": "<p>Creates a new project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateProjectV2Input!",
          "id": "createprojectv2input",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createprojectv2input"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "description": "<p>The new project.</p>"
        }
      ]
    },
    {
      "name": "createProjectV2Field",
      "kind": "mutations",
      "id": "createprojectv2field",
      "href": "/graphql/reference/mutations#createprojectv2field",
      "description": "<p>Create a new project field.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateProjectV2FieldInput!",
          "id": "createprojectv2fieldinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createprojectv2fieldinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2Field",
          "type": "ProjectV2FieldConfiguration",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration",
          "description": "<p>The new field.</p>"
        }
      ]
    },
    {
      "name": "createPullRequest",
      "kind": "mutations",
      "id": "createpullrequest",
      "href": "/graphql/reference/mutations#createpullrequest",
      "description": "<p>Create a new pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreatePullRequestInput!",
          "id": "createpullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createpullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The new pull request.</p>"
        }
      ]
    },
    {
      "name": "createRef",
      "kind": "mutations",
      "id": "createref",
      "href": "/graphql/reference/mutations#createref",
      "description": "<p>Create a new Git Ref.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateRefInput!",
          "id": "createrefinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createrefinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "ref",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref",
          "description": "<p>The newly created ref.</p>"
        }
      ]
    },
    {
      "name": "createRepository",
      "kind": "mutations",
      "id": "createrepository",
      "href": "/graphql/reference/mutations#createrepository",
      "description": "<p>Create a new repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateRepositoryInput!",
          "id": "createrepositoryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createrepositoryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The new repository.</p>"
        }
      ]
    },
    {
      "name": "createTeamDiscussion",
      "kind": "mutations",
      "id": "createteamdiscussion",
      "href": "/graphql/reference/mutations#createteamdiscussion",
      "description": "<p>Creates a new team discussion.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateTeamDiscussionInput!",
          "id": "createteamdiscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createteamdiscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "teamDiscussion",
          "type": "TeamDiscussion",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion",
          "description": "<p>The new discussion.</p>"
        }
      ]
    },
    {
      "name": "createTeamDiscussionComment",
      "kind": "mutations",
      "id": "createteamdiscussioncomment",
      "href": "/graphql/reference/mutations#createteamdiscussioncomment",
      "description": "<p>Creates a new team discussion comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateTeamDiscussionCommentInput!",
          "id": "createteamdiscussioncommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createteamdiscussioncommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "teamDiscussionComment",
          "type": "TeamDiscussionComment",
          "id": "teamdiscussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncomment",
          "description": "<p>The new comment.</p>"
        }
      ]
    },
    {
      "name": "deleteBranchProtectionRule",
      "kind": "mutations",
      "id": "deletebranchprotectionrule",
      "href": "/graphql/reference/mutations#deletebranchprotectionrule",
      "description": "<p>Delete a branch protection rule.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteBranchProtectionRuleInput!",
          "id": "deletebranchprotectionruleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletebranchprotectionruleinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteDeployment",
      "kind": "mutations",
      "id": "deletedeployment",
      "href": "/graphql/reference/mutations#deletedeployment",
      "description": "<p>Deletes a deployment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteDeploymentInput!",
          "id": "deletedeploymentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletedeploymentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteDiscussion",
      "kind": "mutations",
      "id": "deletediscussion",
      "href": "/graphql/reference/mutations#deletediscussion",
      "description": "<p>Delete a discussion and all of its replies.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteDiscussionInput!",
          "id": "deletediscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletediscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "discussion",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion",
          "description": "<p>The discussion that was just deleted.</p>"
        }
      ]
    },
    {
      "name": "deleteDiscussionComment",
      "kind": "mutations",
      "id": "deletediscussioncomment",
      "href": "/graphql/reference/mutations#deletediscussioncomment",
      "description": "<p>Delete a discussion comment. If it has replies, wipe it instead.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteDiscussionCommentInput!",
          "id": "deletediscussioncommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletediscussioncommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "comment",
          "type": "DiscussionComment",
          "id": "discussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncomment",
          "description": "<p>The discussion comment that was just deleted.</p>"
        }
      ]
    },
    {
      "name": "deleteEnvironment",
      "kind": "mutations",
      "id": "deleteenvironment",
      "href": "/graphql/reference/mutations#deleteenvironment",
      "description": "<p>Deletes an environment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteEnvironmentInput!",
          "id": "deleteenvironmentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteenvironmentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteIpAllowListEntry",
      "kind": "mutations",
      "id": "deleteipallowlistentry",
      "href": "/graphql/reference/mutations#deleteipallowlistentry",
      "description": "<p>Deletes an IP allow list entry.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteIpAllowListEntryInput!",
          "id": "deleteipallowlistentryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteipallowlistentryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "ipAllowListEntry",
          "type": "IpAllowListEntry",
          "id": "ipallowlistentry",
          "kind": "objects",
          "href": "/graphql/reference/objects#ipallowlistentry",
          "description": "<p>The IP allow list entry that was deleted.</p>"
        }
      ]
    },
    {
      "name": "deleteIssue",
      "kind": "mutations",
      "id": "deleteissue",
      "href": "/graphql/reference/mutations#deleteissue",
      "description": "<p>Deletes an Issue object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteIssueInput!",
          "id": "deleteissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The repository the issue belonged to.</p>"
        }
      ]
    },
    {
      "name": "deleteIssueComment",
      "kind": "mutations",
      "id": "deleteissuecomment",
      "href": "/graphql/reference/mutations#deleteissuecomment",
      "description": "<p>Deletes an IssueComment object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteIssueCommentInput!",
          "id": "deleteissuecommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteissuecommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteLabel",
      "kind": "mutations",
      "id": "deletelabel",
      "href": "/graphql/reference/mutations#deletelabel",
      "description": "<p>Deletes a label.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteLabelInput!",
          "id": "deletelabelinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletelabelinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteLinkedBranch",
      "kind": "mutations",
      "id": "deletelinkedbranch",
      "href": "/graphql/reference/mutations#deletelinkedbranch",
      "description": "<p>Unlink a branch from an issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteLinkedBranchInput!",
          "id": "deletelinkedbranchinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletelinkedbranchinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue the linked branch was unlinked from.</p>"
        }
      ]
    },
    {
      "name": "deletePackageVersion",
      "kind": "mutations",
      "id": "deletepackageversion",
      "href": "/graphql/reference/mutations#deletepackageversion",
      "description": "<p>Delete a package version.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Access to package version deletion preview",
        "description": "This preview adds support for the DeletePackageVersion mutation which enables deletion of private package versions.",
        "toggled_by": "package-deletes-preview",
        "toggled_on": [
          "Mutation.deletePackageVersion"
        ],
        "owning_teams": [
          "@github/pe-package-registry"
        ],
        "accept_header": "application/vnd.github.package-deletes-preview+json",
        "href": "/graphql/overview/schema-previews#access-to-package-version-deletion-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "DeletePackageVersionInput!",
          "id": "deletepackageversioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletepackageversioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "success",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "description": "<p>Whether or not the operation succeeded.</p>"
        }
      ]
    },
    {
      "name": "deleteProject",
      "kind": "mutations",
      "id": "deleteproject",
      "href": "/graphql/reference/mutations#deleteproject",
      "description": "<p>Deletes a project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectInput!",
          "id": "deleteprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "owner",
          "type": "ProjectOwner",
          "id": "projectowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#projectowner",
          "description": "<p>The repository or organization the project was removed from.</p>"
        }
      ]
    },
    {
      "name": "deleteProjectCard",
      "kind": "mutations",
      "id": "deleteprojectcard",
      "href": "/graphql/reference/mutations#deleteprojectcard",
      "description": "<p>Deletes a project card.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectCardInput!",
          "id": "deleteprojectcardinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectcardinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "column",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn",
          "description": "<p>The column the deleted card was in.</p>"
        },
        {
          "name": "deletedCardId",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "description": "<p>The deleted card ID.</p>"
        }
      ]
    },
    {
      "name": "deleteProjectColumn",
      "kind": "mutations",
      "id": "deleteprojectcolumn",
      "href": "/graphql/reference/mutations#deleteprojectcolumn",
      "description": "<p>Deletes a project column.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectColumnInput!",
          "id": "deleteprojectcolumninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectcolumninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deletedColumnId",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "description": "<p>The deleted column ID.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The project the deleted column was in.</p>"
        }
      ]
    },
    {
      "name": "deleteProjectV2",
      "kind": "mutations",
      "id": "deleteprojectv2",
      "href": "/graphql/reference/mutations#deleteprojectv2",
      "description": "<p>Delete a project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectV2Input!",
          "id": "deleteprojectv2input",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectv2input"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "description": "<p>The deleted Project.</p>"
        }
      ]
    },
    {
      "name": "deleteProjectV2Field",
      "kind": "mutations",
      "id": "deleteprojectv2field",
      "href": "/graphql/reference/mutations#deleteprojectv2field",
      "description": "<p>Delete a project field.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectV2FieldInput!",
          "id": "deleteprojectv2fieldinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectv2fieldinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2Field",
          "type": "ProjectV2FieldConfiguration",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration",
          "description": "<p>The deleted field.</p>"
        }
      ]
    },
    {
      "name": "deleteProjectV2Item",
      "kind": "mutations",
      "id": "deleteprojectv2item",
      "href": "/graphql/reference/mutations#deleteprojectv2item",
      "description": "<p>Deletes an item from a Project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectV2ItemInput!",
          "id": "deleteprojectv2iteminput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectv2iteminput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deletedItemId",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "description": "<p>The ID of the deleted item.</p>"
        }
      ]
    },
    {
      "name": "deleteProjectV2Workflow",
      "kind": "mutations",
      "id": "deleteprojectv2workflow",
      "href": "/graphql/reference/mutations#deleteprojectv2workflow",
      "description": "<p>Deletes a project workflow.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectV2WorkflowInput!",
          "id": "deleteprojectv2workflowinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectv2workflowinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deletedWorkflowId",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "description": "<p>The ID of the deleted workflow.</p>"
        },
        {
          "name": "projectV2",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "description": "<p>The project the deleted workflow was in.</p>"
        }
      ]
    },
    {
      "name": "deletePullRequestReview",
      "kind": "mutations",
      "id": "deletepullrequestreview",
      "href": "/graphql/reference/mutations#deletepullrequestreview",
      "description": "<p>Deletes a pull request review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeletePullRequestReviewInput!",
          "id": "deletepullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletepullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The deleted pull request review.</p>"
        }
      ]
    },
    {
      "name": "deletePullRequestReviewComment",
      "kind": "mutations",
      "id": "deletepullrequestreviewcomment",
      "href": "/graphql/reference/mutations#deletepullrequestreviewcomment",
      "description": "<p>Deletes a pull request review comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeletePullRequestReviewCommentInput!",
          "id": "deletepullrequestreviewcommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletepullrequestreviewcommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The pull request review the deleted comment belonged to.</p>"
        },
        {
          "name": "pullRequestReviewComment",
          "type": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment",
          "description": "<p>The deleted pull request review comment.</p>"
        }
      ]
    },
    {
      "name": "deleteRef",
      "kind": "mutations",
      "id": "deleteref",
      "href": "/graphql/reference/mutations#deleteref",
      "description": "<p>Delete a Git Ref.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteRefInput!",
          "id": "deleterefinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleterefinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteTeamDiscussion",
      "kind": "mutations",
      "id": "deleteteamdiscussion",
      "href": "/graphql/reference/mutations#deleteteamdiscussion",
      "description": "<p>Deletes a team discussion.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteTeamDiscussionInput!",
          "id": "deleteteamdiscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteteamdiscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteTeamDiscussionComment",
      "kind": "mutations",
      "id": "deleteteamdiscussioncomment",
      "href": "/graphql/reference/mutations#deleteteamdiscussioncomment",
      "description": "<p>Deletes a team discussion comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteTeamDiscussionCommentInput!",
          "id": "deleteteamdiscussioncommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteteamdiscussioncommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteVerifiableDomain",
      "kind": "mutations",
      "id": "deleteverifiabledomain",
      "href": "/graphql/reference/mutations#deleteverifiabledomain",
      "description": "<p>Deletes a verifiable domain.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteVerifiableDomainInput!",
          "id": "deleteverifiabledomaininput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteverifiabledomaininput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "owner",
          "type": "VerifiableDomainOwner",
          "id": "verifiabledomainowner",
          "kind": "unions",
          "href": "/graphql/reference/unions#verifiabledomainowner",
          "description": "<p>The owning account from which the domain was deleted.</p>"
        }
      ]
    },
    {
      "name": "disablePullRequestAutoMerge",
      "kind": "mutations",
      "id": "disablepullrequestautomerge",
      "href": "/graphql/reference/mutations#disablepullrequestautomerge",
      "description": "<p>Disable auto merge on the given pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DisablePullRequestAutoMergeInput!",
          "id": "disablepullrequestautomergeinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#disablepullrequestautomergeinput"
        }
      ],
      "returnFields": [
        {
          "name": "actor",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor",
          "description": "<p>Identifies the actor who performed the event.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request auto merge was disabled on.</p>"
        }
      ]
    },
    {
      "name": "dismissPullRequestReview",
      "kind": "mutations",
      "id": "dismisspullrequestreview",
      "href": "/graphql/reference/mutations#dismisspullrequestreview",
      "description": "<p>Dismisses an approved or rejected pull request review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DismissPullRequestReviewInput!",
          "id": "dismisspullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#dismisspullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The dismissed pull request review.</p>"
        }
      ]
    },
    {
      "name": "dismissRepositoryVulnerabilityAlert",
      "kind": "mutations",
      "id": "dismissrepositoryvulnerabilityalert",
      "href": "/graphql/reference/mutations#dismissrepositoryvulnerabilityalert",
      "description": "<p>Dismisses the Dependabot alert.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DismissRepositoryVulnerabilityAlertInput!",
          "id": "dismissrepositoryvulnerabilityalertinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#dismissrepositoryvulnerabilityalertinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repositoryVulnerabilityAlert",
          "type": "RepositoryVulnerabilityAlert",
          "id": "repositoryvulnerabilityalert",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalert",
          "description": "<p>The Dependabot alert that was dismissed.</p>"
        }
      ]
    },
    {
      "name": "enablePullRequestAutoMerge",
      "kind": "mutations",
      "id": "enablepullrequestautomerge",
      "href": "/graphql/reference/mutations#enablepullrequestautomerge",
      "description": "<p>Enable the default auto-merge on a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "EnablePullRequestAutoMergeInput!",
          "id": "enablepullrequestautomergeinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#enablepullrequestautomergeinput"
        }
      ],
      "returnFields": [
        {
          "name": "actor",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor",
          "description": "<p>Identifies the actor who performed the event.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request auto-merge was enabled on.</p>"
        }
      ]
    },
    {
      "name": "followOrganization",
      "kind": "mutations",
      "id": "followorganization",
      "href": "/graphql/reference/mutations#followorganization",
      "description": "<p>Follow an organization.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "FollowOrganizationInput!",
          "id": "followorganizationinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#followorganizationinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "organization",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization",
          "description": "<p>The organization that was followed.</p>"
        }
      ]
    },
    {
      "name": "followUser",
      "kind": "mutations",
      "id": "followuser",
      "href": "/graphql/reference/mutations#followuser",
      "description": "<p>Follow a user.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "FollowUserInput!",
          "id": "followuserinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#followuserinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "user",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "description": "<p>The user that was followed.</p>"
        }
      ]
    },
    {
      "name": "grantEnterpriseOrganizationsMigratorRole",
      "kind": "mutations",
      "id": "grantenterpriseorganizationsmigratorrole",
      "href": "/graphql/reference/mutations#grantenterpriseorganizationsmigratorrole",
      "description": "<p>Grant the migrator role to a user for all organizations under an enterprise account.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "GrantEnterpriseOrganizationsMigratorRoleInput!",
          "id": "grantenterpriseorganizationsmigratorroleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#grantenterpriseorganizationsmigratorroleinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "organizations",
          "type": "OrganizationConnection",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "description": "<p>The organizations that had the migrator role applied to for the given user.</p>"
        }
      ]
    },
    {
      "name": "grantMigratorRole",
      "kind": "mutations",
      "id": "grantmigratorrole",
      "href": "/graphql/reference/mutations#grantmigratorrole",
      "description": "<p>Grant the migrator role to a user or a team.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "GrantMigratorRoleInput!",
          "id": "grantmigratorroleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#grantmigratorroleinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "success",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "description": "<p>Did the operation succeed?.</p>"
        }
      ]
    },
    {
      "name": "importProject",
      "kind": "mutations",
      "id": "importproject",
      "href": "/graphql/reference/mutations#importproject",
      "description": "<p>Creates a new project by importing columns and a list of issues/PRs.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Import project preview",
        "description": "This preview adds support for importing projects.",
        "toggled_by": "slothette-preview",
        "toggled_on": [
          "Mutation.importProject"
        ],
        "owning_teams": [
          "@github/pe-issues-projects"
        ],
        "accept_header": "application/vnd.github.slothette-preview+json",
        "href": "/graphql/overview/schema-previews#import-project-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "ImportProjectInput!",
          "id": "importprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#importprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The new Project!.</p>"
        }
      ]
    },
    {
      "name": "linkProjectV2ToRepository",
      "kind": "mutations",
      "id": "linkprojectv2torepository",
      "href": "/graphql/reference/mutations#linkprojectv2torepository",
      "description": "<p>Links a project to a repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "LinkProjectV2ToRepositoryInput!",
          "id": "linkprojectv2torepositoryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#linkprojectv2torepositoryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The repository the project is linked to.</p>"
        }
      ]
    },
    {
      "name": "linkProjectV2ToTeam",
      "kind": "mutations",
      "id": "linkprojectv2toteam",
      "href": "/graphql/reference/mutations#linkprojectv2toteam",
      "description": "<p>Links a project to a team.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "LinkProjectV2ToTeamInput!",
          "id": "linkprojectv2toteaminput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#linkprojectv2toteaminput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "team",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team",
          "description": "<p>The team the project is linked to.</p>"
        }
      ]
    },
    {
      "name": "linkRepositoryToProject",
      "kind": "mutations",
      "id": "linkrepositorytoproject",
      "href": "/graphql/reference/mutations#linkrepositorytoproject",
      "description": "<p>Creates a repository link for a project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "LinkRepositoryToProjectInput!",
          "id": "linkrepositorytoprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#linkrepositorytoprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The linked Project.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The linked Repository.</p>"
        }
      ]
    },
    {
      "name": "lockLockable",
      "kind": "mutations",
      "id": "locklockable",
      "href": "/graphql/reference/mutations#locklockable",
      "description": "<p>Lock a lockable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "LockLockableInput!",
          "id": "locklockableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#locklockableinput"
        }
      ],
      "returnFields": [
        {
          "name": "actor",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor",
          "description": "<p>Identifies the actor who performed the event.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "lockedRecord",
          "type": "Lockable",
          "id": "lockable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#lockable",
          "description": "<p>The item that was locked.</p>"
        }
      ]
    },
    {
      "name": "markDiscussionCommentAsAnswer",
      "kind": "mutations",
      "id": "markdiscussioncommentasanswer",
      "href": "/graphql/reference/mutations#markdiscussioncommentasanswer",
      "description": "<p>Mark a discussion comment as the chosen answer for discussions in an answerable category.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MarkDiscussionCommentAsAnswerInput!",
          "id": "markdiscussioncommentasanswerinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#markdiscussioncommentasanswerinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "discussion",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion",
          "description": "<p>The discussion that includes the chosen comment.</p>"
        }
      ]
    },
    {
      "name": "markFileAsViewed",
      "kind": "mutations",
      "id": "markfileasviewed",
      "href": "/graphql/reference/mutations#markfileasviewed",
      "description": "<p>Mark a pull request file as viewed.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MarkFileAsViewedInput!",
          "id": "markfileasviewedinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#markfileasviewedinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The updated pull request.</p>"
        }
      ]
    },
    {
      "name": "markProjectV2AsTemplate",
      "kind": "mutations",
      "id": "markprojectv2astemplate",
      "href": "/graphql/reference/mutations#markprojectv2astemplate",
      "description": "<p>Mark a project as a template. Note that only projects which are owned by an Organization can be marked as a template.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MarkProjectV2AsTemplateInput!",
          "id": "markprojectv2astemplateinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#markprojectv2astemplateinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "description": "<p>The project.</p>"
        }
      ]
    },
    {
      "name": "markPullRequestReadyForReview",
      "kind": "mutations",
      "id": "markpullrequestreadyforreview",
      "href": "/graphql/reference/mutations#markpullrequestreadyforreview",
      "description": "<p>Marks a pull request ready for review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MarkPullRequestReadyForReviewInput!",
          "id": "markpullrequestreadyforreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#markpullrequestreadyforreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that is ready for review.</p>"
        }
      ]
    },
    {
      "name": "mergeBranch",
      "kind": "mutations",
      "id": "mergebranch",
      "href": "/graphql/reference/mutations#mergebranch",
      "description": "<p>Merge a head into a branch.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MergeBranchInput!",
          "id": "mergebranchinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#mergebranchinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "mergeCommit",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit",
          "description": "<p>The resulting merge Commit.</p>"
        }
      ]
    },
    {
      "name": "mergePullRequest",
      "kind": "mutations",
      "id": "mergepullrequest",
      "href": "/graphql/reference/mutations#mergepullrequest",
      "description": "<p>Merge a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MergePullRequestInput!",
          "id": "mergepullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#mergepullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "actor",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor",
          "description": "<p>Identifies the actor who performed the event.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that was merged.</p>"
        }
      ]
    },
    {
      "name": "minimizeComment",
      "kind": "mutations",
      "id": "minimizecomment",
      "href": "/graphql/reference/mutations#minimizecomment",
      "description": "<p>Minimizes a comment on an Issue, Commit, Pull Request, or Gist.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MinimizeCommentInput!",
          "id": "minimizecommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#minimizecommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "minimizedComment",
          "type": "Minimizable",
          "id": "minimizable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#minimizable",
          "description": "<p>The comment that was minimized.</p>"
        }
      ]
    },
    {
      "name": "moveProjectCard",
      "kind": "mutations",
      "id": "moveprojectcard",
      "href": "/graphql/reference/mutations#moveprojectcard",
      "description": "<p>Moves a project card to another place.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MoveProjectCardInput!",
          "id": "moveprojectcardinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#moveprojectcardinput"
        }
      ],
      "returnFields": [
        {
          "name": "cardEdge",
          "type": "ProjectCardEdge",
          "id": "projectcardedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardedge",
          "description": "<p>The new edge of the moved card.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "moveProjectColumn",
      "kind": "mutations",
      "id": "moveprojectcolumn",
      "href": "/graphql/reference/mutations#moveprojectcolumn",
      "description": "<p>Moves a project column to another place.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MoveProjectColumnInput!",
          "id": "moveprojectcolumninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#moveprojectcolumninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "columnEdge",
          "type": "ProjectColumnEdge",
          "id": "projectcolumnedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumnedge",
          "description": "<p>The new edge of the moved column.</p>"
        }
      ]
    },
    {
      "name": "pinIssue",
      "kind": "mutations",
      "id": "pinissue",
      "href": "/graphql/reference/mutations#pinissue",
      "description": "<p>Pin an issue to a repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "PinIssueInput!",
          "id": "pinissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#pinissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue that was pinned.</p>"
        }
      ]
    },
    {
      "name": "regenerateVerifiableDomainToken",
      "kind": "mutations",
      "id": "regenerateverifiabledomaintoken",
      "href": "/graphql/reference/mutations#regenerateverifiabledomaintoken",
      "description": "<p>Regenerates a verifiable domain's verification token.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RegenerateVerifiableDomainTokenInput!",
          "id": "regenerateverifiabledomaintokeninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#regenerateverifiabledomaintokeninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "verificationToken",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The verification token that was generated.</p>"
        }
      ]
    },
    {
      "name": "rejectDeployments",
      "kind": "mutations",
      "id": "rejectdeployments",
      "href": "/graphql/reference/mutations#rejectdeployments",
      "description": "<p>Reject all pending deployments under one or more environments.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RejectDeploymentsInput!",
          "id": "rejectdeploymentsinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#rejectdeploymentsinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deployments",
          "type": "[Deployment!]",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment",
          "description": "<p>The affected deployments.</p>"
        }
      ]
    },
    {
      "name": "removeAssigneesFromAssignable",
      "kind": "mutations",
      "id": "removeassigneesfromassignable",
      "href": "/graphql/reference/mutations#removeassigneesfromassignable",
      "description": "<p>Removes assignees from an assignable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveAssigneesFromAssignableInput!",
          "id": "removeassigneesfromassignableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removeassigneesfromassignableinput"
        }
      ],
      "returnFields": [
        {
          "name": "assignable",
          "type": "Assignable",
          "id": "assignable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#assignable",
          "description": "<p>The item that was unassigned.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "removeEnterpriseAdmin",
      "kind": "mutations",
      "id": "removeenterpriseadmin",
      "href": "/graphql/reference/mutations#removeenterpriseadmin",
      "description": "<p>Removes an administrator from the enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveEnterpriseAdminInput!",
          "id": "removeenterpriseadmininput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removeenterpriseadmininput"
        }
      ],
      "returnFields": [
        {
          "name": "admin",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "description": "<p>The user who was removed as an administrator.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The updated enterprise.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of removing an administrator.</p>"
        },
        {
          "name": "viewer",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "description": "<p>The viewer performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "removeLabelsFromLabelable",
      "kind": "mutations",
      "id": "removelabelsfromlabelable",
      "href": "/graphql/reference/mutations#removelabelsfromlabelable",
      "description": "<p>Removes labels from a Labelable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveLabelsFromLabelableInput!",
          "id": "removelabelsfromlabelableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removelabelsfromlabelableinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "labelable",
          "type": "Labelable",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable",
          "description": "<p>The Labelable the labels were removed from.</p>"
        }
      ]
    },
    {
      "name": "removeOutsideCollaborator",
      "kind": "mutations",
      "id": "removeoutsidecollaborator",
      "href": "/graphql/reference/mutations#removeoutsidecollaborator",
      "description": "<p>Removes outside collaborator from all repositories in an organization.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveOutsideCollaboratorInput!",
          "id": "removeoutsidecollaboratorinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removeoutsidecollaboratorinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "removedUser",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "description": "<p>The user that was removed as an outside collaborator.</p>"
        }
      ]
    },
    {
      "name": "removeReaction",
      "kind": "mutations",
      "id": "removereaction",
      "href": "/graphql/reference/mutations#removereaction",
      "description": "<p>Removes a reaction from a subject.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveReactionInput!",
          "id": "removereactioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removereactioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "reaction",
          "type": "Reaction",
          "id": "reaction",
          "kind": "objects",
          "href": "/graphql/reference/objects#reaction",
          "description": "<p>The reaction object.</p>"
        },
        {
          "name": "reactionGroups",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup",
          "description": "<p>The reaction groups for the subject.</p>"
        },
        {
          "name": "subject",
          "type": "Reactable",
          "id": "reactable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#reactable",
          "description": "<p>The reactable subject.</p>"
        }
      ]
    },
    {
      "name": "removeStar",
      "kind": "mutations",
      "id": "removestar",
      "href": "/graphql/reference/mutations#removestar",
      "description": "<p>Removes a star from a Starrable.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveStarInput!",
          "id": "removestarinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removestarinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "starrable",
          "type": "Starrable",
          "id": "starrable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#starrable",
          "description": "<p>The starrable.</p>"
        }
      ]
    },
    {
      "name": "removeUpvote",
      "kind": "mutations",
      "id": "removeupvote",
      "href": "/graphql/reference/mutations#removeupvote",
      "description": "<p>Remove an upvote to a discussion or discussion comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveUpvoteInput!",
          "id": "removeupvoteinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removeupvoteinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "subject",
          "type": "Votable",
          "id": "votable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#votable",
          "description": "<p>The votable subject.</p>"
        }
      ]
    },
    {
      "name": "reopenDiscussion",
      "kind": "mutations",
      "id": "reopendiscussion",
      "href": "/graphql/reference/mutations#reopendiscussion",
      "description": "<p>Reopen a discussion.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ReopenDiscussionInput!",
          "id": "reopendiscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#reopendiscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "discussion",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion",
          "description": "<p>The discussion that was reopened.</p>"
        }
      ]
    },
    {
      "name": "reopenIssue",
      "kind": "mutations",
      "id": "reopenissue",
      "href": "/graphql/reference/mutations#reopenissue",
      "description": "<p>Reopen a issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ReopenIssueInput!",
          "id": "reopenissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#reopenissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue that was opened.</p>"
        }
      ]
    },
    {
      "name": "reopenPullRequest",
      "kind": "mutations",
      "id": "reopenpullrequest",
      "href": "/graphql/reference/mutations#reopenpullrequest",
      "description": "<p>Reopen a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ReopenPullRequestInput!",
          "id": "reopenpullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#reopenpullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that was reopened.</p>"
        }
      ]
    },
    {
      "name": "requestReviews",
      "kind": "mutations",
      "id": "requestreviews",
      "href": "/graphql/reference/mutations#requestreviews",
      "description": "<p>Set review requests on a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RequestReviewsInput!",
          "id": "requestreviewsinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#requestreviewsinput"
        }
      ],
      "returnFields": [
        {
          "name": "actor",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor",
          "description": "<p>Identifies the actor who performed the event.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that is getting requests.</p>"
        },
        {
          "name": "requestedReviewersEdge",
          "type": "UserEdge",
          "id": "useredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#useredge",
          "description": "<p>The edge from the pull request to the requested reviewers.</p>"
        }
      ]
    },
    {
      "name": "rerequestCheckSuite",
      "kind": "mutations",
      "id": "rerequestchecksuite",
      "href": "/graphql/reference/mutations#rerequestchecksuite",
      "description": "<p>Rerequests an existing check suite.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RerequestCheckSuiteInput!",
          "id": "rerequestchecksuiteinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#rerequestchecksuiteinput"
        }
      ],
      "returnFields": [
        {
          "name": "checkSuite",
          "type": "CheckSuite",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite",
          "description": "<p>The requested check suite.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "resolveReviewThread",
      "kind": "mutations",
      "id": "resolvereviewthread",
      "href": "/graphql/reference/mutations#resolvereviewthread",
      "description": "<p>Marks a review thread as resolved.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ResolveReviewThreadInput!",
          "id": "resolvereviewthreadinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#resolvereviewthreadinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "thread",
          "type": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthread",
          "description": "<p>The thread to resolve.</p>"
        }
      ]
    },
    {
      "name": "revertPullRequest",
      "kind": "mutations",
      "id": "revertpullrequest",
      "href": "/graphql/reference/mutations#revertpullrequest",
      "description": "<p>Create a pull request that reverts the changes from a merged pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RevertPullRequestInput!",
          "id": "revertpullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#revertpullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that was reverted.</p>"
        },
        {
          "name": "revertPullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The new pull request that reverts the input pull request.</p>"
        }
      ]
    },
    {
      "name": "revokeEnterpriseOrganizationsMigratorRole",
      "kind": "mutations",
      "id": "revokeenterpriseorganizationsmigratorrole",
      "href": "/graphql/reference/mutations#revokeenterpriseorganizationsmigratorrole",
      "description": "<p>Revoke the migrator role to a user for all organizations under an enterprise account.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RevokeEnterpriseOrganizationsMigratorRoleInput!",
          "id": "revokeenterpriseorganizationsmigratorroleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#revokeenterpriseorganizationsmigratorroleinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "organizations",
          "type": "OrganizationConnection",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "description": "<p>The organizations that had the migrator role revoked for the given user.</p>"
        }
      ]
    },
    {
      "name": "revokeMigratorRole",
      "kind": "mutations",
      "id": "revokemigratorrole",
      "href": "/graphql/reference/mutations#revokemigratorrole",
      "description": "<p>Revoke the migrator role from a user or a team.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RevokeMigratorRoleInput!",
          "id": "revokemigratorroleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#revokemigratorroleinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "success",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "description": "<p>Did the operation succeed?.</p>"
        }
      ]
    },
    {
      "name": "startOrganizationMigration",
      "kind": "mutations",
      "id": "startorganizationmigration",
      "href": "/graphql/reference/mutations#startorganizationmigration",
      "description": "<p>Starts a GitHub Enterprise Importer organization migration.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "StartOrganizationMigrationInput!",
          "id": "startorganizationmigrationinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#startorganizationmigrationinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "orgMigration",
          "type": "OrganizationMigration",
          "id": "organizationmigration",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationmigration",
          "description": "<p>The new organization migration.</p>"
        }
      ]
    },
    {
      "name": "startRepositoryMigration",
      "kind": "mutations",
      "id": "startrepositorymigration",
      "href": "/graphql/reference/mutations#startrepositorymigration",
      "description": "<p>Starts a GitHub Enterprise Importer (GEI) repository migration.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "StartRepositoryMigrationInput!",
          "id": "startrepositorymigrationinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#startrepositorymigrationinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repositoryMigration",
          "type": "RepositoryMigration",
          "id": "repositorymigration",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorymigration",
          "description": "<p>The new repository migration.</p>"
        }
      ]
    },
    {
      "name": "submitPullRequestReview",
      "kind": "mutations",
      "id": "submitpullrequestreview",
      "href": "/graphql/reference/mutations#submitpullrequestreview",
      "description": "<p>Submits a pending pull request review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "SubmitPullRequestReviewInput!",
          "id": "submitpullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#submitpullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The submitted pull request review.</p>"
        }
      ]
    },
    {
      "name": "transferIssue",
      "kind": "mutations",
      "id": "transferissue",
      "href": "/graphql/reference/mutations#transferissue",
      "description": "<p>Transfer an issue to a different repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "TransferIssueInput!",
          "id": "transferissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#transferissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue that was transferred.</p>"
        }
      ]
    },
    {
      "name": "unarchiveProjectV2Item",
      "kind": "mutations",
      "id": "unarchiveprojectv2item",
      "href": "/graphql/reference/mutations#unarchiveprojectv2item",
      "description": "<p>Unarchives a ProjectV2Item.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnarchiveProjectV2ItemInput!",
          "id": "unarchiveprojectv2iteminput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unarchiveprojectv2iteminput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "item",
          "type": "ProjectV2Item",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item",
          "description": "<p>The item unarchived from the project.</p>"
        }
      ]
    },
    {
      "name": "unarchiveRepository",
      "kind": "mutations",
      "id": "unarchiverepository",
      "href": "/graphql/reference/mutations#unarchiverepository",
      "description": "<p>Unarchives a repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnarchiveRepositoryInput!",
          "id": "unarchiverepositoryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unarchiverepositoryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The repository that was unarchived.</p>"
        }
      ]
    },
    {
      "name": "unfollowOrganization",
      "kind": "mutations",
      "id": "unfolloworganization",
      "href": "/graphql/reference/mutations#unfolloworganization",
      "description": "<p>Unfollow an organization.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnfollowOrganizationInput!",
          "id": "unfolloworganizationinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unfolloworganizationinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "organization",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization",
          "description": "<p>The organization that was unfollowed.</p>"
        }
      ]
    },
    {
      "name": "unfollowUser",
      "kind": "mutations",
      "id": "unfollowuser",
      "href": "/graphql/reference/mutations#unfollowuser",
      "description": "<p>Unfollow a user.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnfollowUserInput!",
          "id": "unfollowuserinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unfollowuserinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "user",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "description": "<p>The user that was unfollowed.</p>"
        }
      ]
    },
    {
      "name": "unlinkProjectV2FromRepository",
      "kind": "mutations",
      "id": "unlinkprojectv2fromrepository",
      "href": "/graphql/reference/mutations#unlinkprojectv2fromrepository",
      "description": "<p>Unlinks a project from a repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnlinkProjectV2FromRepositoryInput!",
          "id": "unlinkprojectv2fromrepositoryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unlinkprojectv2fromrepositoryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The repository the project is no longer linked to.</p>"
        }
      ]
    },
    {
      "name": "unlinkProjectV2FromTeam",
      "kind": "mutations",
      "id": "unlinkprojectv2fromteam",
      "href": "/graphql/reference/mutations#unlinkprojectv2fromteam",
      "description": "<p>Unlinks a project to a team.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnlinkProjectV2FromTeamInput!",
          "id": "unlinkprojectv2fromteaminput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unlinkprojectv2fromteaminput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "team",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team",
          "description": "<p>The team the project is unlinked from.</p>"
        }
      ]
    },
    {
      "name": "unlinkRepositoryFromProject",
      "kind": "mutations",
      "id": "unlinkrepositoryfromproject",
      "href": "/graphql/reference/mutations#unlinkrepositoryfromproject",
      "description": "<p>Deletes a repository link from a project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnlinkRepositoryFromProjectInput!",
          "id": "unlinkrepositoryfromprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unlinkrepositoryfromprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The linked Project.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The linked Repository.</p>"
        }
      ]
    },
    {
      "name": "unlockLockable",
      "kind": "mutations",
      "id": "unlocklockable",
      "href": "/graphql/reference/mutations#unlocklockable",
      "description": "<p>Unlock a lockable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnlockLockableInput!",
          "id": "unlocklockableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unlocklockableinput"
        }
      ],
      "returnFields": [
        {
          "name": "actor",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor",
          "description": "<p>Identifies the actor who performed the event.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "unlockedRecord",
          "type": "Lockable",
          "id": "lockable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#lockable",
          "description": "<p>The item that was unlocked.</p>"
        }
      ]
    },
    {
      "name": "unmarkDiscussionCommentAsAnswer",
      "kind": "mutations",
      "id": "unmarkdiscussioncommentasanswer",
      "href": "/graphql/reference/mutations#unmarkdiscussioncommentasanswer",
      "description": "<p>Unmark a discussion comment as the chosen answer for discussions in an answerable category.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnmarkDiscussionCommentAsAnswerInput!",
          "id": "unmarkdiscussioncommentasanswerinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unmarkdiscussioncommentasanswerinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "discussion",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion",
          "description": "<p>The discussion that includes the comment.</p>"
        }
      ]
    },
    {
      "name": "unmarkFileAsViewed",
      "kind": "mutations",
      "id": "unmarkfileasviewed",
      "href": "/graphql/reference/mutations#unmarkfileasviewed",
      "description": "<p>Unmark a pull request file as viewed.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnmarkFileAsViewedInput!",
          "id": "unmarkfileasviewedinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unmarkfileasviewedinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The updated pull request.</p>"
        }
      ]
    },
    {
      "name": "unmarkIssueAsDuplicate",
      "kind": "mutations",
      "id": "unmarkissueasduplicate",
      "href": "/graphql/reference/mutations#unmarkissueasduplicate",
      "description": "<p>Unmark an issue as a duplicate of another issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnmarkIssueAsDuplicateInput!",
          "id": "unmarkissueasduplicateinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unmarkissueasduplicateinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "duplicate",
          "type": "IssueOrPullRequest",
          "id": "issueorpullrequest",
          "kind": "unions",
          "href": "/graphql/reference/unions#issueorpullrequest",
          "description": "<p>The issue or pull request that was marked as a duplicate.</p>"
        }
      ]
    },
    {
      "name": "unmarkProjectV2AsTemplate",
      "kind": "mutations",
      "id": "unmarkprojectv2astemplate",
      "href": "/graphql/reference/mutations#unmarkprojectv2astemplate",
      "description": "<p>Unmark a project as a template.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnmarkProjectV2AsTemplateInput!",
          "id": "unmarkprojectv2astemplateinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unmarkprojectv2astemplateinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "description": "<p>The project.</p>"
        }
      ]
    },
    {
      "name": "unminimizeComment",
      "kind": "mutations",
      "id": "unminimizecomment",
      "href": "/graphql/reference/mutations#unminimizecomment",
      "description": "<p>Unminimizes a comment on an Issue, Commit, Pull Request, or Gist.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnminimizeCommentInput!",
          "id": "unminimizecommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unminimizecommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "unminimizedComment",
          "type": "Minimizable",
          "id": "minimizable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#minimizable",
          "description": "<p>The comment that was unminimized.</p>"
        }
      ]
    },
    {
      "name": "unpinIssue",
      "kind": "mutations",
      "id": "unpinissue",
      "href": "/graphql/reference/mutations#unpinissue",
      "description": "<p>Unpin a pinned issue from a repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnpinIssueInput!",
          "id": "unpinissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unpinissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue that was unpinned.</p>"
        }
      ]
    },
    {
      "name": "unresolveReviewThread",
      "kind": "mutations",
      "id": "unresolvereviewthread",
      "href": "/graphql/reference/mutations#unresolvereviewthread",
      "description": "<p>Marks a review thread as unresolved.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnresolveReviewThreadInput!",
          "id": "unresolvereviewthreadinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unresolvereviewthreadinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "thread",
          "type": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthread",
          "description": "<p>The thread to resolve.</p>"
        }
      ]
    },
    {
      "name": "updateBranchProtectionRule",
      "kind": "mutations",
      "id": "updatebranchprotectionrule",
      "href": "/graphql/reference/mutations#updatebranchprotectionrule",
      "description": "<p>Update a branch protection rule.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateBranchProtectionRuleInput!",
          "id": "updatebranchprotectionruleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatebranchprotectionruleinput"
        }
      ],
      "returnFields": [
        {
          "name": "branchProtectionRule",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule",
          "description": "<p>The newly created BranchProtectionRule.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "updateCheckRun",
      "kind": "mutations",
      "id": "updatecheckrun",
      "href": "/graphql/reference/mutations#updatecheckrun",
      "description": "<p>Update a check run.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateCheckRunInput!",
          "id": "updatecheckruninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatecheckruninput"
        }
      ],
      "returnFields": [
        {
          "name": "checkRun",
          "type": "CheckRun",
          "id": "checkrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrun",
          "description": "<p>The updated check run.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "updateCheckSuitePreferences",
      "kind": "mutations",
      "id": "updatechecksuitepreferences",
      "href": "/graphql/reference/mutations#updatechecksuitepreferences",
      "description": "<p>Modifies the settings of an existing check suite.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateCheckSuitePreferencesInput!",
          "id": "updatechecksuitepreferencesinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatechecksuitepreferencesinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The updated repository.</p>"
        }
      ]
    },
    {
      "name": "updateDiscussion",
      "kind": "mutations",
      "id": "updatediscussion",
      "href": "/graphql/reference/mutations#updatediscussion",
      "description": "<p>Update a discussion.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateDiscussionInput!",
          "id": "updatediscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatediscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "discussion",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion",
          "description": "<p>The modified discussion.</p>"
        }
      ]
    },
    {
      "name": "updateDiscussionComment",
      "kind": "mutations",
      "id": "updatediscussioncomment",
      "href": "/graphql/reference/mutations#updatediscussioncomment",
      "description": "<p>Update the contents of a comment on a Discussion.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateDiscussionCommentInput!",
          "id": "updatediscussioncommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatediscussioncommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "comment",
          "type": "DiscussionComment",
          "id": "discussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncomment",
          "description": "<p>The modified discussion comment.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseAllowPrivateRepositoryForkingSetting",
      "kind": "mutations",
      "id": "updateenterpriseallowprivaterepositoryforkingsetting",
      "href": "/graphql/reference/mutations#updateenterpriseallowprivaterepositoryforkingsetting",
      "description": "<p>Sets whether private repository forks are enabled for an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput!",
          "id": "updateenterpriseallowprivaterepositoryforkingsettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterpriseallowprivaterepositoryforkingsettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated allow private repository forking setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the allow private repository forking setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseDefaultRepositoryPermissionSetting",
      "kind": "mutations",
      "id": "updateenterprisedefaultrepositorypermissionsetting",
      "href": "/graphql/reference/mutations#updateenterprisedefaultrepositorypermissionsetting",
      "description": "<p>Sets the base repository permission for organizations in an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseDefaultRepositoryPermissionSettingInput!",
          "id": "updateenterprisedefaultrepositorypermissionsettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisedefaultrepositorypermissionsettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated base repository permission setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the base repository permission setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseMembersCanChangeRepositoryVisibilitySetting",
      "kind": "mutations",
      "id": "updateenterprisememberscanchangerepositoryvisibilitysetting",
      "href": "/graphql/reference/mutations#updateenterprisememberscanchangerepositoryvisibilitysetting",
      "description": "<p>Sets whether organization members with admin permissions on a repository can change repository visibility.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput!",
          "id": "updateenterprisememberscanchangerepositoryvisibilitysettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisememberscanchangerepositoryvisibilitysettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated members can change repository visibility setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the members can change repository visibility setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseMembersCanCreateRepositoriesSetting",
      "kind": "mutations",
      "id": "updateenterprisememberscancreaterepositoriessetting",
      "href": "/graphql/reference/mutations#updateenterprisememberscancreaterepositoriessetting",
      "description": "<p>Sets the members can create repositories setting for an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseMembersCanCreateRepositoriesSettingInput!",
          "id": "updateenterprisememberscancreaterepositoriessettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisememberscancreaterepositoriessettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated members can create repositories setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the members can create repositories setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseMembersCanDeleteIssuesSetting",
      "kind": "mutations",
      "id": "updateenterprisememberscandeleteissuessetting",
      "href": "/graphql/reference/mutations#updateenterprisememberscandeleteissuessetting",
      "description": "<p>Sets the members can delete issues setting for an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseMembersCanDeleteIssuesSettingInput!",
          "id": "updateenterprisememberscandeleteissuessettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisememberscandeleteissuessettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated members can delete issues setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the members can delete issues setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseMembersCanDeleteRepositoriesSetting",
      "kind": "mutations",
      "id": "updateenterprisememberscandeleterepositoriessetting",
      "href": "/graphql/reference/mutations#updateenterprisememberscandeleterepositoriessetting",
      "description": "<p>Sets the members can delete repositories setting for an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput!",
          "id": "updateenterprisememberscandeleterepositoriessettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisememberscandeleterepositoriessettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated members can delete repositories setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the members can delete repositories setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseMembersCanInviteCollaboratorsSetting",
      "kind": "mutations",
      "id": "updateenterprisememberscaninvitecollaboratorssetting",
      "href": "/graphql/reference/mutations#updateenterprisememberscaninvitecollaboratorssetting",
      "description": "<p>Sets whether members can invite collaborators are enabled for an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput!",
          "id": "updateenterprisememberscaninvitecollaboratorssettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisememberscaninvitecollaboratorssettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated members can invite collaborators setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the members can invite collaborators setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseMembersCanMakePurchasesSetting",
      "kind": "mutations",
      "id": "updateenterprisememberscanmakepurchasessetting",
      "href": "/graphql/reference/mutations#updateenterprisememberscanmakepurchasessetting",
      "description": "<p>Sets whether or not an organization admin can make purchases.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseMembersCanMakePurchasesSettingInput!",
          "id": "updateenterprisememberscanmakepurchasessettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisememberscanmakepurchasessettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated members can make purchases setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the members can make purchases setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseMembersCanUpdateProtectedBranchesSetting",
      "kind": "mutations",
      "id": "updateenterprisememberscanupdateprotectedbranchessetting",
      "href": "/graphql/reference/mutations#updateenterprisememberscanupdateprotectedbranchessetting",
      "description": "<p>Sets the members can update protected branches setting for an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput!",
          "id": "updateenterprisememberscanupdateprotectedbranchessettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisememberscanupdateprotectedbranchessettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated members can update protected branches setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the members can update protected branches setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseMembersCanViewDependencyInsightsSetting",
      "kind": "mutations",
      "id": "updateenterprisememberscanviewdependencyinsightssetting",
      "href": "/graphql/reference/mutations#updateenterprisememberscanviewdependencyinsightssetting",
      "description": "<p>Sets the members can view dependency insights for an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput!",
          "id": "updateenterprisememberscanviewdependencyinsightssettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisememberscanviewdependencyinsightssettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated members can view dependency insights setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the members can view dependency insights setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseOrganizationProjectsSetting",
      "kind": "mutations",
      "id": "updateenterpriseorganizationprojectssetting",
      "href": "/graphql/reference/mutations#updateenterpriseorganizationprojectssetting",
      "description": "<p>Sets whether organization projects are enabled for an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseOrganizationProjectsSettingInput!",
          "id": "updateenterpriseorganizationprojectssettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterpriseorganizationprojectssettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated organization projects setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the organization projects setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseOwnerOrganizationRole",
      "kind": "mutations",
      "id": "updateenterpriseownerorganizationrole",
      "href": "/graphql/reference/mutations#updateenterpriseownerorganizationrole",
      "description": "<p>Updates the role of an enterprise owner with an organization.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseOwnerOrganizationRoleInput!",
          "id": "updateenterpriseownerorganizationroleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterpriseownerorganizationroleinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of changing the owner's organization role.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseProfile",
      "kind": "mutations",
      "id": "updateenterpriseprofile",
      "href": "/graphql/reference/mutations#updateenterpriseprofile",
      "description": "<p>Updates an enterprise's profile.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseProfileInput!",
          "id": "updateenterpriseprofileinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterpriseprofileinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The updated enterprise.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseRepositoryProjectsSetting",
      "kind": "mutations",
      "id": "updateenterpriserepositoryprojectssetting",
      "href": "/graphql/reference/mutations#updateenterpriserepositoryprojectssetting",
      "description": "<p>Sets whether repository projects are enabled for a enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseRepositoryProjectsSettingInput!",
          "id": "updateenterpriserepositoryprojectssettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterpriserepositoryprojectssettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated repository projects setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the repository projects setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseTeamDiscussionsSetting",
      "kind": "mutations",
      "id": "updateenterpriseteamdiscussionssetting",
      "href": "/graphql/reference/mutations#updateenterpriseteamdiscussionssetting",
      "description": "<p>Sets whether team discussions are enabled for an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseTeamDiscussionsSettingInput!",
          "id": "updateenterpriseteamdiscussionssettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterpriseteamdiscussionssettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated team discussions setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the team discussions setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnterpriseTwoFactorAuthenticationRequiredSetting",
      "kind": "mutations",
      "id": "updateenterprisetwofactorauthenticationrequiredsetting",
      "href": "/graphql/reference/mutations#updateenterprisetwofactorauthenticationrequiredsetting",
      "description": "<p>Sets whether two factor authentication is required for all users in an enterprise.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput!",
          "id": "updateenterprisetwofactorauthenticationrequiredsettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenterprisetwofactorauthenticationrequiredsettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "enterprise",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise",
          "description": "<p>The enterprise with the updated two factor authentication required setting.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the two factor authentication required setting.</p>"
        }
      ]
    },
    {
      "name": "updateEnvironment",
      "kind": "mutations",
      "id": "updateenvironment",
      "href": "/graphql/reference/mutations#updateenvironment",
      "description": "<p>Updates an environment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateEnvironmentInput!",
          "id": "updateenvironmentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateenvironmentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "environment",
          "type": "Environment",
          "id": "environment",
          "kind": "objects",
          "href": "/graphql/reference/objects#environment",
          "description": "<p>The updated environment.</p>"
        }
      ]
    },
    {
      "name": "updateIpAllowListEnabledSetting",
      "kind": "mutations",
      "id": "updateipallowlistenabledsetting",
      "href": "/graphql/reference/mutations#updateipallowlistenabledsetting",
      "description": "<p>Sets whether an IP allow list is enabled on an owner.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateIpAllowListEnabledSettingInput!",
          "id": "updateipallowlistenabledsettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateipallowlistenabledsettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "owner",
          "type": "IpAllowListOwner",
          "id": "ipallowlistowner",
          "kind": "unions",
          "href": "/graphql/reference/unions#ipallowlistowner",
          "description": "<p>The IP allow list owner on which the setting was updated.</p>"
        }
      ]
    },
    {
      "name": "updateIpAllowListEntry",
      "kind": "mutations",
      "id": "updateipallowlistentry",
      "href": "/graphql/reference/mutations#updateipallowlistentry",
      "description": "<p>Updates an IP allow list entry.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateIpAllowListEntryInput!",
          "id": "updateipallowlistentryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateipallowlistentryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "ipAllowListEntry",
          "type": "IpAllowListEntry",
          "id": "ipallowlistentry",
          "kind": "objects",
          "href": "/graphql/reference/objects#ipallowlistentry",
          "description": "<p>The IP allow list entry that was updated.</p>"
        }
      ]
    },
    {
      "name": "updateIpAllowListForInstalledAppsEnabledSetting",
      "kind": "mutations",
      "id": "updateipallowlistforinstalledappsenabledsetting",
      "href": "/graphql/reference/mutations#updateipallowlistforinstalledappsenabledsetting",
      "description": "<p>Sets whether IP allow list configuration for installed GitHub Apps is enabled on an owner.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateIpAllowListForInstalledAppsEnabledSettingInput!",
          "id": "updateipallowlistforinstalledappsenabledsettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateipallowlistforinstalledappsenabledsettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "owner",
          "type": "IpAllowListOwner",
          "id": "ipallowlistowner",
          "kind": "unions",
          "href": "/graphql/reference/unions#ipallowlistowner",
          "description": "<p>The IP allow list owner on which the setting was updated.</p>"
        }
      ]
    },
    {
      "name": "updateIssue",
      "kind": "mutations",
      "id": "updateissue",
      "href": "/graphql/reference/mutations#updateissue",
      "description": "<p>Updates an Issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateIssueInput!",
          "id": "updateissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "actor",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor",
          "description": "<p>Identifies the actor who performed the event.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue.</p>"
        }
      ]
    },
    {
      "name": "updateIssueComment",
      "kind": "mutations",
      "id": "updateissuecomment",
      "href": "/graphql/reference/mutations#updateissuecomment",
      "description": "<p>Updates an IssueComment object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateIssueCommentInput!",
          "id": "updateissuecommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateissuecommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issueComment",
          "type": "IssueComment",
          "id": "issuecomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecomment",
          "description": "<p>The updated comment.</p>"
        }
      ]
    },
    {
      "name": "updateLabel",
      "kind": "mutations",
      "id": "updatelabel",
      "href": "/graphql/reference/mutations#updatelabel",
      "description": "<p>Updates an existing label.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateLabelInput!",
          "id": "updatelabelinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatelabelinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "label",
          "type": "Label",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label",
          "description": "<p>The updated label.</p>"
        }
      ]
    },
    {
      "name": "updateNotificationRestrictionSetting",
      "kind": "mutations",
      "id": "updatenotificationrestrictionsetting",
      "href": "/graphql/reference/mutations#updatenotificationrestrictionsetting",
      "description": "<p>Update the setting to restrict notifications to only verified or approved domains available to an owner.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateNotificationRestrictionSettingInput!",
          "id": "updatenotificationrestrictionsettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatenotificationrestrictionsettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "owner",
          "type": "VerifiableDomainOwner",
          "id": "verifiabledomainowner",
          "kind": "unions",
          "href": "/graphql/reference/unions#verifiabledomainowner",
          "description": "<p>The owner on which the setting was updated.</p>"
        }
      ]
    },
    {
      "name": "updateOrganizationAllowPrivateRepositoryForkingSetting",
      "kind": "mutations",
      "id": "updateorganizationallowprivaterepositoryforkingsetting",
      "href": "/graphql/reference/mutations#updateorganizationallowprivaterepositoryforkingsetting",
      "description": "<p>Sets whether private repository forks are enabled for an organization.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateOrganizationAllowPrivateRepositoryForkingSettingInput!",
          "id": "updateorganizationallowprivaterepositoryforkingsettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateorganizationallowprivaterepositoryforkingsettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the allow private repository forking setting.</p>"
        },
        {
          "name": "organization",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization",
          "description": "<p>The organization with the updated allow private repository forking setting.</p>"
        }
      ]
    },
    {
      "name": "updateOrganizationWebCommitSignoffSetting",
      "kind": "mutations",
      "id": "updateorganizationwebcommitsignoffsetting",
      "href": "/graphql/reference/mutations#updateorganizationwebcommitsignoffsetting",
      "description": "<p>Sets whether contributors are required to sign off on web-based commits for repositories in an organization.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateOrganizationWebCommitSignoffSettingInput!",
          "id": "updateorganizationwebcommitsignoffsettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateorganizationwebcommitsignoffsettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the web commit signoff setting.</p>"
        },
        {
          "name": "organization",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization",
          "description": "<p>The organization with the updated web commit signoff setting.</p>"
        }
      ]
    },
    {
      "name": "updateProject",
      "kind": "mutations",
      "id": "updateproject",
      "href": "/graphql/reference/mutations#updateproject",
      "description": "<p>Updates an existing project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectInput!",
          "id": "updateprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The updated project.</p>"
        }
      ]
    },
    {
      "name": "updateProjectCard",
      "kind": "mutations",
      "id": "updateprojectcard",
      "href": "/graphql/reference/mutations#updateprojectcard",
      "description": "<p>Updates an existing project card.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectCardInput!",
          "id": "updateprojectcardinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectcardinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectCard",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "description": "<p>The updated ProjectCard.</p>"
        }
      ]
    },
    {
      "name": "updateProjectColumn",
      "kind": "mutations",
      "id": "updateprojectcolumn",
      "href": "/graphql/reference/mutations#updateprojectcolumn",
      "description": "<p>Updates an existing project column.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectColumnInput!",
          "id": "updateprojectcolumninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectcolumninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectColumn",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn",
          "description": "<p>The updated project column.</p>"
        }
      ]
    },
    {
      "name": "updateProjectV2",
      "kind": "mutations",
      "id": "updateprojectv2",
      "href": "/graphql/reference/mutations#updateprojectv2",
      "description": "<p>Updates an existing project (beta).</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectV2Input!",
          "id": "updateprojectv2input",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectv2input"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "description": "<p>The updated Project.</p>"
        }
      ]
    },
    {
      "name": "updateProjectV2Collaborators",
      "kind": "mutations",
      "id": "updateprojectv2collaborators",
      "href": "/graphql/reference/mutations#updateprojectv2collaborators",
      "description": "<p>Update the collaborators on a team or a project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectV2CollaboratorsInput!",
          "id": "updateprojectv2collaboratorsinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectv2collaboratorsinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "collaborators",
          "type": "ProjectV2ActorConnection",
          "id": "projectv2actorconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2actorconnection",
          "description": "<p>The collaborators granted a role.</p>"
        }
      ]
    },
    {
      "name": "updateProjectV2DraftIssue",
      "kind": "mutations",
      "id": "updateprojectv2draftissue",
      "href": "/graphql/reference/mutations#updateprojectv2draftissue",
      "description": "<p>Updates a draft issue within a Project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectV2DraftIssueInput!",
          "id": "updateprojectv2draftissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectv2draftissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "draftIssue",
          "type": "DraftIssue",
          "id": "draftissue",
          "kind": "objects",
          "href": "/graphql/reference/objects#draftissue",
          "description": "<p>The draft issue updated in the project.</p>"
        }
      ]
    },
    {
      "name": "updateProjectV2ItemFieldValue",
      "kind": "mutations",
      "id": "updateprojectv2itemfieldvalue",
      "href": "/graphql/reference/mutations#updateprojectv2itemfieldvalue",
      "description": "<p>This mutation updates the value of a field for an item in a Project. Currently\nonly single-select, text, number, date, and iteration fields are supported.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectV2ItemFieldValueInput!",
          "id": "updateprojectv2itemfieldvalueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectv2itemfieldvalueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectV2Item",
          "type": "ProjectV2Item",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item",
          "description": "<p>The updated item.</p>"
        }
      ]
    },
    {
      "name": "updateProjectV2ItemPosition",
      "kind": "mutations",
      "id": "updateprojectv2itemposition",
      "href": "/graphql/reference/mutations#updateprojectv2itemposition",
      "description": "<p>This mutation updates the position of the item in the project, where the position represents the priority of an item.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectV2ItemPositionInput!",
          "id": "updateprojectv2itempositioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectv2itempositioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "items",
          "type": "ProjectV2ItemConnection",
          "id": "projectv2itemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2itemconnection",
          "description": "<p>The items in the new order.</p>"
        }
      ]
    },
    {
      "name": "updatePullRequest",
      "kind": "mutations",
      "id": "updatepullrequest",
      "href": "/graphql/reference/mutations#updatepullrequest",
      "description": "<p>Update a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdatePullRequestInput!",
          "id": "updatepullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatepullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "actor",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor",
          "description": "<p>Identifies the actor who performed the event.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The updated pull request.</p>"
        }
      ]
    },
    {
      "name": "updatePullRequestBranch",
      "kind": "mutations",
      "id": "updatepullrequestbranch",
      "href": "/graphql/reference/mutations#updatepullrequestbranch",
      "description": "<p>Merge or Rebase HEAD from upstream branch into pull request branch.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdatePullRequestBranchInput!",
          "id": "updatepullrequestbranchinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatepullrequestbranchinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The updated pull request.</p>"
        }
      ]
    },
    {
      "name": "updatePullRequestReview",
      "kind": "mutations",
      "id": "updatepullrequestreview",
      "href": "/graphql/reference/mutations#updatepullrequestreview",
      "description": "<p>Updates the body of a pull request review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdatePullRequestReviewInput!",
          "id": "updatepullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatepullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The updated pull request review.</p>"
        }
      ]
    },
    {
      "name": "updatePullRequestReviewComment",
      "kind": "mutations",
      "id": "updatepullrequestreviewcomment",
      "href": "/graphql/reference/mutations#updatepullrequestreviewcomment",
      "description": "<p>Updates a pull request review comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdatePullRequestReviewCommentInput!",
          "id": "updatepullrequestreviewcommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatepullrequestreviewcommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReviewComment",
          "type": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment",
          "description": "<p>The updated comment.</p>"
        }
      ]
    },
    {
      "name": "updateRef",
      "kind": "mutations",
      "id": "updateref",
      "href": "/graphql/reference/mutations#updateref",
      "description": "<p>Update a Git Ref.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateRefInput!",
          "id": "updaterefinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updaterefinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "ref",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref",
          "description": "<p>The updated Ref.</p>"
        }
      ]
    },
    {
      "name": "updateRefs",
      "kind": "mutations",
      "id": "updaterefs",
      "href": "/graphql/reference/mutations#updaterefs",
      "description": "<p>Creates, updates and/or deletes multiple refs in a repository.</p>\n<p>This mutation takes a list of <code>RefUpdate</code>s and performs these updates\non the repository. All updates are performed atomically, meaning that\nif one of them is rejected, no other ref will be modified.</p>\n<p><code>RefUpdate.beforeOid</code> specifies that the given reference needs to point\nto the given value before performing any updates. A value of\n<code>0000000000000000000000000000000000000000</code> can be used to verify that\nthe references should not exist.</p>\n<p><code>RefUpdate.afterOid</code> specifies the value that the given reference\nwill point to after performing all updates. A value of\n<code>0000000000000000000000000000000000000000</code> can be used to delete a\nreference.</p>\n<p>If <code>RefUpdate.force</code> is set to <code>true</code>, a non-fast-forward updates\nfor the given reference will be allowed.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Update refs preview update multiple refs in a single operation preview",
        "description": "This preview adds support for updating multiple refs in a single operation.",
        "toggled_by": "update-refs-preview",
        "toggled_on": [
          "Mutation.updateRefs",
          "GitRefname",
          "RefUpdate"
        ],
        "owning_teams": [
          "@github/repos"
        ],
        "accept_header": "application/vnd.github.update-refs-preview+json",
        "href": "/graphql/overview/schema-previews#update-refs-preview-update-multiple-refs-in-a-single-operation-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateRefsInput!",
          "id": "updaterefsinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updaterefsinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "updateRepository",
      "kind": "mutations",
      "id": "updaterepository",
      "href": "/graphql/reference/mutations#updaterepository",
      "description": "<p>Update information about a repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateRepositoryInput!",
          "id": "updaterepositoryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updaterepositoryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The updated repository.</p>"
        }
      ]
    },
    {
      "name": "updateRepositoryWebCommitSignoffSetting",
      "kind": "mutations",
      "id": "updaterepositorywebcommitsignoffsetting",
      "href": "/graphql/reference/mutations#updaterepositorywebcommitsignoffsetting",
      "description": "<p>Sets whether contributors are required to sign off on web-based commits for a repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateRepositoryWebCommitSignoffSettingInput!",
          "id": "updaterepositorywebcommitsignoffsettinginput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updaterepositorywebcommitsignoffsettinginput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "message",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A message confirming the result of updating the web commit signoff setting.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The updated repository.</p>"
        }
      ]
    },
    {
      "name": "updateSubscription",
      "kind": "mutations",
      "id": "updatesubscription",
      "href": "/graphql/reference/mutations#updatesubscription",
      "description": "<p>Updates the state for subscribable subjects.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateSubscriptionInput!",
          "id": "updatesubscriptioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatesubscriptioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "subscribable",
          "type": "Subscribable",
          "id": "subscribable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#subscribable",
          "description": "<p>The input subscribable entity.</p>"
        }
      ]
    },
    {
      "name": "updateTeamDiscussion",
      "kind": "mutations",
      "id": "updateteamdiscussion",
      "href": "/graphql/reference/mutations#updateteamdiscussion",
      "description": "<p>Updates a team discussion.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateTeamDiscussionInput!",
          "id": "updateteamdiscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateteamdiscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "teamDiscussion",
          "type": "TeamDiscussion",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion",
          "description": "<p>The updated discussion.</p>"
        }
      ]
    },
    {
      "name": "updateTeamDiscussionComment",
      "kind": "mutations",
      "id": "updateteamdiscussioncomment",
      "href": "/graphql/reference/mutations#updateteamdiscussioncomment",
      "description": "<p>Updates a discussion comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateTeamDiscussionCommentInput!",
          "id": "updateteamdiscussioncommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateteamdiscussioncommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "teamDiscussionComment",
          "type": "TeamDiscussionComment",
          "id": "teamdiscussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncomment",
          "description": "<p>The updated comment.</p>"
        }
      ]
    },
    {
      "name": "updateTeamReviewAssignment",
      "kind": "mutations",
      "id": "updateteamreviewassignment",
      "href": "/graphql/reference/mutations#updateteamreviewassignment",
      "description": "<p>Updates team review assignment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team review assignments preview",
        "description": "This preview adds support for updating the settings for team review assignment.",
        "toggled_by": "stone-crop-preview",
        "toggled_on": [
          "Mutation.updateTeamReviewAssignment",
          "TeamReviewAssignmentAlgorithm",
          "Team.reviewRequestDelegationEnabled",
          "Team.reviewRequestDelegationAlgorithm",
          "Team.reviewRequestDelegationMemberCount",
          "Team.reviewRequestDelegationNotifyTeam"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.stone-crop-preview+json",
        "href": "/graphql/overview/schema-previews#team-review-assignments-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateTeamReviewAssignmentInput!",
          "id": "updateteamreviewassignmentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateteamreviewassignmentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "team",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team",
          "description": "<p>The team that was modified.</p>"
        }
      ]
    },
    {
      "name": "updateTeamsRepository",
      "kind": "mutations",
      "id": "updateteamsrepository",
      "href": "/graphql/reference/mutations#updateteamsrepository",
      "description": "<p>Update team repository.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateTeamsRepositoryInput!",
          "id": "updateteamsrepositoryinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateteamsrepositoryinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The repository that was updated.</p>"
        },
        {
          "name": "teams",
          "type": "[Team!]",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team",
          "description": "<p>The teams granted permission on the repository.</p>"
        }
      ]
    },
    {
      "name": "updateTopics",
      "kind": "mutations",
      "id": "updatetopics",
      "href": "/graphql/reference/mutations#updatetopics",
      "description": "<p>Replaces the repository's topics with the given topics.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateTopicsInput!",
          "id": "updatetopicsinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatetopicsinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "invalidTopicNames",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Names of the provided topics that are not valid.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The updated repository.</p>"
        }
      ]
    },
    {
      "name": "verifyVerifiableDomain",
      "kind": "mutations",
      "id": "verifyverifiabledomain",
      "href": "/graphql/reference/mutations#verifyverifiabledomain",
      "description": "<p>Verify that a verifiable domain has the expected DNS record.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "VerifyVerifiableDomainInput!",
          "id": "verifyverifiabledomaininput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#verifyverifiabledomaininput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "domain",
          "type": "VerifiableDomain",
          "id": "verifiabledomain",
          "kind": "objects",
          "href": "/graphql/reference/objects#verifiabledomain",
          "description": "<p>The verifiable domain that was verified.</p>"
        }
      ]
    }
  ],
  "objects": [
    {
      "name": "ActorLocation",
      "kind": "objects",
      "id": "actorlocation",
      "href": "/graphql/reference/objects#actorlocation",
      "description": "<p>Location information for an actor.</p>",
      "fields": [
        {
          "name": "city",
          "description": "<p>City.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "country",
          "description": "<p>Country name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "countryCode",
          "description": "<p>Country code.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "region",
          "description": "<p>Region name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "regionCode",
          "description": "<p>Region or state code.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "AddedToProjectEvent",
      "kind": "objects",
      "id": "addedtoprojectevent",
      "href": "/graphql/reference/objects#addedtoprojectevent",
      "description": "<p>Represents a<code>added_to_project</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "project",
          "description": "<p>Project referenced by event.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectCard",
          "description": "<p>Project card referenced by this project event.</p>",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectColumnName",
          "description": "<p>Column name referenced by this project event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        }
      ]
    },
    {
      "name": "App",
      "kind": "objects",
      "id": "app",
      "href": "/graphql/reference/objects#app",
      "description": "<p>A GitHub App.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>The description of the app.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "ipAllowListEntries",
          "description": "<p>The IP addresses of the app.</p>",
          "type": "IpAllowListEntryConnection!",
          "id": "ipallowlistentryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#ipallowlistentryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for IP allow list entries returned.</p>",
              "type": {
                "name": "IpAllowListEntryOrder",
                "id": "ipallowlistentryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#ipallowlistentryorder"
              }
            }
          ]
        },
        {
          "name": "logoBackgroundColor",
          "description": "<p>The hex color code, without the leading '#', for the logo background.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "logoUrl",
          "description": "<p>A URL pointing to the app's logo.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>The name of the app.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "slug",
          "description": "<p>A slug based on the name of the app for use in URLs.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The URL to the app's homepage.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "AssignedEvent",
      "kind": "objects",
      "id": "assignedevent",
      "href": "/graphql/reference/objects#assignedevent",
      "description": "<p>Represents an<code>assigned</code>event on any assignable object.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "assignable",
          "description": "<p>Identifies the assignable associated with the event.</p>",
          "type": "Assignable!",
          "id": "assignable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#assignable"
        },
        {
          "name": "assignee",
          "description": "<p>Identifies the user or mannequin that was assigned.</p>",
          "type": "Assignee",
          "id": "assignee",
          "kind": "unions",
          "href": "/graphql/reference/unions#assignee"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "user",
          "description": "<p>Identifies the user who was assigned.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "isDeprecated": true,
          "deprecationReason": "<p>Assignees can now be mannequins. Use the <code>assignee</code> field instead. Removal on 2020-01-01 UTC.</p>"
        }
      ]
    },
    {
      "name": "AutoMergeDisabledEvent",
      "kind": "objects",
      "id": "automergedisabledevent",
      "href": "/graphql/reference/objects#automergedisabledevent",
      "description": "<p>Represents a<code>auto_merge_disabled</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "disabler",
          "description": "<p>The user who disabled auto-merge for this Pull Request.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "reason",
          "description": "<p>The reason auto-merge was disabled.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "reasonCode",
          "description": "<p>The reason_code relating to why auto-merge was disabled.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "AutoMergeEnabledEvent",
      "kind": "objects",
      "id": "automergeenabledevent",
      "href": "/graphql/reference/objects#automergeenabledevent",
      "description": "<p>Represents a<code>auto_merge_enabled</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "enabler",
          "description": "<p>The user who enabled auto-merge for this Pull Request.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "AutoMergeRequest",
      "kind": "objects",
      "id": "automergerequest",
      "href": "/graphql/reference/objects#automergerequest",
      "description": "<p>Represents an auto-merge request for a pull request.</p>",
      "fields": [
        {
          "name": "authorEmail",
          "description": "<p>The email address of the author of this auto-merge request.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitBody",
          "description": "<p>The commit message of the auto-merge request. If a merge queue is required by\nthe base branch, this value will be set by the merge queue when merging.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitHeadline",
          "description": "<p>The commit title of the auto-merge request. If a merge queue is required by\nthe base branch, this value will be set by the merge queue when merging.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enabledAt",
          "description": "<p>When was this auto-merge request was enabled.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "enabledBy",
          "description": "<p>The actor who created the auto-merge request.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "mergeMethod",
          "description": "<p>The merge method of the auto-merge request. If a merge queue is required by\nthe base branch, this value will be set by the merge queue when merging.</p>",
          "type": "PullRequestMergeMethod!",
          "id": "pullrequestmergemethod",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestmergemethod"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request that this auto-merge request is set against.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "AutoRebaseEnabledEvent",
      "kind": "objects",
      "id": "autorebaseenabledevent",
      "href": "/graphql/reference/objects#autorebaseenabledevent",
      "description": "<p>Represents a<code>auto_rebase_enabled</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "enabler",
          "description": "<p>The user who enabled auto-merge (rebase) for this Pull Request.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "AutoSquashEnabledEvent",
      "kind": "objects",
      "id": "autosquashenabledevent",
      "href": "/graphql/reference/objects#autosquashenabledevent",
      "description": "<p>Represents a<code>auto_squash_enabled</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "enabler",
          "description": "<p>The user who enabled auto-merge (squash) for this Pull Request.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "AutomaticBaseChangeFailedEvent",
      "kind": "objects",
      "id": "automaticbasechangefailedevent",
      "href": "/graphql/reference/objects#automaticbasechangefailedevent",
      "description": "<p>Represents a<code>automatic_base_change_failed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "newBase",
          "description": "<p>The new base for this PR.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oldBase",
          "description": "<p>The old base for this PR.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "AutomaticBaseChangeSucceededEvent",
      "kind": "objects",
      "id": "automaticbasechangesucceededevent",
      "href": "/graphql/reference/objects#automaticbasechangesucceededevent",
      "description": "<p>Represents a<code>automatic_base_change_succeeded</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "newBase",
          "description": "<p>The new base for this PR.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oldBase",
          "description": "<p>The old base for this PR.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "BaseRefChangedEvent",
      "kind": "objects",
      "id": "baserefchangedevent",
      "href": "/graphql/reference/objects#baserefchangedevent",
      "description": "<p>Represents a<code>base_ref_changed</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "currentRefName",
          "description": "<p>Identifies the name of the base ref for the pull request after it was changed.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "previousRefName",
          "description": "<p>Identifies the name of the base ref for the pull request before it was changed.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "BaseRefDeletedEvent",
      "kind": "objects",
      "id": "baserefdeletedevent",
      "href": "/graphql/reference/objects#baserefdeletedevent",
      "description": "<p>Represents a<code>base_ref_deleted</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "baseRefName",
          "description": "<p>Identifies the name of the Ref associated with the <code>base_ref_deleted</code> event.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "BaseRefForcePushedEvent",
      "kind": "objects",
      "id": "baserefforcepushedevent",
      "href": "/graphql/reference/objects#baserefforcepushedevent",
      "description": "<p>Represents a<code>base_ref_force_pushed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "afterCommit",
          "description": "<p>Identifies the after commit SHA for the<code>base_ref_force_pushed</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "beforeCommit",
          "description": "<p>Identifies the before commit SHA for the<code>base_ref_force_pushed</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "ref",
          "description": "<p>Identifies the fully qualified ref name for the<code>base_ref_force_pushed</code>event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "Blame",
      "kind": "objects",
      "id": "blame",
      "href": "/graphql/reference/objects#blame",
      "description": "<p>Represents a Git blame.</p>",
      "fields": [
        {
          "name": "ranges",
          "description": "<p>The list of ranges from a Git blame.</p>",
          "type": "[BlameRange!]!",
          "id": "blamerange",
          "kind": "objects",
          "href": "/graphql/reference/objects#blamerange"
        }
      ]
    },
    {
      "name": "BlameRange",
      "kind": "objects",
      "id": "blamerange",
      "href": "/graphql/reference/objects#blamerange",
      "description": "<p>Represents a range of information from a Git blame.</p>",
      "fields": [
        {
          "name": "age",
          "description": "<p>Identifies the recency of the change, from 1 (new) to 10 (old). This is\ncalculated as a 2-quantile and determines the length of distance between the\nmedian age of all the changes in the file and the recency of the current\nrange's change.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the line author.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "endingLine",
          "description": "<p>The ending line for the range.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startingLine",
          "description": "<p>The starting line for the range.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "Blob",
      "kind": "objects",
      "id": "blob",
      "href": "/graphql/reference/objects#blob",
      "description": "<p>Represents a Git blob.</p>",
      "implements": [
        {
          "name": "GitObject",
          "id": "gitobject",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "byteSize",
          "description": "<p>Byte size of Blob object.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isBinary",
          "description": "<p>Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isTruncated",
          "description": "<p>Indicates whether the contents is truncated.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the Git object belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "text",
          "description": "<p>UTF8 text data or null if the Blob is binary.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "Bot",
      "kind": "objects",
      "id": "bot",
      "href": "/graphql/reference/objects#bot",
      "description": "<p>A special type of user which takes actions on behalf of GitHub Apps.</p>",
      "implements": [
        {
          "name": "Actor",
          "id": "actor",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the GitHub App's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "login",
          "description": "<p>The username of the actor.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this bot.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this bot.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "BranchProtectionRule",
      "kind": "objects",
      "id": "branchprotectionrule",
      "href": "/graphql/reference/objects#branchprotectionrule",
      "description": "<p>A branch protection rule.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "allowsDeletions",
          "description": "<p>Can this branch be deleted.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "allowsForcePushes",
          "description": "<p>Are force pushes allowed on this branch.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "blocksCreations",
          "description": "<p>Is branch creation a protected operation.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "branchProtectionRuleConflicts",
          "description": "<p>A list of conflicts matching branches protection rule and other branch protection rules.</p>",
          "type": "BranchProtectionRuleConflictConnection!",
          "id": "branchprotectionruleconflictconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconflictconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "bypassForcePushAllowances",
          "description": "<p>A list of actors able to force push for this branch protection rule.</p>",
          "type": "BypassForcePushAllowanceConnection!",
          "id": "bypassforcepushallowanceconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#bypassforcepushallowanceconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "bypassPullRequestAllowances",
          "description": "<p>A list of actors able to bypass PRs for this branch protection rule.</p>",
          "type": "BypassPullRequestAllowanceConnection!",
          "id": "bypasspullrequestallowanceconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#bypasspullrequestallowanceconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "creator",
          "description": "<p>The actor who created this branch protection rule.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "dismissesStaleReviews",
          "description": "<p>Will new commits pushed to matching branches dismiss pull request review approvals.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isAdminEnforced",
          "description": "<p>Can admins overwrite branch protection.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lockAllowsFetchAndMerge",
          "description": "<p>Whether users can pull changes from upstream when the branch is locked. Set to\n<code>true</code> to allow fork syncing. Set to <code>false</code> to prevent fork syncing.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lockBranch",
          "description": "<p>Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "matchingRefs",
          "description": "<p>Repository refs that are protected by this rule.</p>",
          "type": "RefConnection!",
          "id": "refconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#refconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "query",
              "description": "<p>Filters refs with query on name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "pattern",
          "description": "<p>Identifies the protection rule pattern.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pushAllowances",
          "description": "<p>A list push allowances for this branch protection rule.</p>",
          "type": "PushAllowanceConnection!",
          "id": "pushallowanceconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pushallowanceconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this branch protection rule.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "requireLastPushApproval",
          "description": "<p>Whether the most recent push must be approved by someone other than the person who pushed it.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiredApprovingReviewCount",
          "description": "<p>Number of approving reviews required to update matching branches.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "requiredDeploymentEnvironments",
          "description": "<p>List of required deployment environments that must be deployed successfully to update matching branches.</p>",
          "type": "[String]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiredStatusCheckContexts",
          "description": "<p>List of required status check contexts that must pass for commits to be accepted to matching branches.</p>",
          "type": "[String]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiredStatusChecks",
          "description": "<p>List of required status checks that must pass for commits to be accepted to matching branches.</p>",
          "type": "[RequiredStatusCheckDescription!]",
          "id": "requiredstatuscheckdescription",
          "kind": "objects",
          "href": "/graphql/reference/objects#requiredstatuscheckdescription"
        },
        {
          "name": "requiresApprovingReviews",
          "description": "<p>Are approving reviews required to update matching branches.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCodeOwnerReviews",
          "description": "<p>Are reviews from code owners required to update matching branches.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCommitSignatures",
          "description": "<p>Are commits required to be signed.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresConversationResolution",
          "description": "<p>Are conversations required to be resolved before merging.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresDeployments",
          "description": "<p>Does this branch require deployment to specific environments before merging.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresLinearHistory",
          "description": "<p>Are merge commits prohibited from being pushed to this branch.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStatusChecks",
          "description": "<p>Are status checks required to update matching branches.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStrictStatusChecks",
          "description": "<p>Are branches required to be up to date before merging.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsPushes",
          "description": "<p>Is pushing to matching branches restricted.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsReviewDismissals",
          "description": "<p>Is dismissal of pull request reviews restricted.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "reviewDismissalAllowances",
          "description": "<p>A list review dismissal allowances for this branch protection rule.</p>",
          "type": "ReviewDismissalAllowanceConnection!",
          "id": "reviewdismissalallowanceconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewdismissalallowanceconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "BranchProtectionRuleConflict",
      "kind": "objects",
      "id": "branchprotectionruleconflict",
      "href": "/graphql/reference/objects#branchprotectionruleconflict",
      "description": "<p>A conflict between two branch protection rules.</p>",
      "fields": [
        {
          "name": "branchProtectionRule",
          "description": "<p>Identifies the branch protection rule.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "conflictingBranchProtectionRule",
          "description": "<p>Identifies the conflicting branch protection rule.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "ref",
          "description": "<p>Identifies the branch ref that has conflicting rules.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "BranchProtectionRuleConflictConnection",
      "kind": "objects",
      "id": "branchprotectionruleconflictconnection",
      "href": "/graphql/reference/objects#branchprotectionruleconflictconnection",
      "description": "<p>The connection type for BranchProtectionRuleConflict.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[BranchProtectionRuleConflictEdge]",
          "id": "branchprotectionruleconflictedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconflictedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[BranchProtectionRuleConflict]",
          "id": "branchprotectionruleconflict",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconflict"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "BranchProtectionRuleConflictEdge",
      "kind": "objects",
      "id": "branchprotectionruleconflictedge",
      "href": "/graphql/reference/objects#branchprotectionruleconflictedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "BranchProtectionRuleConflict",
          "id": "branchprotectionruleconflict",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconflict"
        }
      ]
    },
    {
      "name": "BranchProtectionRuleConnection",
      "kind": "objects",
      "id": "branchprotectionruleconnection",
      "href": "/graphql/reference/objects#branchprotectionruleconnection",
      "description": "<p>The connection type for BranchProtectionRule.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[BranchProtectionRuleEdge]",
          "id": "branchprotectionruleedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[BranchProtectionRule]",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "BranchProtectionRuleEdge",
      "kind": "objects",
      "id": "branchprotectionruleedge",
      "href": "/graphql/reference/objects#branchprotectionruleedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        }
      ]
    },
    {
      "name": "BypassForcePushAllowance",
      "kind": "objects",
      "id": "bypassforcepushallowance",
      "href": "/graphql/reference/objects#bypassforcepushallowance",
      "description": "<p>A user, team, or app who has the ability to bypass a force push requirement on a protected branch.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>The actor that can force push.</p>",
          "type": "BranchActorAllowanceActor",
          "id": "branchactorallowanceactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#branchactorallowanceactor"
        },
        {
          "name": "branchProtectionRule",
          "description": "<p>Identifies the branch protection rule associated with the allowed user, team, or app.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "BypassForcePushAllowanceConnection",
      "kind": "objects",
      "id": "bypassforcepushallowanceconnection",
      "href": "/graphql/reference/objects#bypassforcepushallowanceconnection",
      "description": "<p>The connection type for BypassForcePushAllowance.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[BypassForcePushAllowanceEdge]",
          "id": "bypassforcepushallowanceedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#bypassforcepushallowanceedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[BypassForcePushAllowance]",
          "id": "bypassforcepushallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#bypassforcepushallowance"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "BypassForcePushAllowanceEdge",
      "kind": "objects",
      "id": "bypassforcepushallowanceedge",
      "href": "/graphql/reference/objects#bypassforcepushallowanceedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "BypassForcePushAllowance",
          "id": "bypassforcepushallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#bypassforcepushallowance"
        }
      ]
    },
    {
      "name": "BypassPullRequestAllowance",
      "kind": "objects",
      "id": "bypasspullrequestallowance",
      "href": "/graphql/reference/objects#bypasspullrequestallowance",
      "description": "<p>A user, team, or app who has the ability to bypass a pull request requirement on a protected branch.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>The actor that can bypass.</p>",
          "type": "BranchActorAllowanceActor",
          "id": "branchactorallowanceactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#branchactorallowanceactor"
        },
        {
          "name": "branchProtectionRule",
          "description": "<p>Identifies the branch protection rule associated with the allowed user, team, or app.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "BypassPullRequestAllowanceConnection",
      "kind": "objects",
      "id": "bypasspullrequestallowanceconnection",
      "href": "/graphql/reference/objects#bypasspullrequestallowanceconnection",
      "description": "<p>The connection type for BypassPullRequestAllowance.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[BypassPullRequestAllowanceEdge]",
          "id": "bypasspullrequestallowanceedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#bypasspullrequestallowanceedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[BypassPullRequestAllowance]",
          "id": "bypasspullrequestallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#bypasspullrequestallowance"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "BypassPullRequestAllowanceEdge",
      "kind": "objects",
      "id": "bypasspullrequestallowanceedge",
      "href": "/graphql/reference/objects#bypasspullrequestallowanceedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "BypassPullRequestAllowance",
          "id": "bypasspullrequestallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#bypasspullrequestallowance"
        }
      ]
    },
    {
      "name": "CVSS",
      "kind": "objects",
      "id": "cvss",
      "href": "/graphql/reference/objects#cvss",
      "description": "<p>The Common Vulnerability Scoring System.</p>",
      "fields": [
        {
          "name": "score",
          "description": "<p>The CVSS score associated with this advisory.</p>",
          "type": "Float!",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "vectorString",
          "description": "<p>The CVSS vector string associated with this advisory.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CWE",
      "kind": "objects",
      "id": "cwe",
      "href": "/graphql/reference/objects#cwe",
      "description": "<p>A common weakness enumeration.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "cweId",
          "description": "<p>The id of the CWE.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "description",
          "description": "<p>A detailed description of this CWE.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The name of this CWE.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CWEConnection",
      "kind": "objects",
      "id": "cweconnection",
      "href": "/graphql/reference/objects#cweconnection",
      "description": "<p>The connection type for CWE.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CWEEdge]",
          "id": "cweedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#cweedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CWE]",
          "id": "cwe",
          "kind": "objects",
          "href": "/graphql/reference/objects#cwe"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CWEEdge",
      "kind": "objects",
      "id": "cweedge",
      "href": "/graphql/reference/objects#cweedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CWE",
          "id": "cwe",
          "kind": "objects",
          "href": "/graphql/reference/objects#cwe"
        }
      ]
    },
    {
      "name": "CheckAnnotation",
      "kind": "objects",
      "id": "checkannotation",
      "href": "/graphql/reference/objects#checkannotation",
      "description": "<p>A single check annotation.</p>",
      "fields": [
        {
          "name": "annotationLevel",
          "description": "<p>The annotation's severity level.</p>",
          "type": "CheckAnnotationLevel",
          "id": "checkannotationlevel",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkannotationlevel"
        },
        {
          "name": "blobUrl",
          "description": "<p>The path to the file that this annotation was made on.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "location",
          "description": "<p>The position of this annotation.</p>",
          "type": "CheckAnnotationSpan!",
          "id": "checkannotationspan",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationspan"
        },
        {
          "name": "message",
          "description": "<p>The annotation's message.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>The path that this annotation was made on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "rawDetails",
          "description": "<p>Additional information about the annotation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>The annotation's title.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CheckAnnotationConnection",
      "kind": "objects",
      "id": "checkannotationconnection",
      "href": "/graphql/reference/objects#checkannotationconnection",
      "description": "<p>The connection type for CheckAnnotation.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CheckAnnotationEdge]",
          "id": "checkannotationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CheckAnnotation]",
          "id": "checkannotation",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotation"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckAnnotationEdge",
      "kind": "objects",
      "id": "checkannotationedge",
      "href": "/graphql/reference/objects#checkannotationedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CheckAnnotation",
          "id": "checkannotation",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotation"
        }
      ]
    },
    {
      "name": "CheckAnnotationPosition",
      "kind": "objects",
      "id": "checkannotationposition",
      "href": "/graphql/reference/objects#checkannotationposition",
      "description": "<p>A character position in a check annotation.</p>",
      "fields": [
        {
          "name": "column",
          "description": "<p>Column number (1 indexed).</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "line",
          "description": "<p>Line number (1 indexed).</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckAnnotationSpan",
      "kind": "objects",
      "id": "checkannotationspan",
      "href": "/graphql/reference/objects#checkannotationspan",
      "description": "<p>An inclusive pair of positions for a check annotation.</p>",
      "fields": [
        {
          "name": "end",
          "description": "<p>End position (inclusive).</p>",
          "type": "CheckAnnotationPosition!",
          "id": "checkannotationposition",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationposition"
        },
        {
          "name": "start",
          "description": "<p>Start position (inclusive).</p>",
          "type": "CheckAnnotationPosition!",
          "id": "checkannotationposition",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationposition"
        }
      ]
    },
    {
      "name": "CheckRun",
      "kind": "objects",
      "id": "checkrun",
      "href": "/graphql/reference/objects#checkrun",
      "description": "<p>A check run.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RequirableByPullRequest",
          "id": "requirablebypullrequest",
          "href": "/graphql/reference/interfaces#requirablebypullrequest"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "annotations",
          "description": "<p>The check run's annotations.</p>",
          "type": "CheckAnnotationConnection",
          "id": "checkannotationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "checkSuite",
          "description": "<p>The check suite that this run is a part of.</p>",
          "type": "CheckSuite!",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite"
        },
        {
          "name": "completedAt",
          "description": "<p>Identifies the date and time when the check run was completed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "conclusion",
          "description": "<p>The conclusion of the check run.</p>",
          "type": "CheckConclusionState",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deployment",
          "description": "<p>The corresponding deployment for this job, if any.</p>",
          "type": "Deployment",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment"
        },
        {
          "name": "detailsUrl",
          "description": "<p>The URL from which to find full details of the check run on the integrator's site.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "externalId",
          "description": "<p>A reference for the check run on the integrator's system.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isRequired",
          "description": "<p>Whether this is required to pass before merging for a specific pull request.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "pullRequestId",
              "description": "<p>The id of the pull request this is required for.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            },
            {
              "name": "pullRequestNumber",
              "description": "<p>The number of the pull request this is required for.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>The name of the check for this check run.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pendingDeploymentRequest",
          "description": "<p>Information about a pending deployment, if any, in this check run.</p>",
          "type": "DeploymentRequest",
          "id": "deploymentrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentrequest"
        },
        {
          "name": "permalink",
          "description": "<p>The permalink to the check run summary.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this check run.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this check run.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "startedAt",
          "description": "<p>Identifies the date and time when the check run was started.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "status",
          "description": "<p>The current status of the check run.</p>",
          "type": "CheckStatusState!",
          "id": "checkstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkstatusstate"
        },
        {
          "name": "steps",
          "description": "<p>The check run's steps.</p>",
          "type": "CheckStepConnection",
          "id": "checkstepconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkstepconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "number",
              "description": "<p>Step number.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "summary",
          "description": "<p>A string representing the check run's summary.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "text",
          "description": "<p>A string representing the check run's text.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>A string representing the check run.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this check run.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CheckRunConnection",
      "kind": "objects",
      "id": "checkrunconnection",
      "href": "/graphql/reference/objects#checkrunconnection",
      "description": "<p>The connection type for CheckRun.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CheckRunEdge]",
          "id": "checkrunedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrunedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CheckRun]",
          "id": "checkrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrun"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckRunEdge",
      "kind": "objects",
      "id": "checkrunedge",
      "href": "/graphql/reference/objects#checkrunedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CheckRun",
          "id": "checkrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrun"
        }
      ]
    },
    {
      "name": "CheckRunStateCount",
      "kind": "objects",
      "id": "checkrunstatecount",
      "href": "/graphql/reference/objects#checkrunstatecount",
      "description": "<p>Represents a count of the state of a check run.</p>",
      "fields": [
        {
          "name": "count",
          "description": "<p>The number of check runs with this state.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "state",
          "description": "<p>The state of a check run.</p>",
          "type": "CheckRunState!",
          "id": "checkrunstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkrunstate"
        }
      ]
    },
    {
      "name": "CheckStep",
      "kind": "objects",
      "id": "checkstep",
      "href": "/graphql/reference/objects#checkstep",
      "description": "<p>A single check step.</p>",
      "fields": [
        {
          "name": "completedAt",
          "description": "<p>Identifies the date and time when the check step was completed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "conclusion",
          "description": "<p>The conclusion of the check step.</p>",
          "type": "CheckConclusionState",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "externalId",
          "description": "<p>A reference for the check step on the integrator's system.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The step's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "number",
          "description": "<p>The index of the step in the list of steps of the parent check run.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "secondsToCompletion",
          "description": "<p>Number of seconds to completion.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startedAt",
          "description": "<p>Identifies the date and time when the check step was started.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "status",
          "description": "<p>The current status of the check step.</p>",
          "type": "CheckStatusState!",
          "id": "checkstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkstatusstate"
        }
      ]
    },
    {
      "name": "CheckStepConnection",
      "kind": "objects",
      "id": "checkstepconnection",
      "href": "/graphql/reference/objects#checkstepconnection",
      "description": "<p>The connection type for CheckStep.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CheckStepEdge]",
          "id": "checkstepedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkstepedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CheckStep]",
          "id": "checkstep",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkstep"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckStepEdge",
      "kind": "objects",
      "id": "checkstepedge",
      "href": "/graphql/reference/objects#checkstepedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CheckStep",
          "id": "checkstep",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkstep"
        }
      ]
    },
    {
      "name": "CheckSuite",
      "kind": "objects",
      "id": "checksuite",
      "href": "/graphql/reference/objects#checksuite",
      "description": "<p>A check suite.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "app",
          "description": "<p>The GitHub App which created this check suite.</p>",
          "type": "App",
          "id": "app",
          "kind": "objects",
          "href": "/graphql/reference/objects#app"
        },
        {
          "name": "branch",
          "description": "<p>The name of the branch for this check suite.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "checkRuns",
          "description": "<p>The check runs associated with a check suite.</p>",
          "type": "CheckRunConnection",
          "id": "checkrunconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrunconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filters the check runs by this type.</p>",
              "type": {
                "name": "CheckRunFilter",
                "id": "checkrunfilter",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#checkrunfilter"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>The commit for this check suite.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "conclusion",
          "description": "<p>The conclusion of this check suite.</p>",
          "type": "CheckConclusionState",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The user who triggered the check suite.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "matchingPullRequests",
          "description": "<p>A list of open pull requests matching the check suite.</p>",
          "type": "PullRequestConnection",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "push",
          "description": "<p>The push that triggered this check suite.</p>",
          "type": "Push",
          "id": "push",
          "kind": "objects",
          "href": "/graphql/reference/objects#push"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this check suite.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this check suite.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "status",
          "description": "<p>The status of this check suite.</p>",
          "type": "CheckStatusState!",
          "id": "checkstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkstatusstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this check suite.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "workflowRun",
          "description": "<p>The workflow run associated with this check suite.</p>",
          "type": "WorkflowRun",
          "id": "workflowrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#workflowrun"
        }
      ]
    },
    {
      "name": "CheckSuiteConnection",
      "kind": "objects",
      "id": "checksuiteconnection",
      "href": "/graphql/reference/objects#checksuiteconnection",
      "description": "<p>The connection type for CheckSuite.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CheckSuiteEdge]",
          "id": "checksuiteedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuiteedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CheckSuite]",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckSuiteEdge",
      "kind": "objects",
      "id": "checksuiteedge",
      "href": "/graphql/reference/objects#checksuiteedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CheckSuite",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite"
        }
      ]
    },
    {
      "name": "ClosedEvent",
      "kind": "objects",
      "id": "closedevent",
      "href": "/graphql/reference/objects#closedevent",
      "description": "<p>Represents a<code>closed</code>event on any <code>Closable</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "closable",
          "description": "<p>Object that was closed.</p>",
          "type": "Closable!",
          "id": "closable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "closer",
          "description": "<p>Object which triggered the creation of this event.</p>",
          "type": "Closer",
          "id": "closer",
          "kind": "unions",
          "href": "/graphql/reference/unions#closer"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this closed event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "stateReason",
          "description": "<p>The reason the issue state was changed to closed.</p>",
          "type": "IssueStateReason",
          "id": "issuestatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuestatereason"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this closed event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CodeOfConduct",
      "kind": "objects",
      "id": "codeofconduct",
      "href": "/graphql/reference/objects#codeofconduct",
      "description": "<p>The Code of Conduct for a repository.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "body",
          "description": "<p>The body of the Code of Conduct.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "key",
          "description": "<p>The key for the Code of Conduct.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The formal name of the Code of Conduct.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this Code of Conduct.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this Code of Conduct.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CommentDeletedEvent",
      "kind": "objects",
      "id": "commentdeletedevent",
      "href": "/graphql/reference/objects#commentdeletedevent",
      "description": "<p>Represents a<code>comment_deleted</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deletedCommentAuthor",
          "description": "<p>The user who authored the deleted comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "Commit",
      "kind": "objects",
      "id": "commit",
      "href": "/graphql/reference/objects#commit",
      "description": "<p>Represents a Git commit.</p>",
      "implements": [
        {
          "name": "GitObject",
          "id": "gitobject",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "additions",
          "description": "<p>The number of additions in this commit.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "associatedPullRequests",
          "description": "<p>The merged Pull Request that introduced the commit to the repository. If the\ncommit is not present in the default branch, additionally returns open Pull\nRequests associated with the commit.</p>",
          "type": "PullRequestConnection",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests.</p>",
              "type": {
                "name": "PullRequestOrder",
                "id": "pullrequestorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#pullrequestorder"
              }
            }
          ]
        },
        {
          "name": "author",
          "description": "<p>Authorship details of the commit.</p>",
          "type": "GitActor",
          "id": "gitactor",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactor"
        },
        {
          "name": "authoredByCommitter",
          "description": "<p>Check if the committer and the author match.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "authoredDate",
          "description": "<p>The datetime when this commit was authored.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "authors",
          "description": "<p>The list of authors for this commit based on the git author and the Co-authored-by\nmessage trailer. The git author will always be first.</p>",
          "type": "GitActorConnection!",
          "id": "gitactorconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactorconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "blame",
          "description": "<p>Fetches <code>git blame</code> information.</p>",
          "type": "Blame!",
          "id": "blame",
          "kind": "objects",
          "href": "/graphql/reference/objects#blame",
          "arguments": [
            {
              "name": "path",
              "description": "<p>The file whose Git blame information you want.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "changedFiles",
          "description": "<p>We recommend using the <code>changedFilesIfAvailable</code> field instead of\n<code>changedFiles</code>, as <code>changedFiles</code> will cause your request to return an error\nif GitHub is unable to calculate the number of changed files.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "isDeprecated": true,
          "deprecationReason": "<p><code>changedFiles</code> will be removed. Use <code>changedFilesIfAvailable</code> instead. Removal on 2023-01-01 UTC.</p>"
        },
        {
          "name": "changedFilesIfAvailable",
          "description": "<p>The number of changed files in this commit. If GitHub is unable to calculate\nthe number of changed files (for example due to a timeout), this will return\n<code>null</code>. We recommend using this field instead of <code>changedFiles</code>.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "checkSuites",
          "description": "<p>The check suites associated with a commit.</p>",
          "type": "CheckSuiteConnection",
          "id": "checksuiteconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuiteconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filters the check suites by this type.</p>",
              "type": {
                "name": "CheckSuiteFilter",
                "id": "checksuitefilter",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#checksuitefilter"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "comments",
          "description": "<p>Comments made on the commit.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "committedDate",
          "description": "<p>The datetime when this commit was committed.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "committedViaWeb",
          "description": "<p>Check if committed via GitHub web UI.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "committer",
          "description": "<p>Committer details of the commit.</p>",
          "type": "GitActor",
          "id": "gitactor",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactor"
        },
        {
          "name": "deletions",
          "description": "<p>The number of deletions in this commit.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deployments",
          "description": "<p>The deployments associated with a commit.</p>",
          "type": "DeploymentConnection",
          "id": "deploymentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "environments",
              "description": "<p>Environments to list deployments for.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for deployments returned from the connection.</p>",
              "type": {
                "name": "DeploymentOrder",
                "id": "deploymentorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#deploymentorder"
              }
            }
          ]
        },
        {
          "name": "file",
          "description": "<p>The tree entry representing the file located at the given path.</p>",
          "type": "TreeEntry",
          "id": "treeentry",
          "kind": "objects",
          "href": "/graphql/reference/objects#treeentry",
          "arguments": [
            {
              "name": "path",
              "description": "<p>The path for the file.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "history",
          "description": "<p>The linear commit history starting from (and including) this commit, in the same order as <code>git log</code>.</p>",
          "type": "CommitHistoryConnection!",
          "id": "commithistoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commithistoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "author",
              "description": "<p>If non-null, filters history to only show commits with matching authorship.</p>",
              "type": {
                "name": "CommitAuthor",
                "id": "commitauthor",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#commitauthor"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "path",
              "description": "<p>If non-null, filters history to only show commits touching files under this path.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "since",
              "description": "<p>Allows specifying a beginning time or date for fetching commits.</p>",
              "type": {
                "name": "GitTimestamp",
                "id": "gittimestamp",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#gittimestamp"
              }
            },
            {
              "name": "until",
              "description": "<p>Allows specifying an ending time or date for fetching commits.</p>",
              "type": {
                "name": "GitTimestamp",
                "id": "gittimestamp",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#gittimestamp"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "message",
          "description": "<p>The Git commit message.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "messageBody",
          "description": "<p>The Git commit message body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "messageBodyHTML",
          "description": "<p>The commit message body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "messageHeadline",
          "description": "<p>The Git commit message headline.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "messageHeadlineHTML",
          "description": "<p>The commit message headline rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "onBehalfOf",
          "description": "<p>The organization this commit was made on behalf of.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "parents",
          "description": "<p>The parents of a commit.</p>",
          "type": "CommitConnection!",
          "id": "commitconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "pushedDate",
          "description": "<p>The datetime when this commit was pushed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime",
          "isDeprecated": true,
          "deprecationReason": "<p><code>pushedDate</code> is no longer supported. Removal on 2023-07-01 UTC.</p>"
        },
        {
          "name": "repository",
          "description": "<p>The Repository this commit belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "signature",
          "description": "<p>Commit signing information, if present.</p>",
          "type": "GitSignature",
          "id": "gitsignature",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitsignature"
        },
        {
          "name": "status",
          "description": "<p>Status information for this commit.</p>",
          "type": "Status",
          "id": "status",
          "kind": "objects",
          "href": "/graphql/reference/objects#status"
        },
        {
          "name": "statusCheckRollup",
          "description": "<p>Check and Status rollup information for this commit.</p>",
          "type": "StatusCheckRollup",
          "id": "statuscheckrollup",
          "kind": "objects",
          "href": "/graphql/reference/objects#statuscheckrollup"
        },
        {
          "name": "submodules",
          "description": "<p>Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file.</p>",
          "type": "SubmoduleConnection!",
          "id": "submoduleconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#submoduleconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "tarballUrl",
          "description": "<p>Returns a URL to download a tarball archive for a repository.\nNote: For private repositories, these links are temporary and expire after five minutes.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "tree",
          "description": "<p>Commit's root Tree.</p>",
          "type": "Tree!",
          "id": "tree",
          "kind": "objects",
          "href": "/graphql/reference/objects#tree"
        },
        {
          "name": "treeResourcePath",
          "description": "<p>The HTTP path for the tree of this commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "treeUrl",
          "description": "<p>The HTTP URL for the tree of this commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        },
        {
          "name": "zipballUrl",
          "description": "<p>Returns a URL to download a zipball archive for a repository.\nNote: For private repositories, these links are temporary and expire after five minutes.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CommitComment",
      "kind": "objects",
      "id": "commitcomment",
      "href": "/graphql/reference/objects#commitcomment",
      "description": "<p>Represents a comment on a given Commit.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Minimizable",
          "id": "minimizable",
          "href": "/graphql/reference/interfaces#minimizable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>Identifies the comment body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with the comment, if the commit exists.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized. One of <code>abuse</code>, <code>off-topic</code>,\n<code>outdated</code>, <code>resolved</code>, <code>duplicate</code> and <code>spam</code>. Note that the case and\nformatting of these values differs from the inputs to the <code>MinimizeComment</code> mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>Identifies the file path associated with the comment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>Identifies the line position associated with the comment.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path permalink for this commit comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL permalink for this commit comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "CommitCommentConnection",
      "kind": "objects",
      "id": "commitcommentconnection",
      "href": "/graphql/reference/objects#commitcommentconnection",
      "description": "<p>The connection type for CommitComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CommitCommentEdge]",
          "id": "commitcommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CommitComment]",
          "id": "commitcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CommitCommentEdge",
      "kind": "objects",
      "id": "commitcommentedge",
      "href": "/graphql/reference/objects#commitcommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CommitComment",
          "id": "commitcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcomment"
        }
      ]
    },
    {
      "name": "CommitCommentThread",
      "kind": "objects",
      "id": "commitcommentthread",
      "href": "/graphql/reference/objects#commitcommentthread",
      "description": "<p>A thread of comments on a commit.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        }
      ],
      "fields": [
        {
          "name": "comments",
          "description": "<p>The comments that exist in this thread.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>The commit the comments were made on.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "path",
          "description": "<p>The file the comments were made on.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>The position in the diff for the commit that the comment was made on.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "CommitConnection",
      "kind": "objects",
      "id": "commitconnection",
      "href": "/graphql/reference/objects#commitconnection",
      "description": "<p>The connection type for Commit.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CommitEdge]",
          "id": "commitedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Commit]",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CommitContributionsByRepository",
      "kind": "objects",
      "id": "commitcontributionsbyrepository",
      "href": "/graphql/reference/objects#commitcontributionsbyrepository",
      "description": "<p>This aggregates commits made by a user within one repository.</p>",
      "fields": [
        {
          "name": "contributions",
          "description": "<p>The commit contributions, each representing a day.</p>",
          "type": "CreatedCommitContributionConnection!",
          "id": "createdcommitcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdcommitcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for commit contributions returned from the connection.</p>",
              "type": {
                "name": "CommitContributionOrder",
                "id": "commitcontributionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#commitcontributionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository in which the commits were made.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for the user's commits to the repository in this time range.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for the user's commits to the repository in this time range.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CommitEdge",
      "kind": "objects",
      "id": "commitedge",
      "href": "/graphql/reference/objects#commitedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        }
      ]
    },
    {
      "name": "CommitHistoryConnection",
      "kind": "objects",
      "id": "commithistoryconnection",
      "href": "/graphql/reference/objects#commithistoryconnection",
      "description": "<p>The connection type for Commit.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CommitEdge]",
          "id": "commitedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Commit]",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "Comparison",
      "kind": "objects",
      "id": "comparison",
      "href": "/graphql/reference/objects#comparison",
      "description": "<p>Represents a comparison between two commit revisions.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "aheadBy",
          "description": "<p>The number of commits ahead of the base branch.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "baseTarget",
          "description": "<p>The base revision of this comparison.</p>",
          "type": "GitObject!",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "behindBy",
          "description": "<p>The number of commits behind the base branch.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "commits",
          "description": "<p>The commits which compose this comparison.</p>",
          "type": "ComparisonCommitConnection!",
          "id": "comparisoncommitconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#comparisoncommitconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "headTarget",
          "description": "<p>The head revision of this comparison.</p>",
          "type": "GitObject!",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "status",
          "description": "<p>The status of this comparison.</p>",
          "type": "ComparisonStatus!",
          "id": "comparisonstatus",
          "kind": "enums",
          "href": "/graphql/reference/enums#comparisonstatus"
        }
      ]
    },
    {
      "name": "ComparisonCommitConnection",
      "kind": "objects",
      "id": "comparisoncommitconnection",
      "href": "/graphql/reference/objects#comparisoncommitconnection",
      "description": "<p>The connection type for Commit.</p>",
      "fields": [
        {
          "name": "authorCount",
          "description": "<p>The total count of authors and co-authors across all commits.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CommitEdge]",
          "id": "commitedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Commit]",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ConnectedEvent",
      "kind": "objects",
      "id": "connectedevent",
      "href": "/graphql/reference/objects#connectedevent",
      "description": "<p>Represents a<code>connected</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>Reference originated in a different repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "source",
          "description": "<p>Issue or pull request that made the reference.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        },
        {
          "name": "subject",
          "description": "<p>Issue or pull request which was connected.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        }
      ]
    },
    {
      "name": "ContributionCalendar",
      "kind": "objects",
      "id": "contributioncalendar",
      "href": "/graphql/reference/objects#contributioncalendar",
      "description": "<p>A calendar of contributions made on GitHub by a user.</p>",
      "fields": [
        {
          "name": "colors",
          "description": "<p>A list of hex color codes used in this calendar. The darker the color, the more contributions it represents.</p>",
          "type": "[String!]!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isHalloween",
          "description": "<p>Determine if the color set was chosen because it's currently Halloween.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "months",
          "description": "<p>A list of the months of contributions in this calendar.</p>",
          "type": "[ContributionCalendarMonth!]!",
          "id": "contributioncalendarmonth",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributioncalendarmonth"
        },
        {
          "name": "totalContributions",
          "description": "<p>The count of total contributions in the calendar.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "weeks",
          "description": "<p>A list of the weeks of contributions in this calendar.</p>",
          "type": "[ContributionCalendarWeek!]!",
          "id": "contributioncalendarweek",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributioncalendarweek"
        }
      ]
    },
    {
      "name": "ContributionCalendarDay",
      "kind": "objects",
      "id": "contributioncalendarday",
      "href": "/graphql/reference/objects#contributioncalendarday",
      "description": "<p>Represents a single day of contributions on GitHub by a user.</p>",
      "fields": [
        {
          "name": "color",
          "description": "<p>The hex color code that represents how many contributions were made on this day compared to others in the calendar.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "contributionCount",
          "description": "<p>How many contributions were made by the user on this day.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "contributionLevel",
          "description": "<p>Indication of contributions, relative to other days. Can be used to indicate\nwhich color to represent this day on a calendar.</p>",
          "type": "ContributionLevel!",
          "id": "contributionlevel",
          "kind": "enums",
          "href": "/graphql/reference/enums#contributionlevel"
        },
        {
          "name": "date",
          "description": "<p>The day this square represents.</p>",
          "type": "Date!",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "weekday",
          "description": "<p>A number representing which day of the week this square represents, e.g., 1 is Monday.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ContributionCalendarMonth",
      "kind": "objects",
      "id": "contributioncalendarmonth",
      "href": "/graphql/reference/objects#contributioncalendarmonth",
      "description": "<p>A month of contributions in a user's contribution graph.</p>",
      "fields": [
        {
          "name": "firstDay",
          "description": "<p>The date of the first day of this month.</p>",
          "type": "Date!",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "name",
          "description": "<p>The name of the month.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "totalWeeks",
          "description": "<p>How many weeks started in this month.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "year",
          "description": "<p>The year the month occurred in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ContributionCalendarWeek",
      "kind": "objects",
      "id": "contributioncalendarweek",
      "href": "/graphql/reference/objects#contributioncalendarweek",
      "description": "<p>A week of contributions in a user's contribution graph.</p>",
      "fields": [
        {
          "name": "contributionDays",
          "description": "<p>The days of contributions in this week.</p>",
          "type": "[ContributionCalendarDay!]!",
          "id": "contributioncalendarday",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributioncalendarday"
        },
        {
          "name": "firstDay",
          "description": "<p>The date of the earliest square in this week.</p>",
          "type": "Date!",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        }
      ]
    },
    {
      "name": "ContributionsCollection",
      "kind": "objects",
      "id": "contributionscollection",
      "href": "/graphql/reference/objects#contributionscollection",
      "description": "<p>A contributions collection aggregates contributions such as opened issues and commits created by a user.</p>",
      "fields": [
        {
          "name": "commitContributionsByRepository",
          "description": "<p>Commit contributions made by the user, grouped by repository.</p>",
          "type": "[CommitContributionsByRepository!]!",
          "id": "commitcontributionsbyrepository",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcontributionsbyrepository",
          "arguments": [
            {
              "name": "maxRepositories",
              "defaultValue": "25",
              "description": "<p>How many repositories should be included.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "contributionCalendar",
          "description": "<p>A calendar of this user's contributions on GitHub.</p>",
          "type": "ContributionCalendar!",
          "id": "contributioncalendar",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributioncalendar"
        },
        {
          "name": "contributionYears",
          "description": "<p>The years the user has been making contributions with the most recent year first.</p>",
          "type": "[Int!]!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "doesEndInCurrentMonth",
          "description": "<p>Determine if this collection's time span ends in the current month.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "earliestRestrictedContributionDate",
          "description": "<p>The date of the first restricted contribution the user made in this time\nperiod. Can only be non-null when the user has enabled private contribution counts.</p>",
          "type": "Date",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "endedAt",
          "description": "<p>The ending date and time of this collection.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "firstIssueContribution",
          "description": "<p>The first issue the user opened on GitHub. This will be null if that issue was\nopened outside the collection's time range and ignoreTimeRange is false. If\nthe issue is not visible but the user has opted to show private contributions,\na RestrictedContribution will be returned.</p>",
          "type": "CreatedIssueOrRestrictedContribution",
          "id": "createdissueorrestrictedcontribution",
          "kind": "unions",
          "href": "/graphql/reference/unions#createdissueorrestrictedcontribution"
        },
        {
          "name": "firstPullRequestContribution",
          "description": "<p>The first pull request the user opened on GitHub. This will be null if that\npull request was opened outside the collection's time range and\nignoreTimeRange is not true. If the pull request is not visible but the user\nhas opted to show private contributions, a RestrictedContribution will be returned.</p>",
          "type": "CreatedPullRequestOrRestrictedContribution",
          "id": "createdpullrequestorrestrictedcontribution",
          "kind": "unions",
          "href": "/graphql/reference/unions#createdpullrequestorrestrictedcontribution"
        },
        {
          "name": "firstRepositoryContribution",
          "description": "<p>The first repository the user created on GitHub. This will be null if that\nfirst repository was created outside the collection's time range and\nignoreTimeRange is false. If the repository is not visible, then a\nRestrictedContribution is returned.</p>",
          "type": "CreatedRepositoryOrRestrictedContribution",
          "id": "createdrepositoryorrestrictedcontribution",
          "kind": "unions",
          "href": "/graphql/reference/unions#createdrepositoryorrestrictedcontribution"
        },
        {
          "name": "hasActivityInThePast",
          "description": "<p>Does the user have any more activity in the timeline that occurred prior to the collection's time range?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasAnyContributions",
          "description": "<p>Determine if there are any contributions in this collection.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasAnyRestrictedContributions",
          "description": "<p>Determine if the user made any contributions in this time frame whose details\nare not visible because they were made in a private repository. Can only be\ntrue if the user enabled private contribution counts.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isSingleDay",
          "description": "<p>Whether or not the collector's time span is all within the same day.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issueContributions",
          "description": "<p>A list of issues the user opened.</p>",
          "type": "CreatedIssueContributionConnection!",
          "id": "createdissuecontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first issue ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented issue be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#contributionorder"
              }
            }
          ]
        },
        {
          "name": "issueContributionsByRepository",
          "description": "<p>Issue contributions made by the user, grouped by repository.</p>",
          "type": "[IssueContributionsByRepository!]!",
          "id": "issuecontributionsbyrepository",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecontributionsbyrepository",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first issue ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented issue be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "maxRepositories",
              "defaultValue": "25",
              "description": "<p>How many repositories should be included.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "joinedGitHubContribution",
          "description": "<p>When the user signed up for GitHub. This will be null if that sign up date\nfalls outside the collection's time range and ignoreTimeRange is false.</p>",
          "type": "JoinedGitHubContribution",
          "id": "joinedgithubcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#joinedgithubcontribution"
        },
        {
          "name": "latestRestrictedContributionDate",
          "description": "<p>The date of the most recent restricted contribution the user made in this time\nperiod. Can only be non-null when the user has enabled private contribution counts.</p>",
          "type": "Date",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "mostRecentCollectionWithActivity",
          "description": "<p>When this collection's time range does not include any activity from the user, use this\nto get a different collection from an earlier time range that does have activity.</p>",
          "type": "ContributionsCollection",
          "id": "contributionscollection",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributionscollection"
        },
        {
          "name": "mostRecentCollectionWithoutActivity",
          "description": "<p>Returns a different contributions collection from an earlier time range than this one\nthat does not have any contributions.</p>",
          "type": "ContributionsCollection",
          "id": "contributionscollection",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributionscollection"
        },
        {
          "name": "popularIssueContribution",
          "description": "<p>The issue the user opened on GitHub that received the most comments in the specified\ntime frame.</p>",
          "type": "CreatedIssueContribution",
          "id": "createdissuecontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontribution"
        },
        {
          "name": "popularPullRequestContribution",
          "description": "<p>The pull request the user opened on GitHub that received the most comments in the\nspecified time frame.</p>",
          "type": "CreatedPullRequestContribution",
          "id": "createdpullrequestcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontribution"
        },
        {
          "name": "pullRequestContributions",
          "description": "<p>Pull request contributions made by the user.</p>",
          "type": "CreatedPullRequestContributionConnection!",
          "id": "createdpullrequestcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first pull request ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented pull request be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#contributionorder"
              }
            }
          ]
        },
        {
          "name": "pullRequestContributionsByRepository",
          "description": "<p>Pull request contributions made by the user, grouped by repository.</p>",
          "type": "[PullRequestContributionsByRepository!]!",
          "id": "pullrequestcontributionsbyrepository",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcontributionsbyrepository",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first pull request ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented pull request be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "maxRepositories",
              "defaultValue": "25",
              "description": "<p>How many repositories should be included.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "pullRequestReviewContributions",
          "description": "<p>Pull request review contributions made by the user. Returns the most recently\nsubmitted review for each PR reviewed by the user.</p>",
          "type": "CreatedPullRequestReviewContributionConnection!",
          "id": "createdpullrequestreviewcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#contributionorder"
              }
            }
          ]
        },
        {
          "name": "pullRequestReviewContributionsByRepository",
          "description": "<p>Pull request review contributions made by the user, grouped by repository.</p>",
          "type": "[PullRequestReviewContributionsByRepository!]!",
          "id": "pullrequestreviewcontributionsbyrepository",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcontributionsbyrepository",
          "arguments": [
            {
              "name": "maxRepositories",
              "defaultValue": "25",
              "description": "<p>How many repositories should be included.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "repositoryContributions",
          "description": "<p>A list of repositories owned by the user that the user created in this time range.</p>",
          "type": "CreatedRepositoryContributionConnection!",
          "id": "createdrepositorycontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdrepositorycontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first repository ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#contributionorder"
              }
            }
          ]
        },
        {
          "name": "restrictedContributionsCount",
          "description": "<p>A count of contributions made by the user that the viewer cannot access. Only\nnon-zero when the user has chosen to share their private contribution counts.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startedAt",
          "description": "<p>The beginning date and time of this collection.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "totalCommitContributions",
          "description": "<p>How many commits were made by the user in this time span.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalIssueContributions",
          "description": "<p>How many issues the user opened.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first issue ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented issue be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "totalPullRequestContributions",
          "description": "<p>How many pull requests the user opened.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first pull request ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented pull request be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "totalPullRequestReviewContributions",
          "description": "<p>How many pull request reviews the user left.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalRepositoriesWithContributedCommits",
          "description": "<p>How many different repositories the user committed to.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalRepositoriesWithContributedIssues",
          "description": "<p>How many different repositories the user opened issues in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first issue ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented issue be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "totalRepositoriesWithContributedPullRequestReviews",
          "description": "<p>How many different repositories the user left pull request reviews in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalRepositoriesWithContributedPullRequests",
          "description": "<p>How many different repositories the user opened pull requests in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first pull request ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented pull request be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "totalRepositoryContributions",
          "description": "<p>How many repositories the user created.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first repository ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "user",
          "description": "<p>The user who made the contributions in this collection.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ConvertToDraftEvent",
      "kind": "objects",
      "id": "converttodraftevent",
      "href": "/graphql/reference/objects#converttodraftevent",
      "description": "<p>Represents a<code>convert_to_draft</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this convert to draft event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this convert to draft event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ConvertedNoteToIssueEvent",
      "kind": "objects",
      "id": "convertednotetoissueevent",
      "href": "/graphql/reference/objects#convertednotetoissueevent",
      "description": "<p>Represents a<code>converted_note_to_issue</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "project",
          "description": "<p>Project referenced by event.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectCard",
          "description": "<p>Project card referenced by this project event.</p>",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectColumnName",
          "description": "<p>Column name referenced by this project event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        }
      ]
    },
    {
      "name": "ConvertedToDiscussionEvent",
      "kind": "objects",
      "id": "convertedtodiscussionevent",
      "href": "/graphql/reference/objects#convertedtodiscussionevent",
      "description": "<p>Represents a<code>converted_to_discussion</code>event on a given issue.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "discussion",
          "description": "<p>The discussion that the issue was converted into.</p>",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "CreatedCommitContribution",
      "kind": "objects",
      "id": "createdcommitcontribution",
      "href": "/graphql/reference/objects#createdcommitcontribution",
      "description": "<p>Represents the contribution a user made by committing to a repository.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "commitCount",
          "description": "<p>How many commits were made on this day to this repository by the user.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "repository",
          "description": "<p>The repository the user made a commit in.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedCommitContributionConnection",
      "kind": "objects",
      "id": "createdcommitcontributionconnection",
      "href": "/graphql/reference/objects#createdcommitcontributionconnection",
      "description": "<p>The connection type for CreatedCommitContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedCommitContributionEdge]",
          "id": "createdcommitcontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdcommitcontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedCommitContribution]",
          "id": "createdcommitcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdcommitcontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of commits across days and repositories in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedCommitContributionEdge",
      "kind": "objects",
      "id": "createdcommitcontributionedge",
      "href": "/graphql/reference/objects#createdcommitcontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedCommitContribution",
          "id": "createdcommitcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdcommitcontribution"
        }
      ]
    },
    {
      "name": "CreatedIssueContribution",
      "kind": "objects",
      "id": "createdissuecontribution",
      "href": "/graphql/reference/objects#createdissuecontribution",
      "description": "<p>Represents the contribution a user made on GitHub by opening an issue.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issue",
          "description": "<p>The issue that was opened.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedIssueContributionConnection",
      "kind": "objects",
      "id": "createdissuecontributionconnection",
      "href": "/graphql/reference/objects#createdissuecontributionconnection",
      "description": "<p>The connection type for CreatedIssueContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedIssueContributionEdge]",
          "id": "createdissuecontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedIssueContribution]",
          "id": "createdissuecontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedIssueContributionEdge",
      "kind": "objects",
      "id": "createdissuecontributionedge",
      "href": "/graphql/reference/objects#createdissuecontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedIssueContribution",
          "id": "createdissuecontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontribution"
        }
      ]
    },
    {
      "name": "CreatedPullRequestContribution",
      "kind": "objects",
      "id": "createdpullrequestcontribution",
      "href": "/graphql/reference/objects#createdpullrequestcontribution",
      "description": "<p>Represents the contribution a user made on GitHub by opening a pull request.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request that was opened.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedPullRequestContributionConnection",
      "kind": "objects",
      "id": "createdpullrequestcontributionconnection",
      "href": "/graphql/reference/objects#createdpullrequestcontributionconnection",
      "description": "<p>The connection type for CreatedPullRequestContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedPullRequestContributionEdge]",
          "id": "createdpullrequestcontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedPullRequestContribution]",
          "id": "createdpullrequestcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedPullRequestContributionEdge",
      "kind": "objects",
      "id": "createdpullrequestcontributionedge",
      "href": "/graphql/reference/objects#createdpullrequestcontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedPullRequestContribution",
          "id": "createdpullrequestcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontribution"
        }
      ]
    },
    {
      "name": "CreatedPullRequestReviewContribution",
      "kind": "objects",
      "id": "createdpullrequestreviewcontribution",
      "href": "/graphql/reference/objects#createdpullrequestreviewcontribution",
      "description": "<p>Represents the contribution a user made by leaving a review on a pull request.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request the user reviewed.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "pullRequestReview",
          "description": "<p>The review the user left on the pull request.</p>",
          "type": "PullRequestReview!",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "repository",
          "description": "<p>The repository containing the pull request that the user reviewed.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedPullRequestReviewContributionConnection",
      "kind": "objects",
      "id": "createdpullrequestreviewcontributionconnection",
      "href": "/graphql/reference/objects#createdpullrequestreviewcontributionconnection",
      "description": "<p>The connection type for CreatedPullRequestReviewContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedPullRequestReviewContributionEdge]",
          "id": "createdpullrequestreviewcontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedPullRequestReviewContribution]",
          "id": "createdpullrequestreviewcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedPullRequestReviewContributionEdge",
      "kind": "objects",
      "id": "createdpullrequestreviewcontributionedge",
      "href": "/graphql/reference/objects#createdpullrequestreviewcontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedPullRequestReviewContribution",
          "id": "createdpullrequestreviewcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontribution"
        }
      ]
    },
    {
      "name": "CreatedRepositoryContribution",
      "kind": "objects",
      "id": "createdrepositorycontribution",
      "href": "/graphql/reference/objects#createdrepositorycontribution",
      "description": "<p>Represents the contribution a user made on GitHub by creating a repository.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "repository",
          "description": "<p>The repository that was created.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedRepositoryContributionConnection",
      "kind": "objects",
      "id": "createdrepositorycontributionconnection",
      "href": "/graphql/reference/objects#createdrepositorycontributionconnection",
      "description": "<p>The connection type for CreatedRepositoryContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedRepositoryContributionEdge]",
          "id": "createdrepositorycontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdrepositorycontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedRepositoryContribution]",
          "id": "createdrepositorycontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdrepositorycontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedRepositoryContributionEdge",
      "kind": "objects",
      "id": "createdrepositorycontributionedge",
      "href": "/graphql/reference/objects#createdrepositorycontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedRepositoryContribution",
          "id": "createdrepositorycontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdrepositorycontribution"
        }
      ]
    },
    {
      "name": "CrossReferencedEvent",
      "kind": "objects",
      "id": "crossreferencedevent",
      "href": "/graphql/reference/objects#crossreferencedevent",
      "description": "<p>Represents a mention made by one issue or pull request to another.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>Reference originated in a different repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "referencedAt",
          "description": "<p>Identifies when the reference was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "source",
          "description": "<p>Issue or pull request that made the reference.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        },
        {
          "name": "target",
          "description": "<p>Issue or pull request to which the reference was made.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "willCloseTarget",
          "description": "<p>Checks if the target will be closed when the source is merged.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "DemilestonedEvent",
      "kind": "objects",
      "id": "demilestonedevent",
      "href": "/graphql/reference/objects#demilestonedevent",
      "description": "<p>Represents a<code>demilestoned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "milestoneTitle",
          "description": "<p>Identifies the milestone title associated with the<code>demilestoned</code>event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subject",
          "description": "<p>Object referenced by event.</p>",
          "type": "MilestoneItem!",
          "id": "milestoneitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#milestoneitem"
        }
      ]
    },
    {
      "name": "DependabotUpdate",
      "kind": "objects",
      "id": "dependabotupdate",
      "href": "/graphql/reference/objects#dependabotupdate",
      "description": "<p>A Dependabot Update for a dependency in a repository.</p>",
      "implements": [
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        }
      ],
      "fields": [
        {
          "name": "error",
          "description": "<p>The error from a dependency update.</p>",
          "type": "DependabotUpdateError",
          "id": "dependabotupdateerror",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependabotupdateerror"
        },
        {
          "name": "pullRequest",
          "description": "<p>The associated pull request.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "DependabotUpdateError",
      "kind": "objects",
      "id": "dependabotupdateerror",
      "href": "/graphql/reference/objects#dependabotupdateerror",
      "description": "<p>An error produced from a Dependabot Update.</p>",
      "fields": [
        {
          "name": "body",
          "description": "<p>The body of the error.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "errorType",
          "description": "<p>The error code.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>The title of the error.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "DependencyGraphDependency",
      "kind": "objects",
      "id": "dependencygraphdependency",
      "href": "/graphql/reference/objects#dependencygraphdependency",
      "description": "<p>A dependency manifest entry.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Access to a repository's dependency graph preview",
        "description": "This preview adds support for reading a dependency graph for a repository.",
        "toggled_by": "hawkgirl-preview",
        "toggled_on": [
          "DependencyGraphManifest",
          "Repository.dependencyGraphManifests",
          "DependencyGraphManifestEdge",
          "DependencyGraphManifestConnection",
          "DependencyGraphDependency",
          "DependencyGraphDependencyEdge",
          "DependencyGraphDependencyConnection",
          "DependencyGraphPackageRelease.dependencies"
        ],
        "owning_teams": [
          "@github/dependency-graph"
        ],
        "accept_header": "application/vnd.github.hawkgirl-preview+json",
        "href": "/graphql/overview/schema-previews#access-to-a-repositorys-dependency-graph-preview"
      },
      "fields": [
        {
          "name": "hasDependencies",
          "description": "<p>Does the dependency itself have dependencies?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "packageLabel",
          "description": "<p>The original name of the package, as it appears in the manifest.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": true,
          "deprecationReason": "<p><code>packageLabel</code> will be removed. Use normalized <code>packageName</code> field instead. Removal on 2022-10-01 UTC.</p>"
        },
        {
          "name": "packageManager",
          "description": "<p>The dependency package manager.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "packageName",
          "description": "<p>The name of the package in the canonical form used by the package manager.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repository",
          "description": "<p>The repository containing the package.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "requirements",
          "description": "<p>The dependency version requirements.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "DependencyGraphDependencyConnection",
      "kind": "objects",
      "id": "dependencygraphdependencyconnection",
      "href": "/graphql/reference/objects#dependencygraphdependencyconnection",
      "description": "<p>The connection type for DependencyGraphDependency.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Access to a repository's dependency graph preview",
        "description": "This preview adds support for reading a dependency graph for a repository.",
        "toggled_by": "hawkgirl-preview",
        "toggled_on": [
          "DependencyGraphManifest",
          "Repository.dependencyGraphManifests",
          "DependencyGraphManifestEdge",
          "DependencyGraphManifestConnection",
          "DependencyGraphDependency",
          "DependencyGraphDependencyEdge",
          "DependencyGraphDependencyConnection",
          "DependencyGraphPackageRelease.dependencies"
        ],
        "owning_teams": [
          "@github/dependency-graph"
        ],
        "accept_header": "application/vnd.github.hawkgirl-preview+json",
        "href": "/graphql/overview/schema-previews#access-to-a-repositorys-dependency-graph-preview"
      },
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DependencyGraphDependencyEdge]",
          "id": "dependencygraphdependencyedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependencygraphdependencyedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DependencyGraphDependency]",
          "id": "dependencygraphdependency",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependencygraphdependency"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DependencyGraphDependencyEdge",
      "kind": "objects",
      "id": "dependencygraphdependencyedge",
      "href": "/graphql/reference/objects#dependencygraphdependencyedge",
      "description": "<p>An edge in a connection.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Access to a repository's dependency graph preview",
        "description": "This preview adds support for reading a dependency graph for a repository.",
        "toggled_by": "hawkgirl-preview",
        "toggled_on": [
          "DependencyGraphManifest",
          "Repository.dependencyGraphManifests",
          "DependencyGraphManifestEdge",
          "DependencyGraphManifestConnection",
          "DependencyGraphDependency",
          "DependencyGraphDependencyEdge",
          "DependencyGraphDependencyConnection",
          "DependencyGraphPackageRelease.dependencies"
        ],
        "owning_teams": [
          "@github/dependency-graph"
        ],
        "accept_header": "application/vnd.github.hawkgirl-preview+json",
        "href": "/graphql/overview/schema-previews#access-to-a-repositorys-dependency-graph-preview"
      },
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DependencyGraphDependency",
          "id": "dependencygraphdependency",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependencygraphdependency"
        }
      ]
    },
    {
      "name": "DependencyGraphManifest",
      "kind": "objects",
      "id": "dependencygraphmanifest",
      "href": "/graphql/reference/objects#dependencygraphmanifest",
      "description": "<p>Dependency manifest for a repository.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Access to a repository's dependency graph preview",
        "description": "This preview adds support for reading a dependency graph for a repository.",
        "toggled_by": "hawkgirl-preview",
        "toggled_on": [
          "DependencyGraphManifest",
          "Repository.dependencyGraphManifests",
          "DependencyGraphManifestEdge",
          "DependencyGraphManifestConnection",
          "DependencyGraphDependency",
          "DependencyGraphDependencyEdge",
          "DependencyGraphDependencyConnection",
          "DependencyGraphPackageRelease.dependencies"
        ],
        "owning_teams": [
          "@github/dependency-graph"
        ],
        "accept_header": "application/vnd.github.hawkgirl-preview+json",
        "href": "/graphql/overview/schema-previews#access-to-a-repositorys-dependency-graph-preview"
      },
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "blobPath",
          "description": "<p>Path to view the manifest file blob.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dependencies",
          "description": "<p>A list of manifest dependencies.</p>",
          "type": "DependencyGraphDependencyConnection",
          "id": "dependencygraphdependencyconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependencygraphdependencyconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "dependenciesCount",
          "description": "<p>The number of dependencies listed in the manifest.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "exceedsMaxSize",
          "description": "<p>Is the manifest too big to parse?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "filename",
          "description": "<p>Fully qualified manifest filename.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "parseable",
          "description": "<p>Were we able to parse the manifest?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "repository",
          "description": "<p>The repository containing the manifest.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "DependencyGraphManifestConnection",
      "kind": "objects",
      "id": "dependencygraphmanifestconnection",
      "href": "/graphql/reference/objects#dependencygraphmanifestconnection",
      "description": "<p>The connection type for DependencyGraphManifest.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Access to a repository's dependency graph preview",
        "description": "This preview adds support for reading a dependency graph for a repository.",
        "toggled_by": "hawkgirl-preview",
        "toggled_on": [
          "DependencyGraphManifest",
          "Repository.dependencyGraphManifests",
          "DependencyGraphManifestEdge",
          "DependencyGraphManifestConnection",
          "DependencyGraphDependency",
          "DependencyGraphDependencyEdge",
          "DependencyGraphDependencyConnection",
          "DependencyGraphPackageRelease.dependencies"
        ],
        "owning_teams": [
          "@github/dependency-graph"
        ],
        "accept_header": "application/vnd.github.hawkgirl-preview+json",
        "href": "/graphql/overview/schema-previews#access-to-a-repositorys-dependency-graph-preview"
      },
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DependencyGraphManifestEdge]",
          "id": "dependencygraphmanifestedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependencygraphmanifestedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DependencyGraphManifest]",
          "id": "dependencygraphmanifest",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependencygraphmanifest"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DependencyGraphManifestEdge",
      "kind": "objects",
      "id": "dependencygraphmanifestedge",
      "href": "/graphql/reference/objects#dependencygraphmanifestedge",
      "description": "<p>An edge in a connection.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Access to a repository's dependency graph preview",
        "description": "This preview adds support for reading a dependency graph for a repository.",
        "toggled_by": "hawkgirl-preview",
        "toggled_on": [
          "DependencyGraphManifest",
          "Repository.dependencyGraphManifests",
          "DependencyGraphManifestEdge",
          "DependencyGraphManifestConnection",
          "DependencyGraphDependency",
          "DependencyGraphDependencyEdge",
          "DependencyGraphDependencyConnection",
          "DependencyGraphPackageRelease.dependencies"
        ],
        "owning_teams": [
          "@github/dependency-graph"
        ],
        "accept_header": "application/vnd.github.hawkgirl-preview+json",
        "href": "/graphql/overview/schema-previews#access-to-a-repositorys-dependency-graph-preview"
      },
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DependencyGraphManifest",
          "id": "dependencygraphmanifest",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependencygraphmanifest"
        }
      ]
    },
    {
      "name": "DeployKey",
      "kind": "objects",
      "id": "deploykey",
      "href": "/graphql/reference/objects#deploykey",
      "description": "<p>A repository deploy key.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "key",
          "description": "<p>The deploy key.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "readOnly",
          "description": "<p>Whether or not the deploy key is read only.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "title",
          "description": "<p>The deploy key title.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "verified",
          "description": "<p>Whether or not the deploy key has been verified.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "DeployKeyConnection",
      "kind": "objects",
      "id": "deploykeyconnection",
      "href": "/graphql/reference/objects#deploykeyconnection",
      "description": "<p>The connection type for DeployKey.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeployKeyEdge]",
          "id": "deploykeyedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploykeyedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DeployKey]",
          "id": "deploykey",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploykey"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeployKeyEdge",
      "kind": "objects",
      "id": "deploykeyedge",
      "href": "/graphql/reference/objects#deploykeyedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DeployKey",
          "id": "deploykey",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploykey"
        }
      ]
    },
    {
      "name": "DeployedEvent",
      "kind": "objects",
      "id": "deployedevent",
      "href": "/graphql/reference/objects#deployedevent",
      "description": "<p>Represents a<code>deployed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deployment",
          "description": "<p>The deployment associated with the<code>deployed</code>event.</p>",
          "type": "Deployment!",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "ref",
          "description": "<p>The ref associated with the<code>deployed</code>event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "Deployment",
      "kind": "objects",
      "id": "deployment",
      "href": "/graphql/reference/objects#deployment",
      "description": "<p>Represents triggered deployment instance.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "commit",
          "description": "<p>Identifies the commit sha of the deployment.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "commitOid",
          "description": "<p>Identifies the oid of the deployment commit, even if the commit has been deleted.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>Identifies the actor who triggered the deployment.</p>",
          "type": "Actor!",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>The deployment description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environment",
          "description": "<p>The latest environment to which this deployment was made.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "latestEnvironment",
          "description": "<p>The latest environment to which this deployment was made.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "latestStatus",
          "description": "<p>The latest status of this deployment.</p>",
          "type": "DeploymentStatus",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus"
        },
        {
          "name": "originalEnvironment",
          "description": "<p>The original environment to which this deployment was made.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "payload",
          "description": "<p>Extra information that a deployment system might need.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ref",
          "description": "<p>Identifies the Ref of the deployment, if the deployment was created by ref.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "repository",
          "description": "<p>Identifies the repository associated with the deployment.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "state",
          "description": "<p>The current state of the deployment.</p>",
          "type": "DeploymentState",
          "id": "deploymentstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentstate"
        },
        {
          "name": "statuses",
          "description": "<p>A list of statuses associated with the deployment.</p>",
          "type": "DeploymentStatusConnection",
          "id": "deploymentstatusconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatusconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "task",
          "description": "<p>The deployment task.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "DeploymentConnection",
      "kind": "objects",
      "id": "deploymentconnection",
      "href": "/graphql/reference/objects#deploymentconnection",
      "description": "<p>The connection type for Deployment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeploymentEdge]",
          "id": "deploymentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Deployment]",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeploymentEdge",
      "kind": "objects",
      "id": "deploymentedge",
      "href": "/graphql/reference/objects#deploymentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Deployment",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment"
        }
      ]
    },
    {
      "name": "DeploymentEnvironmentChangedEvent",
      "kind": "objects",
      "id": "deploymentenvironmentchangedevent",
      "href": "/graphql/reference/objects#deploymentenvironmentchangedevent",
      "description": "<p>Represents a<code>deployment_environment_changed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "deploymentStatus",
          "description": "<p>The deployment status that updated the deployment environment.</p>",
          "type": "DeploymentStatus!",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "DeploymentProtectionRule",
      "kind": "objects",
      "id": "deploymentprotectionrule",
      "href": "/graphql/reference/objects#deploymentprotectionrule",
      "description": "<p>A protection rule.</p>",
      "fields": [
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "reviewers",
          "description": "<p>The teams or users that can review the deployment.</p>",
          "type": "DeploymentReviewerConnection!",
          "id": "deploymentreviewerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentreviewerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "timeout",
          "description": "<p>The timeout in minutes for this protection rule.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "type",
          "description": "<p>The type of protection rule.</p>",
          "type": "DeploymentProtectionRuleType!",
          "id": "deploymentprotectionruletype",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentprotectionruletype"
        }
      ]
    },
    {
      "name": "DeploymentProtectionRuleConnection",
      "kind": "objects",
      "id": "deploymentprotectionruleconnection",
      "href": "/graphql/reference/objects#deploymentprotectionruleconnection",
      "description": "<p>The connection type for DeploymentProtectionRule.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeploymentProtectionRuleEdge]",
          "id": "deploymentprotectionruleedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentprotectionruleedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DeploymentProtectionRule]",
          "id": "deploymentprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentprotectionrule"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeploymentProtectionRuleEdge",
      "kind": "objects",
      "id": "deploymentprotectionruleedge",
      "href": "/graphql/reference/objects#deploymentprotectionruleedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DeploymentProtectionRule",
          "id": "deploymentprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentprotectionrule"
        }
      ]
    },
    {
      "name": "DeploymentRequest",
      "kind": "objects",
      "id": "deploymentrequest",
      "href": "/graphql/reference/objects#deploymentrequest",
      "description": "<p>A request to deploy a workflow run to an environment.</p>",
      "fields": [
        {
          "name": "currentUserCanApprove",
          "description": "<p>Whether or not the current user can approve the deployment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "environment",
          "description": "<p>The target environment of the deployment.</p>",
          "type": "Environment!",
          "id": "environment",
          "kind": "objects",
          "href": "/graphql/reference/objects#environment"
        },
        {
          "name": "reviewers",
          "description": "<p>The teams or users that can review the deployment.</p>",
          "type": "DeploymentReviewerConnection!",
          "id": "deploymentreviewerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentreviewerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "waitTimer",
          "description": "<p>The wait timer in minutes configured in the environment.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "waitTimerStartedAt",
          "description": "<p>The wait timer in minutes configured in the environment.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "DeploymentRequestConnection",
      "kind": "objects",
      "id": "deploymentrequestconnection",
      "href": "/graphql/reference/objects#deploymentrequestconnection",
      "description": "<p>The connection type for DeploymentRequest.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeploymentRequestEdge]",
          "id": "deploymentrequestedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentrequestedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DeploymentRequest]",
          "id": "deploymentrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentrequest"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeploymentRequestEdge",
      "kind": "objects",
      "id": "deploymentrequestedge",
      "href": "/graphql/reference/objects#deploymentrequestedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DeploymentRequest",
          "id": "deploymentrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentrequest"
        }
      ]
    },
    {
      "name": "DeploymentReview",
      "kind": "objects",
      "id": "deploymentreview",
      "href": "/graphql/reference/objects#deploymentreview",
      "description": "<p>A deployment review.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "comment",
          "description": "<p>The comment the user left.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "environments",
          "description": "<p>The environments approved or rejected.</p>",
          "type": "EnvironmentConnection!",
          "id": "environmentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#environmentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "state",
          "description": "<p>The decision of the user.</p>",
          "type": "DeploymentReviewState!",
          "id": "deploymentreviewstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentreviewstate"
        },
        {
          "name": "user",
          "description": "<p>The user that reviewed the deployment.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "DeploymentReviewConnection",
      "kind": "objects",
      "id": "deploymentreviewconnection",
      "href": "/graphql/reference/objects#deploymentreviewconnection",
      "description": "<p>The connection type for DeploymentReview.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeploymentReviewEdge]",
          "id": "deploymentreviewedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentreviewedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DeploymentReview]",
          "id": "deploymentreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentreview"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeploymentReviewEdge",
      "kind": "objects",
      "id": "deploymentreviewedge",
      "href": "/graphql/reference/objects#deploymentreviewedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DeploymentReview",
          "id": "deploymentreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentreview"
        }
      ]
    },
    {
      "name": "DeploymentReviewerConnection",
      "kind": "objects",
      "id": "deploymentreviewerconnection",
      "href": "/graphql/reference/objects#deploymentreviewerconnection",
      "description": "<p>The connection type for DeploymentReviewer.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeploymentReviewerEdge]",
          "id": "deploymentrevieweredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentrevieweredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DeploymentReviewer]",
          "id": "deploymentreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#deploymentreviewer"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeploymentReviewerEdge",
      "kind": "objects",
      "id": "deploymentrevieweredge",
      "href": "/graphql/reference/objects#deploymentrevieweredge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DeploymentReviewer",
          "id": "deploymentreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#deploymentreviewer"
        }
      ]
    },
    {
      "name": "DeploymentStatus",
      "kind": "objects",
      "id": "deploymentstatus",
      "href": "/graphql/reference/objects#deploymentstatus",
      "description": "<p>Describes the status of a given deployment attempt.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>Identifies the actor who triggered the deployment.</p>",
          "type": "Actor!",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "deployment",
          "description": "<p>Identifies the deployment associated with status.</p>",
          "type": "Deployment!",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment"
        },
        {
          "name": "description",
          "description": "<p>Identifies the description of the deployment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environment",
          "description": "<p>Identifies the environment of the deployment at the time of this deployment status.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Deployments preview",
            "description": "This preview adds support for deployments mutations and new deployments features.",
            "toggled_by": "flash-preview",
            "toggled_on": [
              "DeploymentStatus.environment",
              "Mutation.createDeploymentStatus",
              "Mutation.createDeployment"
            ],
            "owning_teams": [
              "@github/c2c-actions-service"
            ],
            "accept_header": "application/vnd.github.flash-preview+json",
            "href": "/graphql/overview/schema-previews#deployments-preview"
          }
        },
        {
          "name": "environmentUrl",
          "description": "<p>Identifies the environment URL of the deployment.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "logUrl",
          "description": "<p>Identifies the log URL of the deployment.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Identifies the current state of the deployment.</p>",
          "type": "DeploymentStatusState!",
          "id": "deploymentstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentstatusstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "DeploymentStatusConnection",
      "kind": "objects",
      "id": "deploymentstatusconnection",
      "href": "/graphql/reference/objects#deploymentstatusconnection",
      "description": "<p>The connection type for DeploymentStatus.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeploymentStatusEdge]",
          "id": "deploymentstatusedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatusedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DeploymentStatus]",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeploymentStatusEdge",
      "kind": "objects",
      "id": "deploymentstatusedge",
      "href": "/graphql/reference/objects#deploymentstatusedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DeploymentStatus",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus"
        }
      ]
    },
    {
      "name": "DisconnectedEvent",
      "kind": "objects",
      "id": "disconnectedevent",
      "href": "/graphql/reference/objects#disconnectedevent",
      "description": "<p>Represents a<code>disconnected</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>Reference originated in a different repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "source",
          "description": "<p>Issue or pull request from which the issue was disconnected.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        },
        {
          "name": "subject",
          "description": "<p>Issue or pull request which was disconnected.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        }
      ]
    },
    {
      "name": "Discussion",
      "kind": "objects",
      "id": "discussion",
      "href": "/graphql/reference/objects#discussion",
      "description": "<p>A discussion in a repository.</p>",
      "implements": [
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Labelable",
          "id": "labelable",
          "href": "/graphql/reference/interfaces#labelable"
        },
        {
          "name": "Lockable",
          "id": "lockable",
          "href": "/graphql/reference/interfaces#lockable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "Votable",
          "id": "votable",
          "href": "/graphql/reference/interfaces#votable"
        }
      ],
      "fields": [
        {
          "name": "activeLockReason",
          "description": "<p>Reason that the conversation was locked.</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "answer",
          "description": "<p>The comment chosen as this discussion's answer, if any.</p>",
          "type": "DiscussionComment",
          "id": "discussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncomment"
        },
        {
          "name": "answerChosenAt",
          "description": "<p>The time when a user chose this discussion's answer, if answered.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "answerChosenBy",
          "description": "<p>The user who chose this discussion's answer, if answered.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The main text of the discussion post.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "category",
          "description": "<p>The category for this discussion.</p>",
          "type": "DiscussionCategory!",
          "id": "discussioncategory",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncategory"
        },
        {
          "name": "closed",
          "description": "<p>Indicates if the object is closed (definition of closed may depend on type).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "comments",
          "description": "<p>The replies to the discussion.</p>",
          "type": "DiscussionCommentConnection!",
          "id": "discussioncommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "labels",
          "description": "<p>A list of labels associated with the object.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for labels returned from the connection.</p>",
              "type": {
                "name": "LabelOrder",
                "id": "labelorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#labelorder"
              }
            }
          ]
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "locked",
          "description": "<p><code>true</code> if the object is locked.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "number",
          "description": "<p>The number identifying this discussion within the repository.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "poll",
          "description": "<p>The poll associated with this discussion, if one exists.</p>",
          "type": "DiscussionPoll",
          "id": "discussionpoll",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionpoll"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The path for this discussion.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "stateReason",
          "description": "<p>Identifies the reason for the discussion's state.</p>",
          "type": "DiscussionStateReason",
          "id": "discussionstatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#discussionstatereason"
        },
        {
          "name": "title",
          "description": "<p>The title of this discussion.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "upvoteCount",
          "description": "<p>Number of upvotes that this subject has received.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "url",
          "description": "<p>The URL for this discussion.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanClose",
          "description": "<p>Indicates if the object can be closed by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReopen",
          "description": "<p>Indicates if the object can be reopened by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpvote",
          "description": "<p>Whether or not the current user can add or remove an upvote on this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerHasUpvoted",
          "description": "<p>Whether or not the current user has already upvoted this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "DiscussionCategory",
      "kind": "objects",
      "id": "discussioncategory",
      "href": "/graphql/reference/objects#discussioncategory",
      "description": "<p>A category for discussions in a repository.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "description",
          "description": "<p>A description of this category.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "emoji",
          "description": "<p>An emoji representing this category.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "emojiHTML",
          "description": "<p>This category's emoji rendered as HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isAnswerable",
          "description": "<p>Whether or not discussions in this category support choosing an answer with the markDiscussionCommentAsAnswer mutation.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>The name of this category.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "slug",
          "description": "<p>The slug of this category.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "DiscussionCategoryConnection",
      "kind": "objects",
      "id": "discussioncategoryconnection",
      "href": "/graphql/reference/objects#discussioncategoryconnection",
      "description": "<p>The connection type for DiscussionCategory.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DiscussionCategoryEdge]",
          "id": "discussioncategoryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncategoryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DiscussionCategory]",
          "id": "discussioncategory",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncategory"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DiscussionCategoryEdge",
      "kind": "objects",
      "id": "discussioncategoryedge",
      "href": "/graphql/reference/objects#discussioncategoryedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DiscussionCategory",
          "id": "discussioncategory",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncategory"
        }
      ]
    },
    {
      "name": "DiscussionComment",
      "kind": "objects",
      "id": "discussioncomment",
      "href": "/graphql/reference/objects#discussioncomment",
      "description": "<p>A comment on a discussion.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Minimizable",
          "id": "minimizable",
          "href": "/graphql/reference/interfaces#minimizable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        },
        {
          "name": "Votable",
          "id": "votable",
          "href": "/graphql/reference/interfaces#votable"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deletedAt",
          "description": "<p>The time when this replied-to comment was deleted.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "discussion",
          "description": "<p>The discussion this comment was created in.</p>",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isAnswer",
          "description": "<p>Has this comment been chosen as the answer of its discussion?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized. One of <code>abuse</code>, <code>off-topic</code>,\n<code>outdated</code>, <code>resolved</code>, <code>duplicate</code> and <code>spam</code>. Note that the case and\nformatting of these values differs from the inputs to the <code>MinimizeComment</code> mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "replies",
          "description": "<p>The threaded replies to this comment.</p>",
          "type": "DiscussionCommentConnection!",
          "id": "discussioncommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "replyTo",
          "description": "<p>The discussion comment this comment is a reply to.</p>",
          "type": "DiscussionComment",
          "id": "discussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncomment"
        },
        {
          "name": "resourcePath",
          "description": "<p>The path for this discussion comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "upvoteCount",
          "description": "<p>Number of upvotes that this subject has received.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "url",
          "description": "<p>The URL for this discussion comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMarkAsAnswer",
          "description": "<p>Can the current user mark this comment as an answer?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUnmarkAsAnswer",
          "description": "<p>Can the current user unmark this comment as an answer?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpvote",
          "description": "<p>Whether or not the current user can add or remove an upvote on this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerHasUpvoted",
          "description": "<p>Whether or not the current user has already upvoted this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "DiscussionCommentConnection",
      "kind": "objects",
      "id": "discussioncommentconnection",
      "href": "/graphql/reference/objects#discussioncommentconnection",
      "description": "<p>The connection type for DiscussionComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DiscussionCommentEdge]",
          "id": "discussioncommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DiscussionComment]",
          "id": "discussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DiscussionCommentEdge",
      "kind": "objects",
      "id": "discussioncommentedge",
      "href": "/graphql/reference/objects#discussioncommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DiscussionComment",
          "id": "discussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncomment"
        }
      ]
    },
    {
      "name": "DiscussionConnection",
      "kind": "objects",
      "id": "discussionconnection",
      "href": "/graphql/reference/objects#discussionconnection",
      "description": "<p>The connection type for Discussion.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DiscussionEdge]",
          "id": "discussionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Discussion]",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DiscussionEdge",
      "kind": "objects",
      "id": "discussionedge",
      "href": "/graphql/reference/objects#discussionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion"
        }
      ]
    },
    {
      "name": "DiscussionPoll",
      "kind": "objects",
      "id": "discussionpoll",
      "href": "/graphql/reference/objects#discussionpoll",
      "description": "<p>A poll for a discussion.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "discussion",
          "description": "<p>The discussion that this poll belongs to.</p>",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "options",
          "description": "<p>The options for this poll.</p>",
          "type": "DiscussionPollOptionConnection",
          "id": "discussionpolloptionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionpolloptionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>How to order the options for the discussion poll.</p>",
              "type": {
                "name": "DiscussionPollOptionOrder",
                "id": "discussionpolloptionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#discussionpolloptionorder"
              }
            }
          ]
        },
        {
          "name": "question",
          "description": "<p>The question that is being asked by this poll.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "totalVoteCount",
          "description": "<p>The total number of votes that have been cast for this poll.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "viewerCanVote",
          "description": "<p>Indicates if the viewer has permission to vote in this poll.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerHasVoted",
          "description": "<p>Indicates if the viewer has voted for any option in this poll.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "DiscussionPollOption",
      "kind": "objects",
      "id": "discussionpolloption",
      "href": "/graphql/reference/objects#discussionpolloption",
      "description": "<p>An option for a discussion poll.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "option",
          "description": "<p>The text for this option.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "poll",
          "description": "<p>The discussion poll that this option belongs to.</p>",
          "type": "DiscussionPoll",
          "id": "discussionpoll",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionpoll"
        },
        {
          "name": "totalVoteCount",
          "description": "<p>The total number of votes that have been cast for this option.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "viewerHasVoted",
          "description": "<p>Indicates if the viewer has voted for this option in the poll.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "DiscussionPollOptionConnection",
      "kind": "objects",
      "id": "discussionpolloptionconnection",
      "href": "/graphql/reference/objects#discussionpolloptionconnection",
      "description": "<p>The connection type for DiscussionPollOption.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DiscussionPollOptionEdge]",
          "id": "discussionpolloptionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionpolloptionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DiscussionPollOption]",
          "id": "discussionpolloption",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionpolloption"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DiscussionPollOptionEdge",
      "kind": "objects",
      "id": "discussionpolloptionedge",
      "href": "/graphql/reference/objects#discussionpolloptionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DiscussionPollOption",
          "id": "discussionpolloption",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionpolloption"
        }
      ]
    },
    {
      "name": "DraftIssue",
      "kind": "objects",
      "id": "draftissue",
      "href": "/graphql/reference/objects#draftissue",
      "description": "<p>A draft issue within a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "assignees",
          "description": "<p>A list of users to assigned to this draft issue.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "body",
          "description": "<p>The body of the draft issue.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body of the draft issue rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body of the draft issue rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created this draft issue.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "projectV2Items",
          "description": "<p>List of items linked with the draft issue (currently draft issue can be linked to only one item).</p>",
          "type": "ProjectV2ItemConnection!",
          "id": "projectv2itemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2itemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projectsV2",
          "description": "<p>Projects that link to this draft issue (currently draft issue can be linked to only one project).</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "title",
          "description": "<p>The title of the draft issue.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "Enterprise",
      "kind": "objects",
      "id": "enterprise",
      "href": "/graphql/reference/objects#enterprise",
      "description": "<p>An account to manage multiple organizations with consolidated policy and billing.</p>",
      "implements": [
        {
          "name": "AnnouncementBanner",
          "id": "announcementbanner",
          "href": "/graphql/reference/interfaces#announcementbanner"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "announcement",
          "description": "<p>The text of the announcement.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "announcementExpiresAt",
          "description": "<p>The expiration date of the announcement, if any.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "announcementUserDismissible",
          "description": "<p>Whether the announcement can be dismissed by the user.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the enterprise's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "billingInfo",
          "description": "<p>Enterprise billing information visible to enterprise billing managers.</p>",
          "type": "EnterpriseBillingInfo",
          "id": "enterprisebillinginfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprisebillinginfo"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>The description of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "descriptionHTML",
          "description": "<p>The description of the enterprise as HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "location",
          "description": "<p>The location of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "members",
          "description": "<p>A list of users who are members of this enterprise.</p>",
          "type": "EnterpriseMemberConnection!",
          "id": "enterprisememberconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprisememberconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "deployment",
              "description": "<p>Only return members within the selected GitHub Enterprise deployment.</p>",
              "type": {
                "name": "EnterpriseUserDeployment",
                "id": "enterpriseuserdeployment",
                "kind": "enums",
                "href": "/graphql/reference/enums#enterpriseuserdeployment"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "hasTwoFactorEnabled",
              "description": "<p>Only return members with this two-factor authentication status. Does not\ninclude members who only have an account on a GitHub Enterprise Server instance.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for members returned from the connection.</p>",
              "type": {
                "name": "EnterpriseMemberOrder",
                "id": "enterprisememberorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#enterprisememberorder"
              }
            },
            {
              "name": "organizationLogins",
              "description": "<p>Only return members within the organizations with these logins.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "role",
              "description": "<p>The role of the user in the enterprise organization or server.</p>",
              "type": {
                "name": "EnterpriseUserAccountMembershipRole",
                "id": "enterpriseuseraccountmembershiprole",
                "kind": "enums",
                "href": "/graphql/reference/enums#enterpriseuseraccountmembershiprole"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>The name of the enterprise.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizations",
          "description": "<p>A list of organizations that belong to this enterprise.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations returned from the connection.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "viewerOrganizationRole",
              "description": "<p>The viewer's role in an organization.</p>",
              "type": {
                "name": "RoleInOrganization",
                "id": "roleinorganization",
                "kind": "enums",
                "href": "/graphql/reference/enums#roleinorganization"
              }
            }
          ]
        },
        {
          "name": "ownerInfo",
          "description": "<p>Enterprise information visible to enterprise owners or enterprise owners'\npersonal access tokens (classic) with read:enterprise or admin:enterprise scope.</p>",
          "type": "EnterpriseOwnerInfo",
          "id": "enterpriseownerinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseownerinfo"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "slug",
          "description": "<p>The URL-friendly identifier for the enterprise.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerIsAdmin",
          "description": "<p>Is the current viewer an admin of this enterprise?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "websiteUrl",
          "description": "<p>The URL of the enterprise website.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "EnterpriseAdministratorConnection",
      "kind": "objects",
      "id": "enterpriseadministratorconnection",
      "href": "/graphql/reference/objects#enterpriseadministratorconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseAdministratorEdge]",
          "id": "enterpriseadministratoredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseadministratoredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseAdministratorEdge",
      "kind": "objects",
      "id": "enterpriseadministratoredge",
      "href": "/graphql/reference/objects#enterpriseadministratoredge",
      "description": "<p>A User who is an administrator of an enterprise.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "role",
          "description": "<p>The role of the administrator.</p>",
          "type": "EnterpriseAdministratorRole!",
          "id": "enterpriseadministratorrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseadministratorrole"
        }
      ]
    },
    {
      "name": "EnterpriseAdministratorInvitation",
      "kind": "objects",
      "id": "enterpriseadministratorinvitation",
      "href": "/graphql/reference/objects#enterpriseadministratorinvitation",
      "description": "<p>An invitation for a user to become an owner or billing manager of an enterprise.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "email",
          "description": "<p>The email of the person who was invited to the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterprise",
          "description": "<p>The enterprise the invitation is for.</p>",
          "type": "Enterprise!",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "invitee",
          "description": "<p>The user who was invited to the enterprise.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "inviter",
          "description": "<p>The user who created the invitation.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "role",
          "description": "<p>The invitee's pending role in the enterprise (owner or billing_manager).</p>",
          "type": "EnterpriseAdministratorRole!",
          "id": "enterpriseadministratorrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseadministratorrole"
        }
      ]
    },
    {
      "name": "EnterpriseAdministratorInvitationConnection",
      "kind": "objects",
      "id": "enterpriseadministratorinvitationconnection",
      "href": "/graphql/reference/objects#enterpriseadministratorinvitationconnection",
      "description": "<p>The connection type for EnterpriseAdministratorInvitation.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseAdministratorInvitationEdge]",
          "id": "enterpriseadministratorinvitationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseadministratorinvitationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[EnterpriseAdministratorInvitation]",
          "id": "enterpriseadministratorinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseadministratorinvitation"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseAdministratorInvitationEdge",
      "kind": "objects",
      "id": "enterpriseadministratorinvitationedge",
      "href": "/graphql/reference/objects#enterpriseadministratorinvitationedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "EnterpriseAdministratorInvitation",
          "id": "enterpriseadministratorinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseadministratorinvitation"
        }
      ]
    },
    {
      "name": "EnterpriseBillingInfo",
      "kind": "objects",
      "id": "enterprisebillinginfo",
      "href": "/graphql/reference/objects#enterprisebillinginfo",
      "description": "<p>Enterprise billing information visible to enterprise billing managers and owners.</p>",
      "fields": [
        {
          "name": "allLicensableUsersCount",
          "description": "<p>The number of licenseable users/emails across the enterprise.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "assetPacks",
          "description": "<p>The number of data packs used by all organizations owned by the enterprise.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "bandwidthQuota",
          "description": "<p>The bandwidth quota in GB for all organizations owned by the enterprise.</p>",
          "type": "Float!",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "bandwidthUsage",
          "description": "<p>The bandwidth usage in GB for all organizations owned by the enterprise.</p>",
          "type": "Float!",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "bandwidthUsagePercentage",
          "description": "<p>The bandwidth usage as a percentage of the bandwidth quota.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "storageQuota",
          "description": "<p>The storage quota in GB for all organizations owned by the enterprise.</p>",
          "type": "Float!",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "storageUsage",
          "description": "<p>The storage usage in GB for all organizations owned by the enterprise.</p>",
          "type": "Float!",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "storageUsagePercentage",
          "description": "<p>The storage usage as a percentage of the storage quota.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalAvailableLicenses",
          "description": "<p>The number of available licenses across all owned organizations based on the unique number of billable users.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalLicenses",
          "description": "<p>The total number of licenses allocated.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseFailedInvitationConnection",
      "kind": "objects",
      "id": "enterprisefailedinvitationconnection",
      "href": "/graphql/reference/objects#enterprisefailedinvitationconnection",
      "description": "<p>The connection type for OrganizationInvitation.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseFailedInvitationEdge]",
          "id": "enterprisefailedinvitationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprisefailedinvitationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[OrganizationInvitation]",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalUniqueUserCount",
          "description": "<p>Identifies the total count of unique users in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseFailedInvitationEdge",
      "kind": "objects",
      "id": "enterprisefailedinvitationedge",
      "href": "/graphql/reference/objects#enterprisefailedinvitationedge",
      "description": "<p>A failed invitation to be a member in an enterprise organization.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "OrganizationInvitation",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        }
      ]
    },
    {
      "name": "EnterpriseIdentityProvider",
      "kind": "objects",
      "id": "enterpriseidentityprovider",
      "href": "/graphql/reference/objects#enterpriseidentityprovider",
      "description": "<p>An identity provider configured to provision identities for an enterprise.\nVisible to enterprise owners or enterprise owners' personal access tokens\n(classic) with read:enterprise or admin:enterprise scope.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "digestMethod",
          "description": "<p>The digest algorithm used to sign SAML requests for the identity provider.</p>",
          "type": "SamlDigestAlgorithm",
          "id": "samldigestalgorithm",
          "kind": "enums",
          "href": "/graphql/reference/enums#samldigestalgorithm"
        },
        {
          "name": "enterprise",
          "description": "<p>The enterprise this identity provider belongs to.</p>",
          "type": "Enterprise",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise"
        },
        {
          "name": "externalIdentities",
          "description": "<p>ExternalIdentities provisioned by this identity provider.</p>",
          "type": "ExternalIdentityConnection!",
          "id": "externalidentityconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentityconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "login",
              "description": "<p>Filter to external identities with the users login.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "membersOnly",
              "description": "<p>Filter to external identities with valid org membership only.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "userName",
              "description": "<p>Filter to external identities with the users userName/NameID attribute.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "idpCertificate",
          "description": "<p>The x509 certificate used by the identity provider to sign assertions and responses.</p>",
          "type": "X509Certificate",
          "id": "x509certificate",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#x509certificate"
        },
        {
          "name": "issuer",
          "description": "<p>The Issuer Entity ID for the SAML identity provider.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "recoveryCodes",
          "description": "<p>Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signatureMethod",
          "description": "<p>The signature algorithm used to sign SAML requests for the identity provider.</p>",
          "type": "SamlSignatureAlgorithm",
          "id": "samlsignaturealgorithm",
          "kind": "enums",
          "href": "/graphql/reference/enums#samlsignaturealgorithm"
        },
        {
          "name": "ssoUrl",
          "description": "<p>The URL endpoint for the identity provider's SAML SSO.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "EnterpriseMemberConnection",
      "kind": "objects",
      "id": "enterprisememberconnection",
      "href": "/graphql/reference/objects#enterprisememberconnection",
      "description": "<p>The connection type for EnterpriseMember.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseMemberEdge]",
          "id": "enterprisememberedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprisememberedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[EnterpriseMember]",
          "id": "enterprisemember",
          "kind": "unions",
          "href": "/graphql/reference/unions#enterprisemember"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseMemberEdge",
      "kind": "objects",
      "id": "enterprisememberedge",
      "href": "/graphql/reference/objects#enterprisememberedge",
      "description": "<p>A User who is a member of an enterprise through one or more organizations.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "EnterpriseMember",
          "id": "enterprisemember",
          "kind": "unions",
          "href": "/graphql/reference/unions#enterprisemember"
        }
      ]
    },
    {
      "name": "EnterpriseOrganizationMembershipConnection",
      "kind": "objects",
      "id": "enterpriseorganizationmembershipconnection",
      "href": "/graphql/reference/objects#enterpriseorganizationmembershipconnection",
      "description": "<p>The connection type for Organization.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseOrganizationMembershipEdge]",
          "id": "enterpriseorganizationmembershipedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseorganizationmembershipedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Organization]",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseOrganizationMembershipEdge",
      "kind": "objects",
      "id": "enterpriseorganizationmembershipedge",
      "href": "/graphql/reference/objects#enterpriseorganizationmembershipedge",
      "description": "<p>An enterprise organization that a user is a member of.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "role",
          "description": "<p>The role of the user in the enterprise membership.</p>",
          "type": "EnterpriseUserAccountMembershipRole!",
          "id": "enterpriseuseraccountmembershiprole",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseuseraccountmembershiprole"
        }
      ]
    },
    {
      "name": "EnterpriseOutsideCollaboratorConnection",
      "kind": "objects",
      "id": "enterpriseoutsidecollaboratorconnection",
      "href": "/graphql/reference/objects#enterpriseoutsidecollaboratorconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseOutsideCollaboratorEdge]",
          "id": "enterpriseoutsidecollaboratoredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseoutsidecollaboratoredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseOutsideCollaboratorEdge",
      "kind": "objects",
      "id": "enterpriseoutsidecollaboratoredge",
      "href": "/graphql/reference/objects#enterpriseoutsidecollaboratoredge",
      "description": "<p>A User who is an outside collaborator of an enterprise through one or more organizations.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "repositories",
          "description": "<p>The enterprise organization repositories this user is a member of.</p>",
          "type": "EnterpriseRepositoryInfoConnection!",
          "id": "enterpriserepositoryinfoconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriserepositoryinfoconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "EnterpriseOwnerInfo",
      "kind": "objects",
      "id": "enterpriseownerinfo",
      "href": "/graphql/reference/objects#enterpriseownerinfo",
      "description": "<p>Enterprise information visible to enterprise owners or enterprise owners'\npersonal access tokens (classic) with read:enterprise or admin:enterprise scope.</p>",
      "fields": [
        {
          "name": "admins",
          "description": "<p>A list of all of the administrators for this enterprise.</p>",
          "type": "EnterpriseAdministratorConnection!",
          "id": "enterpriseadministratorconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseadministratorconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "hasTwoFactorEnabled",
              "description": "<p>Only return administrators with this two-factor authentication status.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for administrators returned from the connection.</p>",
              "type": {
                "name": "EnterpriseMemberOrder",
                "id": "enterprisememberorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#enterprisememberorder"
              }
            },
            {
              "name": "organizationLogins",
              "description": "<p>Only return members within the organizations with these logins.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "role",
              "description": "<p>The role to filter by.</p>",
              "type": {
                "name": "EnterpriseAdministratorRole",
                "id": "enterpriseadministratorrole",
                "kind": "enums",
                "href": "/graphql/reference/enums#enterpriseadministratorrole"
              }
            }
          ]
        },
        {
          "name": "affiliatedUsersWithTwoFactorDisabled",
          "description": "<p>A list of users in the enterprise who currently have two-factor authentication disabled.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "affiliatedUsersWithTwoFactorDisabledExist",
          "description": "<p>Whether or not affiliated users with two-factor authentication disabled exist in the enterprise.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "allowPrivateRepositoryForkingSetting",
          "description": "<p>The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "allowPrivateRepositoryForkingSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided private repository forking setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "allowPrivateRepositoryForkingSettingPolicyValue",
          "description": "<p>The value for the allow private repository forking policy on the enterprise.</p>",
          "type": "EnterpriseAllowPrivateRepositoryForkingPolicyValue",
          "id": "enterpriseallowprivaterepositoryforkingpolicyvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseallowprivaterepositoryforkingpolicyvalue"
        },
        {
          "name": "defaultRepositoryPermissionSetting",
          "description": "<p>The setting value for base repository permissions for organizations in this enterprise.</p>",
          "type": "EnterpriseDefaultRepositoryPermissionSettingValue!",
          "id": "enterprisedefaultrepositorypermissionsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterprisedefaultrepositorypermissionsettingvalue"
        },
        {
          "name": "defaultRepositoryPermissionSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided base repository permission.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The permission to find organizations for.</p>",
              "type": {
                "name": "DefaultRepositoryPermissionField!",
                "id": "defaultrepositorypermissionfield",
                "kind": "enums",
                "href": "/graphql/reference/enums#defaultrepositorypermissionfield"
              }
            }
          ]
        },
        {
          "name": "domains",
          "description": "<p>A list of domains owned by the enterprise. Visible to enterprise owners or\nenterprise owners' personal access tokens (classic) with admin:enterprise scope.</p>",
          "type": "VerifiableDomainConnection!",
          "id": "verifiabledomainconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#verifiabledomainconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "isApproved",
              "description": "<p>Filter whether or not the domain is approved.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "isVerified",
              "description": "<p>Filter whether or not the domain is verified.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for verifiable domains returned.</p>",
              "type": {
                "name": "VerifiableDomainOrder",
                "id": "verifiabledomainorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#verifiabledomainorder"
              }
            }
          ]
        },
        {
          "name": "failedInvitations",
          "description": "<p>A list of failed invitations in the enterprise.</p>",
          "type": "EnterpriseFailedInvitationConnection!",
          "id": "enterprisefailedinvitationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprisefailedinvitationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "ipAllowListEnabledSetting",
          "description": "<p>The setting value for whether the enterprise has an IP allow list enabled.</p>",
          "type": "IpAllowListEnabledSettingValue!",
          "id": "ipallowlistenabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#ipallowlistenabledsettingvalue"
        },
        {
          "name": "ipAllowListEntries",
          "description": "<p>The IP addresses that are allowed to access resources owned by the enterprise.\nVisible to enterprise owners or enterprise owners' personal access tokens\n(classic) with admin:enterprise scope.</p>",
          "type": "IpAllowListEntryConnection!",
          "id": "ipallowlistentryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#ipallowlistentryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for IP allow list entries returned.</p>",
              "type": {
                "name": "IpAllowListEntryOrder",
                "id": "ipallowlistentryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#ipallowlistentryorder"
              }
            }
          ]
        },
        {
          "name": "ipAllowListForInstalledAppsEnabledSetting",
          "description": "<p>The setting value for whether the enterprise has IP allow list configuration for installed GitHub Apps enabled.</p>",
          "type": "IpAllowListForInstalledAppsEnabledSettingValue!",
          "id": "ipallowlistforinstalledappsenabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#ipallowlistforinstalledappsenabledsettingvalue"
        },
        {
          "name": "isUpdatingDefaultRepositoryPermission",
          "description": "<p>Whether or not the base repository permission is currently being updated.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isUpdatingTwoFactorRequirement",
          "description": "<p>Whether the two-factor authentication requirement is currently being enforced.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "membersCanChangeRepositoryVisibilitySetting",
          "description": "<p>The setting value for whether organization members with admin permissions on a\nrepository can change repository visibility.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "membersCanChangeRepositoryVisibilitySettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided can change repository visibility setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "membersCanCreateInternalRepositoriesSetting",
          "description": "<p>The setting value for whether members of organizations in the enterprise can create internal repositories.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "membersCanCreatePrivateRepositoriesSetting",
          "description": "<p>The setting value for whether members of organizations in the enterprise can create private repositories.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "membersCanCreatePublicRepositoriesSetting",
          "description": "<p>The setting value for whether members of organizations in the enterprise can create public repositories.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "membersCanCreateRepositoriesSetting",
          "description": "<p>The setting value for whether members of organizations in the enterprise can create repositories.</p>",
          "type": "EnterpriseMembersCanCreateRepositoriesSettingValue",
          "id": "enterprisememberscancreaterepositoriessettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterprisememberscancreaterepositoriessettingvalue"
        },
        {
          "name": "membersCanCreateRepositoriesSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided repository creation setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting to find organizations for.</p>",
              "type": {
                "name": "OrganizationMembersCanCreateRepositoriesSettingValue!",
                "id": "organizationmemberscancreaterepositoriessettingvalue",
                "kind": "enums",
                "href": "/graphql/reference/enums#organizationmemberscancreaterepositoriessettingvalue"
              }
            }
          ]
        },
        {
          "name": "membersCanDeleteIssuesSetting",
          "description": "<p>The setting value for whether members with admin permissions for repositories can delete issues.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "membersCanDeleteIssuesSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided members can delete issues setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "membersCanDeleteRepositoriesSetting",
          "description": "<p>The setting value for whether members with admin permissions for repositories can delete or transfer repositories.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "membersCanDeleteRepositoriesSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided members can delete repositories setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "membersCanInviteCollaboratorsSetting",
          "description": "<p>The setting value for whether members of organizations in the enterprise can invite outside collaborators.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "membersCanInviteCollaboratorsSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided members can invite collaborators setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "membersCanMakePurchasesSetting",
          "description": "<p>Indicates whether members of this enterprise's organizations can purchase additional services for those organizations.</p>",
          "type": "EnterpriseMembersCanMakePurchasesSettingValue!",
          "id": "enterprisememberscanmakepurchasessettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterprisememberscanmakepurchasessettingvalue"
        },
        {
          "name": "membersCanUpdateProtectedBranchesSetting",
          "description": "<p>The setting value for whether members with admin permissions for repositories can update protected branches.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "membersCanUpdateProtectedBranchesSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided members can update protected branches setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "membersCanViewDependencyInsightsSetting",
          "description": "<p>The setting value for whether members can view dependency insights.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "membersCanViewDependencyInsightsSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided members can view dependency insights setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "notificationDeliveryRestrictionEnabledSetting",
          "description": "<p>Indicates if email notification delivery for this enterprise is restricted to verified or approved domains.</p>",
          "type": "NotificationRestrictionSettingValue!",
          "id": "notificationrestrictionsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#notificationrestrictionsettingvalue"
        },
        {
          "name": "organizationProjectsSetting",
          "description": "<p>The setting value for whether organization projects are enabled for organizations in this enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "organizationProjectsSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided organization projects setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "outsideCollaborators",
          "description": "<p>A list of outside collaborators across the repositories in the enterprise.</p>",
          "type": "EnterpriseOutsideCollaboratorConnection!",
          "id": "enterpriseoutsidecollaboratorconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseoutsidecollaboratorconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "hasTwoFactorEnabled",
              "description": "<p>Only return outside collaborators with this two-factor authentication status.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "login",
              "description": "<p>The login of one specific outside collaborator.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for outside collaborators returned from the connection.</p>",
              "type": {
                "name": "EnterpriseMemberOrder",
                "id": "enterprisememberorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#enterprisememberorder"
              }
            },
            {
              "name": "organizationLogins",
              "description": "<p>Only return outside collaborators within the organizations with these logins.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "visibility",
              "description": "<p>Only return outside collaborators on repositories with this visibility.</p>",
              "type": {
                "name": "RepositoryVisibility",
                "id": "repositoryvisibility",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryvisibility"
              }
            }
          ]
        },
        {
          "name": "pendingAdminInvitations",
          "description": "<p>A list of pending administrator invitations for the enterprise.</p>",
          "type": "EnterpriseAdministratorInvitationConnection!",
          "id": "enterpriseadministratorinvitationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseadministratorinvitationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pending enterprise administrator invitations returned from the connection.</p>",
              "type": {
                "name": "EnterpriseAdministratorInvitationOrder",
                "id": "enterpriseadministratorinvitationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#enterpriseadministratorinvitationorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "role",
              "description": "<p>The role to filter by.</p>",
              "type": {
                "name": "EnterpriseAdministratorRole",
                "id": "enterpriseadministratorrole",
                "kind": "enums",
                "href": "/graphql/reference/enums#enterpriseadministratorrole"
              }
            }
          ]
        },
        {
          "name": "pendingCollaboratorInvitations",
          "description": "<p>A list of pending collaborator invitations across the repositories in the enterprise.</p>",
          "type": "RepositoryInvitationConnection!",
          "id": "repositoryinvitationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryinvitationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pending repository collaborator invitations returned from the connection.</p>",
              "type": {
                "name": "RepositoryInvitationOrder",
                "id": "repositoryinvitationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryinvitationorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "pendingMemberInvitations",
          "description": "<p>A list of pending member invitations for organizations in the enterprise.</p>",
          "type": "EnterprisePendingMemberInvitationConnection!",
          "id": "enterprisependingmemberinvitationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprisependingmemberinvitationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "invitationSource",
              "description": "<p>Only return invitations matching this invitation source.</p>",
              "type": {
                "name": "OrganizationInvitationSource",
                "id": "organizationinvitationsource",
                "kind": "enums",
                "href": "/graphql/reference/enums#organizationinvitationsource"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "organizationLogins",
              "description": "<p>Only return invitations within the organizations with these logins.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "repositoryProjectsSetting",
          "description": "<p>The setting value for whether repository projects are enabled in this enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "repositoryProjectsSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided repository projects setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "samlIdentityProvider",
          "description": "<p>The SAML Identity Provider for the enterprise.</p>",
          "type": "EnterpriseIdentityProvider",
          "id": "enterpriseidentityprovider",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseidentityprovider"
        },
        {
          "name": "samlIdentityProviderSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the SAML single sign-on setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "IdentityProviderConfigurationState!",
                "id": "identityproviderconfigurationstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#identityproviderconfigurationstate"
              }
            }
          ]
        },
        {
          "name": "teamDiscussionsSetting",
          "description": "<p>The setting value for whether team discussions are enabled for organizations in this enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        },
        {
          "name": "teamDiscussionsSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the provided team discussions setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "twoFactorRequiredSetting",
          "description": "<p>The setting value for whether the enterprise requires two-factor authentication for its organizations and users.</p>",
          "type": "EnterpriseEnabledSettingValue!",
          "id": "enterpriseenabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenabledsettingvalue"
        },
        {
          "name": "twoFactorRequiredSettingOrganizations",
          "description": "<p>A list of enterprise organizations configured with the two-factor authentication setting value.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations with this setting.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "value",
              "description": "<p>The setting value to find organizations for.</p>",
              "type": {
                "name": "Boolean!",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "EnterprisePendingMemberInvitationConnection",
      "kind": "objects",
      "id": "enterprisependingmemberinvitationconnection",
      "href": "/graphql/reference/objects#enterprisependingmemberinvitationconnection",
      "description": "<p>The connection type for OrganizationInvitation.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterprisePendingMemberInvitationEdge]",
          "id": "enterprisependingmemberinvitationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprisependingmemberinvitationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[OrganizationInvitation]",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalUniqueUserCount",
          "description": "<p>Identifies the total count of unique users in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterprisePendingMemberInvitationEdge",
      "kind": "objects",
      "id": "enterprisependingmemberinvitationedge",
      "href": "/graphql/reference/objects#enterprisependingmemberinvitationedge",
      "description": "<p>An invitation to be a member in an enterprise organization.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "OrganizationInvitation",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        }
      ]
    },
    {
      "name": "EnterpriseRepositoryInfo",
      "kind": "objects",
      "id": "enterpriserepositoryinfo",
      "href": "/graphql/reference/objects#enterpriserepositoryinfo",
      "description": "<p>A subset of repository information queryable from an enterprise.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isPrivate",
          "description": "<p>Identifies if the repository is private or internal.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>The repository's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameWithOwner",
          "description": "<p>The repository's name with owner.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "EnterpriseRepositoryInfoConnection",
      "kind": "objects",
      "id": "enterpriserepositoryinfoconnection",
      "href": "/graphql/reference/objects#enterpriserepositoryinfoconnection",
      "description": "<p>The connection type for EnterpriseRepositoryInfo.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseRepositoryInfoEdge]",
          "id": "enterpriserepositoryinfoedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriserepositoryinfoedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[EnterpriseRepositoryInfo]",
          "id": "enterpriserepositoryinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriserepositoryinfo"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseRepositoryInfoEdge",
      "kind": "objects",
      "id": "enterpriserepositoryinfoedge",
      "href": "/graphql/reference/objects#enterpriserepositoryinfoedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "EnterpriseRepositoryInfo",
          "id": "enterpriserepositoryinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriserepositoryinfo"
        }
      ]
    },
    {
      "name": "EnterpriseServerInstallation",
      "kind": "objects",
      "id": "enterpriseserverinstallation",
      "href": "/graphql/reference/objects#enterpriseserverinstallation",
      "description": "<p>An Enterprise Server installation.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "customerName",
          "description": "<p>The customer name to which the Enterprise Server installation belongs.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "hostName",
          "description": "<p>The host name of the Enterprise Server installation.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isConnected",
          "description": "<p>Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "userAccounts",
          "description": "<p>User accounts on this Enterprise Server installation.</p>",
          "type": "EnterpriseServerUserAccountConnection!",
          "id": "enterpriseserveruseraccountconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for Enterprise Server user accounts returned from the connection.</p>",
              "type": {
                "name": "EnterpriseServerUserAccountOrder",
                "id": "enterpriseserveruseraccountorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#enterpriseserveruseraccountorder"
              }
            }
          ]
        },
        {
          "name": "userAccountsUploads",
          "description": "<p>User accounts uploads for the Enterprise Server installation.</p>",
          "type": "EnterpriseServerUserAccountsUploadConnection!",
          "id": "enterpriseserveruseraccountsuploadconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountsuploadconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for Enterprise Server user accounts uploads returned from the connection.</p>",
              "type": {
                "name": "EnterpriseServerUserAccountsUploadOrder",
                "id": "enterpriseserveruseraccountsuploadorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#enterpriseserveruseraccountsuploadorder"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "EnterpriseServerInstallationMembershipConnection",
      "kind": "objects",
      "id": "enterpriseserverinstallationmembershipconnection",
      "href": "/graphql/reference/objects#enterpriseserverinstallationmembershipconnection",
      "description": "<p>The connection type for EnterpriseServerInstallation.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseServerInstallationMembershipEdge]",
          "id": "enterpriseserverinstallationmembershipedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserverinstallationmembershipedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[EnterpriseServerInstallation]",
          "id": "enterpriseserverinstallation",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserverinstallation"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseServerInstallationMembershipEdge",
      "kind": "objects",
      "id": "enterpriseserverinstallationmembershipedge",
      "href": "/graphql/reference/objects#enterpriseserverinstallationmembershipedge",
      "description": "<p>An Enterprise Server installation that a user is a member of.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "EnterpriseServerInstallation",
          "id": "enterpriseserverinstallation",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserverinstallation"
        },
        {
          "name": "role",
          "description": "<p>The role of the user in the enterprise membership.</p>",
          "type": "EnterpriseUserAccountMembershipRole!",
          "id": "enterpriseuseraccountmembershiprole",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseuseraccountmembershiprole"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccount",
      "kind": "objects",
      "id": "enterpriseserveruseraccount",
      "href": "/graphql/reference/objects#enterpriseserveruseraccount",
      "description": "<p>A user account on an Enterprise Server installation.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "emails",
          "description": "<p>User emails belonging to this user account.</p>",
          "type": "EnterpriseServerUserAccountEmailConnection!",
          "id": "enterpriseserveruseraccountemailconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountemailconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for Enterprise Server user account emails returned from the connection.</p>",
              "type": {
                "name": "EnterpriseServerUserAccountEmailOrder",
                "id": "enterpriseserveruseraccountemailorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#enterpriseserveruseraccountemailorder"
              }
            }
          ]
        },
        {
          "name": "enterpriseServerInstallation",
          "description": "<p>The Enterprise Server installation on which this user account exists.</p>",
          "type": "EnterpriseServerInstallation!",
          "id": "enterpriseserverinstallation",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserverinstallation"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isSiteAdmin",
          "description": "<p>Whether the user account is a site administrator on the Enterprise Server installation.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "login",
          "description": "<p>The login of the user account on the Enterprise Server installation.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "profileName",
          "description": "<p>The profile name of the user account on the Enterprise Server installation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "remoteCreatedAt",
          "description": "<p>The date and time when the user account was created on the Enterprise Server installation.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "remoteUserId",
          "description": "<p>The ID of the user account on the Enterprise Server installation.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountConnection",
      "kind": "objects",
      "id": "enterpriseserveruseraccountconnection",
      "href": "/graphql/reference/objects#enterpriseserveruseraccountconnection",
      "description": "<p>The connection type for EnterpriseServerUserAccount.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseServerUserAccountEdge]",
          "id": "enterpriseserveruseraccountedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[EnterpriseServerUserAccount]",
          "id": "enterpriseserveruseraccount",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccount"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountEdge",
      "kind": "objects",
      "id": "enterpriseserveruseraccountedge",
      "href": "/graphql/reference/objects#enterpriseserveruseraccountedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "EnterpriseServerUserAccount",
          "id": "enterpriseserveruseraccount",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccount"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountEmail",
      "kind": "objects",
      "id": "enterpriseserveruseraccountemail",
      "href": "/graphql/reference/objects#enterpriseserveruseraccountemail",
      "description": "<p>An email belonging to a user account on an Enterprise Server installation.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "email",
          "description": "<p>The email address.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isPrimary",
          "description": "<p>Indicates whether this is the primary email of the associated user account.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "userAccount",
          "description": "<p>The user account to which the email belongs.</p>",
          "type": "EnterpriseServerUserAccount!",
          "id": "enterpriseserveruseraccount",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccount"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountEmailConnection",
      "kind": "objects",
      "id": "enterpriseserveruseraccountemailconnection",
      "href": "/graphql/reference/objects#enterpriseserveruseraccountemailconnection",
      "description": "<p>The connection type for EnterpriseServerUserAccountEmail.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseServerUserAccountEmailEdge]",
          "id": "enterpriseserveruseraccountemailedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountemailedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[EnterpriseServerUserAccountEmail]",
          "id": "enterpriseserveruseraccountemail",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountemail"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountEmailEdge",
      "kind": "objects",
      "id": "enterpriseserveruseraccountemailedge",
      "href": "/graphql/reference/objects#enterpriseserveruseraccountemailedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "EnterpriseServerUserAccountEmail",
          "id": "enterpriseserveruseraccountemail",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountemail"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountsUpload",
      "kind": "objects",
      "id": "enterpriseserveruseraccountsupload",
      "href": "/graphql/reference/objects#enterpriseserveruseraccountsupload",
      "description": "<p>A user accounts upload from an Enterprise Server installation.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "enterprise",
          "description": "<p>The enterprise to which this upload belongs.</p>",
          "type": "Enterprise!",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise"
        },
        {
          "name": "enterpriseServerInstallation",
          "description": "<p>The Enterprise Server installation for which this upload was generated.</p>",
          "type": "EnterpriseServerInstallation!",
          "id": "enterpriseserverinstallation",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserverinstallation"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The name of the file uploaded.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "syncState",
          "description": "<p>The synchronization state of the upload.</p>",
          "type": "EnterpriseServerUserAccountsUploadSyncState!",
          "id": "enterpriseserveruseraccountsuploadsyncstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseserveruseraccountsuploadsyncstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountsUploadConnection",
      "kind": "objects",
      "id": "enterpriseserveruseraccountsuploadconnection",
      "href": "/graphql/reference/objects#enterpriseserveruseraccountsuploadconnection",
      "description": "<p>The connection type for EnterpriseServerUserAccountsUpload.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnterpriseServerUserAccountsUploadEdge]",
          "id": "enterpriseserveruseraccountsuploadedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountsuploadedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[EnterpriseServerUserAccountsUpload]",
          "id": "enterpriseserveruseraccountsupload",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountsupload"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountsUploadEdge",
      "kind": "objects",
      "id": "enterpriseserveruseraccountsuploadedge",
      "href": "/graphql/reference/objects#enterpriseserveruseraccountsuploadedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "EnterpriseServerUserAccountsUpload",
          "id": "enterpriseserveruseraccountsupload",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserveruseraccountsupload"
        }
      ]
    },
    {
      "name": "EnterpriseUserAccount",
      "kind": "objects",
      "id": "enterpriseuseraccount",
      "href": "/graphql/reference/objects#enterpriseuseraccount",
      "description": "<p>An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.</p>",
      "implements": [
        {
          "name": "Actor",
          "id": "actor",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the enterprise user account's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "enterprise",
          "description": "<p>The enterprise in which this user account exists.</p>",
          "type": "Enterprise!",
          "id": "enterprise",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterprise"
        },
        {
          "name": "enterpriseInstallations",
          "description": "<p>A list of Enterprise Server installations this user is a member of.</p>",
          "type": "EnterpriseServerInstallationMembershipConnection!",
          "id": "enterpriseserverinstallationmembershipconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseserverinstallationmembershipconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for installations returned from the connection.</p>",
              "type": {
                "name": "EnterpriseServerInstallationOrder",
                "id": "enterpriseserverinstallationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#enterpriseserverinstallationorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "role",
              "description": "<p>The role of the user in the installation.</p>",
              "type": {
                "name": "EnterpriseUserAccountMembershipRole",
                "id": "enterpriseuseraccountmembershiprole",
                "kind": "enums",
                "href": "/graphql/reference/enums#enterpriseuseraccountmembershiprole"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "login",
          "description": "<p>An identifier for the enterprise user account, a login or email address.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the enterprise user account.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizations",
          "description": "<p>A list of enterprise organizations this user is a member of.</p>",
          "type": "EnterpriseOrganizationMembershipConnection!",
          "id": "enterpriseorganizationmembershipconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#enterpriseorganizationmembershipconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for organizations returned from the connection.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "role",
              "description": "<p>The role of the user in the enterprise organization.</p>",
              "type": {
                "name": "EnterpriseUserAccountMembershipRole",
                "id": "enterpriseuseraccountmembershiprole",
                "kind": "enums",
                "href": "/graphql/reference/enums#enterpriseuseraccountmembershiprole"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user within the enterprise.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Environment",
      "kind": "objects",
      "id": "environment",
      "href": "/graphql/reference/objects#environment",
      "description": "<p>An environment.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The name of the environment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "protectionRules",
          "description": "<p>The protection rules defined for this environment.</p>",
          "type": "DeploymentProtectionRuleConnection!",
          "id": "deploymentprotectionruleconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentprotectionruleconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "EnvironmentConnection",
      "kind": "objects",
      "id": "environmentconnection",
      "href": "/graphql/reference/objects#environmentconnection",
      "description": "<p>The connection type for Environment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[EnvironmentEdge]",
          "id": "environmentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#environmentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Environment]",
          "id": "environment",
          "kind": "objects",
          "href": "/graphql/reference/objects#environment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "EnvironmentEdge",
      "kind": "objects",
      "id": "environmentedge",
      "href": "/graphql/reference/objects#environmentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Environment",
          "id": "environment",
          "kind": "objects",
          "href": "/graphql/reference/objects#environment"
        }
      ]
    },
    {
      "name": "ExternalIdentity",
      "kind": "objects",
      "id": "externalidentity",
      "href": "/graphql/reference/objects#externalidentity",
      "description": "<p>An external identity provisioned by SAML SSO or SCIM. If SAML is configured on\nthe organization, the external identity is visible to (1) organization owners,\n(2) organization owners' personal access tokens (classic) with read:org or\nadmin:org scope, (3) GitHub App with an installation token with read or write\naccess to members. If SAML is configured on the enterprise, the external\nidentity is visible to (1) enterprise owners, (2) enterprise owners' personal\naccess tokens (classic) with read:enterprise or admin:enterprise scope.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "guid",
          "description": "<p>The GUID for this identity.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "organizationInvitation",
          "description": "<p>Organization invitation for this SCIM-provisioned external identity.</p>",
          "type": "OrganizationInvitation",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        },
        {
          "name": "samlIdentity",
          "description": "<p>SAML Identity attributes.</p>",
          "type": "ExternalIdentitySamlAttributes",
          "id": "externalidentitysamlattributes",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentitysamlattributes"
        },
        {
          "name": "scimIdentity",
          "description": "<p>SCIM Identity attributes.</p>",
          "type": "ExternalIdentityScimAttributes",
          "id": "externalidentityscimattributes",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentityscimattributes"
        },
        {
          "name": "user",
          "description": "<p>User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ExternalIdentityAttribute",
      "kind": "objects",
      "id": "externalidentityattribute",
      "href": "/graphql/reference/objects#externalidentityattribute",
      "description": "<p>An attribute for the External Identity attributes collection.</p>",
      "fields": [
        {
          "name": "metadata",
          "description": "<p>The attribute metadata as JSON.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The attribute name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "value",
          "description": "<p>The attribute value.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ExternalIdentityConnection",
      "kind": "objects",
      "id": "externalidentityconnection",
      "href": "/graphql/reference/objects#externalidentityconnection",
      "description": "<p>The connection type for ExternalIdentity.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ExternalIdentityEdge]",
          "id": "externalidentityedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentityedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ExternalIdentity]",
          "id": "externalidentity",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentity"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ExternalIdentityEdge",
      "kind": "objects",
      "id": "externalidentityedge",
      "href": "/graphql/reference/objects#externalidentityedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ExternalIdentity",
          "id": "externalidentity",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentity"
        }
      ]
    },
    {
      "name": "ExternalIdentitySamlAttributes",
      "kind": "objects",
      "id": "externalidentitysamlattributes",
      "href": "/graphql/reference/objects#externalidentitysamlattributes",
      "description": "<p>SAML attributes for the External Identity.</p>",
      "fields": [
        {
          "name": "attributes",
          "description": "<p>SAML Identity attributes.</p>",
          "type": "[ExternalIdentityAttribute!]!",
          "id": "externalidentityattribute",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentityattribute"
        },
        {
          "name": "emails",
          "description": "<p>The emails associated with the SAML identity.</p>",
          "type": "[UserEmailMetadata!]",
          "id": "useremailmetadata",
          "kind": "objects",
          "href": "/graphql/reference/objects#useremailmetadata"
        },
        {
          "name": "familyName",
          "description": "<p>Family name of the SAML identity.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "givenName",
          "description": "<p>Given name of the SAML identity.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "groups",
          "description": "<p>The groups linked to this identity in IDP.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameId",
          "description": "<p>The NameID of the SAML identity.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "username",
          "description": "<p>The userName of the SAML identity.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ExternalIdentityScimAttributes",
      "kind": "objects",
      "id": "externalidentityscimattributes",
      "href": "/graphql/reference/objects#externalidentityscimattributes",
      "description": "<p>SCIM attributes for the External Identity.</p>",
      "fields": [
        {
          "name": "emails",
          "description": "<p>The emails associated with the SCIM identity.</p>",
          "type": "[UserEmailMetadata!]",
          "id": "useremailmetadata",
          "kind": "objects",
          "href": "/graphql/reference/objects#useremailmetadata"
        },
        {
          "name": "familyName",
          "description": "<p>Family name of the SCIM identity.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "givenName",
          "description": "<p>Given name of the SCIM identity.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "groups",
          "description": "<p>The groups linked to this identity in IDP.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "username",
          "description": "<p>The userName of the SCIM identity.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "FollowerConnection",
      "kind": "objects",
      "id": "followerconnection",
      "href": "/graphql/reference/objects#followerconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserEdge]",
          "id": "useredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#useredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "FollowingConnection",
      "kind": "objects",
      "id": "followingconnection",
      "href": "/graphql/reference/objects#followingconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserEdge]",
          "id": "useredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#useredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "GenericHovercardContext",
      "kind": "objects",
      "id": "generichovercardcontext",
      "href": "/graphql/reference/objects#generichovercardcontext",
      "description": "<p>A generic hovercard context with a message and icon.</p>",
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "Gist",
      "kind": "objects",
      "id": "gist",
      "href": "/graphql/reference/objects#gist",
      "description": "<p>A Gist.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Starrable",
          "id": "starrable",
          "href": "/graphql/reference/interfaces#starrable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "comments",
          "description": "<p>A list of comments associated with the gist.</p>",
          "type": "GistCommentConnection!",
          "id": "gistcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "description",
          "description": "<p>The gist description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "files",
          "description": "<p>The files in this gist.</p>",
          "type": "[GistFile]",
          "id": "gistfile",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistfile",
          "arguments": [
            {
              "name": "limit",
              "defaultValue": "10",
              "description": "<p>The maximum number of files to return.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "oid",
              "description": "<p>The oid of the files to return.</p>",
              "type": {
                "name": "GitObjectID",
                "id": "gitobjectid",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#gitobjectid"
              }
            }
          ]
        },
        {
          "name": "forks",
          "description": "<p>A list of forks associated with the gist.</p>",
          "type": "GistConnection!",
          "id": "gistconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for gists returned from the connection.</p>",
              "type": {
                "name": "GistOrder",
                "id": "gistorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#gistorder"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isFork",
          "description": "<p>Identifies if the gist is a fork.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPublic",
          "description": "<p>Whether the gist is public or not.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>The gist name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "owner",
          "description": "<p>The gist owner.</p>",
          "type": "RepositoryOwner",
          "id": "repositoryowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "pushedAt",
          "description": "<p>Identifies when the gist was last pushed to.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTML path to this resource.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "stargazerCount",
          "description": "<p>Returns a count of how many stargazers there are on this object.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "stargazers",
          "description": "<p>A list of users who have starred this starrable.</p>",
          "type": "StargazerConnection!",
          "id": "stargazerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#starorder"
              }
            }
          ]
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this Gist.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerHasStarred",
          "description": "<p>Returns a boolean indicating whether the viewing user has starred this starrable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "GistComment",
      "kind": "objects",
      "id": "gistcomment",
      "href": "/graphql/reference/objects#gistcomment",
      "description": "<p>Represents a comment on an Gist.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Minimizable",
          "id": "minimizable",
          "href": "/graphql/reference/interfaces#minimizable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the gist.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>Identifies the comment body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "gist",
          "description": "<p>The associated gist.</p>",
          "type": "Gist!",
          "id": "gist",
          "kind": "objects",
          "href": "/graphql/reference/objects#gist"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized. One of <code>abuse</code>, <code>off-topic</code>,\n<code>outdated</code>, <code>resolved</code>, <code>duplicate</code> and <code>spam</code>. Note that the case and\nformatting of these values differs from the inputs to the <code>MinimizeComment</code> mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "GistCommentConnection",
      "kind": "objects",
      "id": "gistcommentconnection",
      "href": "/graphql/reference/objects#gistcommentconnection",
      "description": "<p>The connection type for GistComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[GistCommentEdge]",
          "id": "gistcommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[GistComment]",
          "id": "gistcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "GistCommentEdge",
      "kind": "objects",
      "id": "gistcommentedge",
      "href": "/graphql/reference/objects#gistcommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "GistComment",
          "id": "gistcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcomment"
        }
      ]
    },
    {
      "name": "GistConnection",
      "kind": "objects",
      "id": "gistconnection",
      "href": "/graphql/reference/objects#gistconnection",
      "description": "<p>The connection type for Gist.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[GistEdge]",
          "id": "gistedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Gist]",
          "id": "gist",
          "kind": "objects",
          "href": "/graphql/reference/objects#gist"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "GistEdge",
      "kind": "objects",
      "id": "gistedge",
      "href": "/graphql/reference/objects#gistedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Gist",
          "id": "gist",
          "kind": "objects",
          "href": "/graphql/reference/objects#gist"
        }
      ]
    },
    {
      "name": "GistFile",
      "kind": "objects",
      "id": "gistfile",
      "href": "/graphql/reference/objects#gistfile",
      "description": "<p>A file in a gist.</p>",
      "fields": [
        {
          "name": "encodedName",
          "description": "<p>The file name encoded to remove characters that are invalid in URL paths.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "encoding",
          "description": "<p>The gist file encoding.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "extension",
          "description": "<p>The file extension from the file name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isImage",
          "description": "<p>Indicates if this file is an image.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isTruncated",
          "description": "<p>Whether the file's contents were truncated.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "language",
          "description": "<p>The programming language this file is written in.</p>",
          "type": "Language",
          "id": "language",
          "kind": "objects",
          "href": "/graphql/reference/objects#language"
        },
        {
          "name": "name",
          "description": "<p>The gist file name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "size",
          "description": "<p>The gist file size in bytes.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "text",
          "description": "<p>UTF8 text data or null if the file is binary.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "arguments": [
            {
              "name": "truncate",
              "description": "<p>Optionally truncate the returned file to this length.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "GitActor",
      "kind": "objects",
      "id": "gitactor",
      "href": "/graphql/reference/objects#gitactor",
      "description": "<p>Represents an actor in a Git commit (ie. an author or committer).</p>",
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the author's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "date",
          "description": "<p>The timestamp of the Git action (authoring or committing).</p>",
          "type": "GitTimestamp",
          "id": "gittimestamp",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gittimestamp"
        },
        {
          "name": "email",
          "description": "<p>The email in the Git commit.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name in the Git commit.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "user",
          "description": "<p>The GitHub user corresponding to the email field. Null if no such user exists.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "GitActorConnection",
      "kind": "objects",
      "id": "gitactorconnection",
      "href": "/graphql/reference/objects#gitactorconnection",
      "description": "<p>The connection type for GitActor.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[GitActorEdge]",
          "id": "gitactoredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactoredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[GitActor]",
          "id": "gitactor",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactor"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "GitActorEdge",
      "kind": "objects",
      "id": "gitactoredge",
      "href": "/graphql/reference/objects#gitactoredge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "GitActor",
          "id": "gitactor",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactor"
        }
      ]
    },
    {
      "name": "GitHubMetadata",
      "kind": "objects",
      "id": "githubmetadata",
      "href": "/graphql/reference/objects#githubmetadata",
      "description": "<p>Represents information about the GitHub instance.</p>",
      "fields": [
        {
          "name": "gitHubServicesSha",
          "description": "<p>Returns a String that's a SHA of <code>github-services</code>.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "isPasswordAuthenticationVerifiable",
          "description": "<p>Whether or not users are verified.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "GpgSignature",
      "kind": "objects",
      "id": "gpgsignature",
      "href": "/graphql/reference/objects#gpgsignature",
      "description": "<p>Represents a GPG signature on a Commit or Tag.</p>",
      "implements": [
        {
          "name": "GitSignature",
          "id": "gitsignature",
          "href": "/graphql/reference/interfaces#gitsignature"
        }
      ],
      "fields": [
        {
          "name": "email",
          "description": "<p>Email used to sign this object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isValid",
          "description": "<p>True if the signature is valid and verified by GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "keyId",
          "description": "<p>Hex-encoded ID of the key that signed this object.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "payload",
          "description": "<p>Payload for GPG signing object. Raw ODB object without the signature header.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signature",
          "description": "<p>ASCII-armored signature header from object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signer",
          "description": "<p>GitHub user corresponding to the email signing this commit.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "state",
          "description": "<p>The state of this signature. <code>VALID</code> if signature is valid and verified by\nGitHub, otherwise represents reason why signature is considered invalid.</p>",
          "type": "GitSignatureState!",
          "id": "gitsignaturestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#gitsignaturestate"
        },
        {
          "name": "wasSignedByGitHub",
          "description": "<p>True if the signature was made with GitHub's signing key.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "HeadRefDeletedEvent",
      "kind": "objects",
      "id": "headrefdeletedevent",
      "href": "/graphql/reference/objects#headrefdeletedevent",
      "description": "<p>Represents a<code>head_ref_deleted</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "headRef",
          "description": "<p>Identifies the Ref associated with the <code>head_ref_deleted</code> event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "headRefName",
          "description": "<p>Identifies the name of the Ref associated with the <code>head_ref_deleted</code> event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "HeadRefForcePushedEvent",
      "kind": "objects",
      "id": "headrefforcepushedevent",
      "href": "/graphql/reference/objects#headrefforcepushedevent",
      "description": "<p>Represents a<code>head_ref_force_pushed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "afterCommit",
          "description": "<p>Identifies the after commit SHA for the<code>head_ref_force_pushed</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "beforeCommit",
          "description": "<p>Identifies the before commit SHA for the<code>head_ref_force_pushed</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "ref",
          "description": "<p>Identifies the fully qualified ref name for the<code>head_ref_force_pushed</code>event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "HeadRefRestoredEvent",
      "kind": "objects",
      "id": "headrefrestoredevent",
      "href": "/graphql/reference/objects#headrefrestoredevent",
      "description": "<p>Represents a<code>head_ref_restored</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "Hovercard",
      "kind": "objects",
      "id": "hovercard",
      "href": "/graphql/reference/objects#hovercard",
      "description": "<p>Detail needed to display a hovercard for a user.</p>",
      "fields": [
        {
          "name": "contexts",
          "description": "<p>Each of the contexts for this hovercard.</p>",
          "type": "[HovercardContext!]!",
          "id": "hovercardcontext",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ]
    },
    {
      "name": "IpAllowListEntry",
      "kind": "objects",
      "id": "ipallowlistentry",
      "href": "/graphql/reference/objects#ipallowlistentry",
      "description": "<p>An IP address or range of addresses that is allowed to access an owner's resources.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "allowListValue",
          "description": "<p>A single IP address or range of IP addresses in CIDR notation.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isActive",
          "description": "<p>Whether the entry is currently active.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>The name of the IP allow list entry.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "owner",
          "description": "<p>The owner of the IP allow list entry.</p>",
          "type": "IpAllowListOwner!",
          "id": "ipallowlistowner",
          "kind": "unions",
          "href": "/graphql/reference/unions#ipallowlistowner"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "IpAllowListEntryConnection",
      "kind": "objects",
      "id": "ipallowlistentryconnection",
      "href": "/graphql/reference/objects#ipallowlistentryconnection",
      "description": "<p>The connection type for IpAllowListEntry.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[IpAllowListEntryEdge]",
          "id": "ipallowlistentryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#ipallowlistentryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[IpAllowListEntry]",
          "id": "ipallowlistentry",
          "kind": "objects",
          "href": "/graphql/reference/objects#ipallowlistentry"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "IpAllowListEntryEdge",
      "kind": "objects",
      "id": "ipallowlistentryedge",
      "href": "/graphql/reference/objects#ipallowlistentryedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "IpAllowListEntry",
          "id": "ipallowlistentry",
          "kind": "objects",
          "href": "/graphql/reference/objects#ipallowlistentry"
        }
      ]
    },
    {
      "name": "Issue",
      "kind": "objects",
      "id": "issue",
      "href": "/graphql/reference/objects#issue",
      "description": "<p>An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.</p>",
      "implements": [
        {
          "name": "Assignable",
          "id": "assignable",
          "href": "/graphql/reference/interfaces#assignable"
        },
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Labelable",
          "id": "labelable",
          "href": "/graphql/reference/interfaces#labelable"
        },
        {
          "name": "Lockable",
          "id": "lockable",
          "href": "/graphql/reference/interfaces#lockable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2Owner",
          "id": "projectv2owner",
          "href": "/graphql/reference/interfaces#projectv2owner"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "activeLockReason",
          "description": "<p>Reason that the conversation was locked.</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "assignees",
          "description": "<p>A list of Users assigned to this object.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>Identifies the body of the issue.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyResourcePath",
          "description": "<p>The http path for this issue body.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "bodyText",
          "description": "<p>Identifies the body of the issue rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyUrl",
          "description": "<p>The http URL for this issue body.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "closed",
          "description": "<p>Indicates if the object is closed (definition of closed may depend on type).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "comments",
          "description": "<p>A list of comments associated with the Issue.</p>",
          "type": "IssueCommentConnection!",
          "id": "issuecommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issue comments returned from the connection.</p>",
              "type": {
                "name": "IssueCommentOrder",
                "id": "issuecommentorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issuecommentorder"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "fullDatabaseId",
          "description": "<p>Identifies the primary key from the database as a BigInt.</p>",
          "type": "BigInt",
          "id": "bigint",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#bigint"
        },
        {
          "name": "hovercard",
          "description": "<p>The hovercard information for this issue.</p>",
          "type": "Hovercard!",
          "id": "hovercard",
          "kind": "objects",
          "href": "/graphql/reference/objects#hovercard",
          "arguments": [
            {
              "name": "includeNotificationContexts",
              "defaultValue": true,
              "description": "<p>Whether or not to include notification contexts.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPinned",
          "description": "<p>Indicates whether or not this issue is currently pinned to the repository issues list.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isReadByViewer",
          "description": "<p>Is this issue read by the viewer.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "labels",
          "description": "<p>A list of labels associated with the object.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for labels returned from the connection.</p>",
              "type": {
                "name": "LabelOrder",
                "id": "labelorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#labelorder"
              }
            }
          ]
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "linkedBranches",
          "description": "<p>Branches linked to this issue.</p>",
          "type": "LinkedBranchConnection!",
          "id": "linkedbranchconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#linkedbranchconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "locked",
          "description": "<p><code>true</code> if the object is locked.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "milestone",
          "description": "<p>Identifies the milestone associated with the issue.</p>",
          "type": "Milestone",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone"
        },
        {
          "name": "number",
          "description": "<p>Identifies the issue number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "participants",
          "description": "<p>A list of Users that are participating in the Issue conversation.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projectCards",
          "description": "<p>List of project cards associated with this issue.</p>",
          "type": "ProjectCardConnection!",
          "id": "projectcardconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "archivedStates",
              "description": "<p>A list of archived states to filter the cards by.</p>",
              "type": {
                "name": "[ProjectCardArchivedState]",
                "id": "projectcardarchivedstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#projectcardarchivedstate"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projectV2",
          "description": "<p>Find a project by number.</p>",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projectsV2",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>How to order the returned projects.</p>",
              "type": {
                "name": "ProjectV2Order",
                "id": "projectv2order",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2order"
              }
            },
            {
              "name": "query",
              "description": "<p>A project to search for under the the owner.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this issue.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Identifies the state of the issue.</p>",
          "type": "IssueState!",
          "id": "issuestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuestate"
        },
        {
          "name": "stateReason",
          "description": "<p>Identifies the reason for the issue state.</p>",
          "type": "IssueStateReason",
          "id": "issuestatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuestatereason"
        },
        {
          "name": "timeline",
          "description": "<p>A list of events, comments, commits, etc. associated with the issue.</p>",
          "type": "IssueTimelineConnection!",
          "id": "issuetimelineconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "since",
              "description": "<p>Allows filtering timeline events by a <code>since</code> timestamp.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#datetime"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p><code>timeline</code> will be removed Use Issue.timelineItems instead. Removal on 2020-10-01 UTC.</p>"
        },
        {
          "name": "timelineItems",
          "description": "<p>A list of events, comments, commits, etc. associated with the issue.</p>",
          "type": "IssueTimelineItemsConnection!",
          "id": "issuetimelineitemsconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineitemsconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "itemTypes",
              "description": "<p>Filter timeline items by type.</p>",
              "type": {
                "name": "[IssueTimelineItemsItemType!]",
                "id": "issuetimelineitemsitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#issuetimelineitemsitemtype"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "since",
              "description": "<p>Filter timeline items by a <code>since</code> timestamp.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#datetime"
              }
            },
            {
              "name": "skip",
              "description": "<p>Skips the first <em>n</em> elements in the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "title",
          "description": "<p>Identifies the issue title.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "titleHTML",
          "description": "<p>Identifies the issue title rendered to HTML.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this issue.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanClose",
          "description": "<p>Indicates if the object can be closed by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReopen",
          "description": "<p>Indicates if the object can be reopened by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "IssueComment",
      "kind": "objects",
      "id": "issuecomment",
      "href": "/graphql/reference/objects#issuecomment",
      "description": "<p>Represents a comment on an Issue.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Minimizable",
          "id": "minimizable",
          "href": "/graphql/reference/interfaces#minimizable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "fullDatabaseId",
          "description": "<p>Identifies the primary key from the database as a BigInt.</p>",
          "type": "BigInt",
          "id": "bigint",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#bigint"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issue",
          "description": "<p>Identifies the issue associated with the comment.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized. One of <code>abuse</code>, <code>off-topic</code>,\n<code>outdated</code>, <code>resolved</code>, <code>duplicate</code> and <code>spam</code>. Note that the case and\nformatting of these values differs from the inputs to the <code>MinimizeComment</code> mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>Returns the pull request associated with the comment, if this comment was made on a\npull request.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this issue comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this issue comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "IssueCommentConnection",
      "kind": "objects",
      "id": "issuecommentconnection",
      "href": "/graphql/reference/objects#issuecommentconnection",
      "description": "<p>The connection type for IssueComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[IssueCommentEdge]",
          "id": "issuecommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[IssueComment]",
          "id": "issuecomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "IssueCommentEdge",
      "kind": "objects",
      "id": "issuecommentedge",
      "href": "/graphql/reference/objects#issuecommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "IssueComment",
          "id": "issuecomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecomment"
        }
      ]
    },
    {
      "name": "IssueConnection",
      "kind": "objects",
      "id": "issueconnection",
      "href": "/graphql/reference/objects#issueconnection",
      "description": "<p>The connection type for Issue.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[IssueEdge]",
          "id": "issueedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Issue]",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "IssueContributionsByRepository",
      "kind": "objects",
      "id": "issuecontributionsbyrepository",
      "href": "/graphql/reference/objects#issuecontributionsbyrepository",
      "description": "<p>This aggregates issues opened by a user within one repository.</p>",
      "fields": [
        {
          "name": "contributions",
          "description": "<p>The issue contributions.</p>",
          "type": "CreatedIssueContributionConnection!",
          "id": "createdissuecontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#contributionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository in which the issues were opened.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "IssueEdge",
      "kind": "objects",
      "id": "issueedge",
      "href": "/graphql/reference/objects#issueedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        }
      ]
    },
    {
      "name": "IssueTemplate",
      "kind": "objects",
      "id": "issuetemplate",
      "href": "/graphql/reference/objects#issuetemplate",
      "description": "<p>A repository issue template.</p>",
      "fields": [
        {
          "name": "about",
          "description": "<p>The template purpose.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "assignees",
          "description": "<p>The suggested assignees.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "body",
          "description": "<p>The suggested issue body.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "filename",
          "description": "<p>The template filename.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labels",
          "description": "<p>The suggested issue labels.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for labels returned from the connection.</p>",
              "type": {
                "name": "LabelOrder",
                "id": "labelorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#labelorder"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>The template name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>The suggested issue title.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "IssueTimelineConnection",
      "kind": "objects",
      "id": "issuetimelineconnection",
      "href": "/graphql/reference/objects#issuetimelineconnection",
      "description": "<p>The connection type for IssueTimelineItem.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[IssueTimelineItemEdge]",
          "id": "issuetimelineitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineitemedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[IssueTimelineItem]",
          "id": "issuetimelineitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#issuetimelineitem"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "IssueTimelineItemEdge",
      "kind": "objects",
      "id": "issuetimelineitemedge",
      "href": "/graphql/reference/objects#issuetimelineitemedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "IssueTimelineItem",
          "id": "issuetimelineitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#issuetimelineitem"
        }
      ]
    },
    {
      "name": "IssueTimelineItemsConnection",
      "kind": "objects",
      "id": "issuetimelineitemsconnection",
      "href": "/graphql/reference/objects#issuetimelineitemsconnection",
      "description": "<p>The connection type for IssueTimelineItems.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[IssueTimelineItemsEdge]",
          "id": "issuetimelineitemsedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineitemsedge"
        },
        {
          "name": "filteredCount",
          "description": "<p>Identifies the count of items after applying <code>before</code> and <code>after</code> filters.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[IssueTimelineItems]",
          "id": "issuetimelineitems",
          "kind": "unions",
          "href": "/graphql/reference/unions#issuetimelineitems"
        },
        {
          "name": "pageCount",
          "description": "<p>Identifies the count of items after applying <code>before</code>/<code>after</code> filters and <code>first</code>/<code>last</code>/<code>skip</code> slicing.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the timeline was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "IssueTimelineItemsEdge",
      "kind": "objects",
      "id": "issuetimelineitemsedge",
      "href": "/graphql/reference/objects#issuetimelineitemsedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "IssueTimelineItems",
          "id": "issuetimelineitems",
          "kind": "unions",
          "href": "/graphql/reference/unions#issuetimelineitems"
        }
      ]
    },
    {
      "name": "JoinedGitHubContribution",
      "kind": "objects",
      "id": "joinedgithubcontribution",
      "href": "/graphql/reference/objects#joinedgithubcontribution",
      "description": "<p>Represents a user signing up for a GitHub account.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Label",
      "kind": "objects",
      "id": "label",
      "href": "/graphql/reference/objects#label",
      "description": "<p>A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "color",
          "description": "<p>Identifies the label color.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the label was created.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "description",
          "description": "<p>A brief description of this label.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isDefault",
          "description": "<p>Indicates whether or not this is a default label.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issues",
          "description": "<p>A list of issues associated with this label.</p>",
          "type": "IssueConnection!",
          "id": "issueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filtering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueFilters",
                "id": "issuefilters",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issuefilters"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the issues by.</p>",
              "type": {
                "name": "[IssueState!]",
                "id": "issuestate",
                "kind": "enums",
                "href": "/graphql/reference/enums#issuestate"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>Identifies the label name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequests",
          "description": "<p>A list of pull requests associated with this label.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this label.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this label.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the label was last updated.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this label.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "LabelConnection",
      "kind": "objects",
      "id": "labelconnection",
      "href": "/graphql/reference/objects#labelconnection",
      "description": "<p>The connection type for Label.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[LabelEdge]",
          "id": "labeledge",
          "kind": "objects",
          "href": "/graphql/reference/objects#labeledge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Label]",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "LabelEdge",
      "kind": "objects",
      "id": "labeledge",
      "href": "/graphql/reference/objects#labeledge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Label",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label"
        }
      ]
    },
    {
      "name": "LabeledEvent",
      "kind": "objects",
      "id": "labeledevent",
      "href": "/graphql/reference/objects#labeledevent",
      "description": "<p>Represents a<code>labeled</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "label",
          "description": "<p>Identifies the label associated with the<code>labeled</code>event.</p>",
          "type": "Label!",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label"
        },
        {
          "name": "labelable",
          "description": "<p>Identifies the <code>Labelable</code> associated with the event.</p>",
          "type": "Labelable!",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable"
        }
      ]
    },
    {
      "name": "Language",
      "kind": "objects",
      "id": "language",
      "href": "/graphql/reference/objects#language",
      "description": "<p>Represents a given language found in repositories.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "color",
          "description": "<p>The color defined for the current language.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The name of the current language.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "LanguageConnection",
      "kind": "objects",
      "id": "languageconnection",
      "href": "/graphql/reference/objects#languageconnection",
      "description": "<p>A list of languages associated with the parent.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[LanguageEdge]",
          "id": "languageedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#languageedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Language]",
          "id": "language",
          "kind": "objects",
          "href": "/graphql/reference/objects#language"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalSize",
          "description": "<p>The total size in bytes of files written in that language.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "LanguageEdge",
      "kind": "objects",
      "id": "languageedge",
      "href": "/graphql/reference/objects#languageedge",
      "description": "<p>Represents the language of a repository.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "",
          "type": "Language!",
          "id": "language",
          "kind": "objects",
          "href": "/graphql/reference/objects#language"
        },
        {
          "name": "size",
          "description": "<p>The number of bytes of code written in the language.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "License",
      "kind": "objects",
      "id": "license",
      "href": "/graphql/reference/objects#license",
      "description": "<p>A repository's open source license.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "body",
          "description": "<p>The full text of the license.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "conditions",
          "description": "<p>The conditions set by the license.</p>",
          "type": "[LicenseRule]!",
          "id": "licenserule",
          "kind": "objects",
          "href": "/graphql/reference/objects#licenserule"
        },
        {
          "name": "description",
          "description": "<p>A human-readable description of the license.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "featured",
          "description": "<p>Whether the license should be featured.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hidden",
          "description": "<p>Whether the license should be displayed in license pickers.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "implementation",
          "description": "<p>Instructions on how to implement the license.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "key",
          "description": "<p>The lowercased SPDX ID of the license.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "limitations",
          "description": "<p>The limitations set by the license.</p>",
          "type": "[LicenseRule]!",
          "id": "licenserule",
          "kind": "objects",
          "href": "/graphql/reference/objects#licenserule"
        },
        {
          "name": "name",
          "description": "<p>The license full name specified by <a href=\"https://spdx.org/licenses\">https://spdx.org/licenses</a>.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nickname",
          "description": "<p>Customary short name if applicable (e.g, GPLv3).</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "permissions",
          "description": "<p>The permissions set by the license.</p>",
          "type": "[LicenseRule]!",
          "id": "licenserule",
          "kind": "objects",
          "href": "/graphql/reference/objects#licenserule"
        },
        {
          "name": "pseudoLicense",
          "description": "<p>Whether the license is a pseudo-license placeholder (e.g., other, no-license).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "spdxId",
          "description": "<p>Short identifier specified by <a href=\"https://spdx.org/licenses\">https://spdx.org/licenses</a>.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "url",
          "description": "<p>URL to the license on <a href=\"https://choosealicense.com\">https://choosealicense.com</a>.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "LicenseRule",
      "kind": "objects",
      "id": "licenserule",
      "href": "/graphql/reference/objects#licenserule",
      "description": "<p>Describes a License's conditions, permissions, and limitations.</p>",
      "fields": [
        {
          "name": "description",
          "description": "<p>A description of the rule.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "key",
          "description": "<p>The machine-readable rule key.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "label",
          "description": "<p>The human-readable rule label.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "LinkedBranch",
      "kind": "objects",
      "id": "linkedbranch",
      "href": "/graphql/reference/objects#linkedbranch",
      "description": "<p>A branch linked to an issue.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "ref",
          "description": "<p>The branch's ref.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "LinkedBranchConnection",
      "kind": "objects",
      "id": "linkedbranchconnection",
      "href": "/graphql/reference/objects#linkedbranchconnection",
      "description": "<p>The connection type for LinkedBranch.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[LinkedBranchEdge]",
          "id": "linkedbranchedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#linkedbranchedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[LinkedBranch]",
          "id": "linkedbranch",
          "kind": "objects",
          "href": "/graphql/reference/objects#linkedbranch"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "LinkedBranchEdge",
      "kind": "objects",
      "id": "linkedbranchedge",
      "href": "/graphql/reference/objects#linkedbranchedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "LinkedBranch",
          "id": "linkedbranch",
          "kind": "objects",
          "href": "/graphql/reference/objects#linkedbranch"
        }
      ]
    },
    {
      "name": "LockedEvent",
      "kind": "objects",
      "id": "lockedevent",
      "href": "/graphql/reference/objects#lockedevent",
      "description": "<p>Represents a<code>locked</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "lockReason",
          "description": "<p>Reason that the conversation was locked (optional).</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "lockable",
          "description": "<p>Object that was locked.</p>",
          "type": "Lockable!",
          "id": "lockable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#lockable"
        }
      ]
    },
    {
      "name": "Mannequin",
      "kind": "objects",
      "id": "mannequin",
      "href": "/graphql/reference/objects#mannequin",
      "description": "<p>A placeholder user for attribution of imported data on GitHub.</p>",
      "implements": [
        {
          "name": "Actor",
          "id": "actor",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the GitHub App's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "claimant",
          "description": "<p>The user that has claimed the data attributed to this mannequin.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "email",
          "description": "<p>The mannequin's email on the source instance.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "login",
          "description": "<p>The username of the actor.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTML path to this resource.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The URL to this resource.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "MannequinConnection",
      "kind": "objects",
      "id": "mannequinconnection",
      "href": "/graphql/reference/objects#mannequinconnection",
      "description": "<p>The connection type for Mannequin.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[MannequinEdge]",
          "id": "mannequinedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#mannequinedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Mannequin]",
          "id": "mannequin",
          "kind": "objects",
          "href": "/graphql/reference/objects#mannequin"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "MannequinEdge",
      "kind": "objects",
      "id": "mannequinedge",
      "href": "/graphql/reference/objects#mannequinedge",
      "description": "<p>Represents a mannequin.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Mannequin",
          "id": "mannequin",
          "kind": "objects",
          "href": "/graphql/reference/objects#mannequin"
        }
      ]
    },
    {
      "name": "MarkedAsDuplicateEvent",
      "kind": "objects",
      "id": "markedasduplicateevent",
      "href": "/graphql/reference/objects#markedasduplicateevent",
      "description": "<p>Represents a<code>marked_as_duplicate</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "canonical",
          "description": "<p>The authoritative issue or pull request which has been duplicated by another.</p>",
          "type": "IssueOrPullRequest",
          "id": "issueorpullrequest",
          "kind": "unions",
          "href": "/graphql/reference/unions#issueorpullrequest"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "duplicate",
          "description": "<p>The issue or pull request which has been marked as a duplicate of another.</p>",
          "type": "IssueOrPullRequest",
          "id": "issueorpullrequest",
          "kind": "unions",
          "href": "/graphql/reference/unions#issueorpullrequest"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>Canonical and duplicate belong to different repositories.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "MembersCanDeleteReposClearAuditEntry",
      "kind": "objects",
      "id": "memberscandeletereposclearauditentry",
      "href": "/graphql/reference/objects#memberscandeletereposclearauditentry",
      "description": "<p>Audit log entry for a members_can_delete_repos.clear event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "EnterpriseAuditEntryData",
          "id": "enterpriseauditentrydata",
          "href": "/graphql/reference/interfaces#enterpriseauditentrydata"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "enterpriseResourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "enterpriseSlug",
          "description": "<p>The slug of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseUrl",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "MembersCanDeleteReposDisableAuditEntry",
      "kind": "objects",
      "id": "memberscandeletereposdisableauditentry",
      "href": "/graphql/reference/objects#memberscandeletereposdisableauditentry",
      "description": "<p>Audit log entry for a members_can_delete_repos.disable event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "EnterpriseAuditEntryData",
          "id": "enterpriseauditentrydata",
          "href": "/graphql/reference/interfaces#enterpriseauditentrydata"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "enterpriseResourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "enterpriseSlug",
          "description": "<p>The slug of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseUrl",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "MembersCanDeleteReposEnableAuditEntry",
      "kind": "objects",
      "id": "memberscandeletereposenableauditentry",
      "href": "/graphql/reference/objects#memberscandeletereposenableauditentry",
      "description": "<p>Audit log entry for a members_can_delete_repos.enable event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "EnterpriseAuditEntryData",
          "id": "enterpriseauditentrydata",
          "href": "/graphql/reference/interfaces#enterpriseauditentrydata"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "enterpriseResourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "enterpriseSlug",
          "description": "<p>The slug of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseUrl",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "MentionedEvent",
      "kind": "objects",
      "id": "mentionedevent",
      "href": "/graphql/reference/objects#mentionedevent",
      "description": "<p>Represents a<code>mentioned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "MergedEvent",
      "kind": "objects",
      "id": "mergedevent",
      "href": "/graphql/reference/objects#mergedevent",
      "description": "<p>Represents a<code>merged</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with the <code>merge</code> event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "mergeRef",
          "description": "<p>Identifies the Ref associated with the <code>merge</code> event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "mergeRefName",
          "description": "<p>Identifies the name of the Ref associated with the <code>merge</code> event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this merged event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this merged event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "MigrationSource",
      "kind": "objects",
      "id": "migrationsource",
      "href": "/graphql/reference/objects#migrationsource",
      "description": "<p>A GitHub Enterprise Importer (GEI) migration source.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The migration source name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "type",
          "description": "<p>The migration source type.</p>",
          "type": "MigrationSourceType!",
          "id": "migrationsourcetype",
          "kind": "enums",
          "href": "/graphql/reference/enums#migrationsourcetype"
        },
        {
          "name": "url",
          "description": "<p>The migration source URL, for example <code>https://github.com</code> or <code>https://monalisa.ghe.com</code>.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Milestone",
      "kind": "objects",
      "id": "milestone",
      "href": "/graphql/reference/objects#milestone",
      "description": "<p>Represents a Milestone object on a given repository.</p>",
      "implements": [
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "closed",
          "description": "<p>Indicates if the object is closed (definition of closed may depend on type).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>Identifies the actor who created the milestone.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "description",
          "description": "<p>Identifies the description of the milestone.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dueOn",
          "description": "<p>Identifies the due date of the milestone.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "issues",
          "description": "<p>A list of issues associated with the milestone.</p>",
          "type": "IssueConnection!",
          "id": "issueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filtering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueFilters",
                "id": "issuefilters",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issuefilters"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the issues by.</p>",
              "type": {
                "name": "[IssueState!]",
                "id": "issuestate",
                "kind": "enums",
                "href": "/graphql/reference/enums#issuestate"
              }
            }
          ]
        },
        {
          "name": "number",
          "description": "<p>Identifies the number of the milestone.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "progressPercentage",
          "description": "<p>Identifies the percentage complete for the milestone.</p>",
          "type": "Float!",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "pullRequests",
          "description": "<p>A list of pull requests associated with the milestone.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this milestone.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this milestone.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Identifies the state of the milestone.</p>",
          "type": "MilestoneState!",
          "id": "milestonestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#milestonestate"
        },
        {
          "name": "title",
          "description": "<p>Identifies the title of the milestone.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this milestone.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanClose",
          "description": "<p>Indicates if the object can be closed by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReopen",
          "description": "<p>Indicates if the object can be reopened by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "MilestoneConnection",
      "kind": "objects",
      "id": "milestoneconnection",
      "href": "/graphql/reference/objects#milestoneconnection",
      "description": "<p>The connection type for Milestone.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[MilestoneEdge]",
          "id": "milestoneedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestoneedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Milestone]",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "MilestoneEdge",
      "kind": "objects",
      "id": "milestoneedge",
      "href": "/graphql/reference/objects#milestoneedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Milestone",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone"
        }
      ]
    },
    {
      "name": "MilestonedEvent",
      "kind": "objects",
      "id": "milestonedevent",
      "href": "/graphql/reference/objects#milestonedevent",
      "description": "<p>Represents a<code>milestoned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "milestoneTitle",
          "description": "<p>Identifies the milestone title associated with the<code>milestoned</code>event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subject",
          "description": "<p>Object referenced by event.</p>",
          "type": "MilestoneItem!",
          "id": "milestoneitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#milestoneitem"
        }
      ]
    },
    {
      "name": "MovedColumnsInProjectEvent",
      "kind": "objects",
      "id": "movedcolumnsinprojectevent",
      "href": "/graphql/reference/objects#movedcolumnsinprojectevent",
      "description": "<p>Represents a<code>moved_columns_in_project</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "previousProjectColumnName",
          "description": "<p>Column name the issue or pull request was moved from.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "project",
          "description": "<p>Project referenced by event.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectCard",
          "description": "<p>Project card referenced by this project event.</p>",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectColumnName",
          "description": "<p>Column name the issue or pull request was moved to.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        }
      ]
    },
    {
      "name": "OauthApplicationCreateAuditEntry",
      "kind": "objects",
      "id": "oauthapplicationcreateauditentry",
      "href": "/graphql/reference/objects#oauthapplicationcreateauditentry",
      "description": "<p>Audit log entry for a oauth_application.create event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OauthApplicationAuditEntryData",
          "id": "oauthapplicationauditentrydata",
          "href": "/graphql/reference/interfaces#oauthapplicationauditentrydata"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "applicationUrl",
          "description": "<p>The application URL of the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "callbackUrl",
          "description": "<p>The callback URL of the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "oauthApplicationName",
          "description": "<p>The name of the OAuth application.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oauthApplicationResourcePath",
          "description": "<p>The HTTP path for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "oauthApplicationUrl",
          "description": "<p>The HTTP URL for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "rateLimit",
          "description": "<p>The rate limit of the OAuth application.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "state",
          "description": "<p>The state of the OAuth application.</p>",
          "type": "OauthApplicationCreateAuditEntryState",
          "id": "oauthapplicationcreateauditentrystate",
          "kind": "enums",
          "href": "/graphql/reference/enums#oauthapplicationcreateauditentrystate"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgAddBillingManagerAuditEntry",
      "kind": "objects",
      "id": "orgaddbillingmanagerauditentry",
      "href": "/graphql/reference/objects#orgaddbillingmanagerauditentry",
      "description": "<p>Audit log entry for a org.add_billing_manager.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "invitationEmail",
          "description": "<p>The email address used to invite a billing manager for the organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgAddMemberAuditEntry",
      "kind": "objects",
      "id": "orgaddmemberauditentry",
      "href": "/graphql/reference/objects#orgaddmemberauditentry",
      "description": "<p>Audit log entry for a org.add_member.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "permission",
          "description": "<p>The permission level of the member added to the organization.</p>",
          "type": "OrgAddMemberAuditEntryPermission",
          "id": "orgaddmemberauditentrypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgaddmemberauditentrypermission"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgBlockUserAuditEntry",
      "kind": "objects",
      "id": "orgblockuserauditentry",
      "href": "/graphql/reference/objects#orgblockuserauditentry",
      "description": "<p>Audit log entry for a org.block_user.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "blockedUser",
          "description": "<p>The blocked user.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "blockedUserName",
          "description": "<p>The username of the blocked user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "blockedUserResourcePath",
          "description": "<p>The HTTP path for the blocked user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "blockedUserUrl",
          "description": "<p>The HTTP URL for the blocked user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgConfigDisableCollaboratorsOnlyAuditEntry",
      "kind": "objects",
      "id": "orgconfigdisablecollaboratorsonlyauditentry",
      "href": "/graphql/reference/objects#orgconfigdisablecollaboratorsonlyauditentry",
      "description": "<p>Audit log entry for a org.config.disable_collaborators_only event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgConfigEnableCollaboratorsOnlyAuditEntry",
      "kind": "objects",
      "id": "orgconfigenablecollaboratorsonlyauditentry",
      "href": "/graphql/reference/objects#orgconfigenablecollaboratorsonlyauditentry",
      "description": "<p>Audit log entry for a org.config.enable_collaborators_only event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgCreateAuditEntry",
      "kind": "objects",
      "id": "orgcreateauditentry",
      "href": "/graphql/reference/objects#orgcreateauditentry",
      "description": "<p>Audit log entry for a org.create event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "billingPlan",
          "description": "<p>The billing plan for the Organization.</p>",
          "type": "OrgCreateAuditEntryBillingPlan",
          "id": "orgcreateauditentrybillingplan",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgcreateauditentrybillingplan"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgDisableOauthAppRestrictionsAuditEntry",
      "kind": "objects",
      "id": "orgdisableoauthapprestrictionsauditentry",
      "href": "/graphql/reference/objects#orgdisableoauthapprestrictionsauditentry",
      "description": "<p>Audit log entry for a org.disable_oauth_app_restrictions event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgDisableSamlAuditEntry",
      "kind": "objects",
      "id": "orgdisablesamlauditentry",
      "href": "/graphql/reference/objects#orgdisablesamlauditentry",
      "description": "<p>Audit log entry for a org.disable_saml event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "digestMethodUrl",
          "description": "<p>The SAML provider's digest algorithm URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "issuerUrl",
          "description": "<p>The SAML provider's issuer URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "signatureMethodUrl",
          "description": "<p>The SAML provider's signature algorithm URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "singleSignOnUrl",
          "description": "<p>The SAML provider's single sign-on URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgDisableTwoFactorRequirementAuditEntry",
      "kind": "objects",
      "id": "orgdisabletwofactorrequirementauditentry",
      "href": "/graphql/reference/objects#orgdisabletwofactorrequirementauditentry",
      "description": "<p>Audit log entry for a org.disable_two_factor_requirement event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgEnableOauthAppRestrictionsAuditEntry",
      "kind": "objects",
      "id": "orgenableoauthapprestrictionsauditentry",
      "href": "/graphql/reference/objects#orgenableoauthapprestrictionsauditentry",
      "description": "<p>Audit log entry for a org.enable_oauth_app_restrictions event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgEnableSamlAuditEntry",
      "kind": "objects",
      "id": "orgenablesamlauditentry",
      "href": "/graphql/reference/objects#orgenablesamlauditentry",
      "description": "<p>Audit log entry for a org.enable_saml event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "digestMethodUrl",
          "description": "<p>The SAML provider's digest algorithm URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "issuerUrl",
          "description": "<p>The SAML provider's issuer URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "signatureMethodUrl",
          "description": "<p>The SAML provider's signature algorithm URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "singleSignOnUrl",
          "description": "<p>The SAML provider's single sign-on URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgEnableTwoFactorRequirementAuditEntry",
      "kind": "objects",
      "id": "orgenabletwofactorrequirementauditentry",
      "href": "/graphql/reference/objects#orgenabletwofactorrequirementauditentry",
      "description": "<p>Audit log entry for a org.enable_two_factor_requirement event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgInviteMemberAuditEntry",
      "kind": "objects",
      "id": "orginvitememberauditentry",
      "href": "/graphql/reference/objects#orginvitememberauditentry",
      "description": "<p>Audit log entry for a org.invite_member event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "email",
          "description": "<p>The email address of the organization invitation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationInvitation",
          "description": "<p>The organization invitation.</p>",
          "type": "OrganizationInvitation",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgInviteToBusinessAuditEntry",
      "kind": "objects",
      "id": "orginvitetobusinessauditentry",
      "href": "/graphql/reference/objects#orginvitetobusinessauditentry",
      "description": "<p>Audit log entry for a org.invite_to_business event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "EnterpriseAuditEntryData",
          "id": "enterpriseauditentrydata",
          "href": "/graphql/reference/interfaces#enterpriseauditentrydata"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "enterpriseResourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "enterpriseSlug",
          "description": "<p>The slug of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseUrl",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgOauthAppAccessApprovedAuditEntry",
      "kind": "objects",
      "id": "orgoauthappaccessapprovedauditentry",
      "href": "/graphql/reference/objects#orgoauthappaccessapprovedauditentry",
      "description": "<p>Audit log entry for a org.oauth_app_access_approved event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OauthApplicationAuditEntryData",
          "id": "oauthapplicationauditentrydata",
          "href": "/graphql/reference/interfaces#oauthapplicationauditentrydata"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "oauthApplicationName",
          "description": "<p>The name of the OAuth application.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oauthApplicationResourcePath",
          "description": "<p>The HTTP path for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "oauthApplicationUrl",
          "description": "<p>The HTTP URL for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgOauthAppAccessDeniedAuditEntry",
      "kind": "objects",
      "id": "orgoauthappaccessdeniedauditentry",
      "href": "/graphql/reference/objects#orgoauthappaccessdeniedauditentry",
      "description": "<p>Audit log entry for a org.oauth_app_access_denied event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OauthApplicationAuditEntryData",
          "id": "oauthapplicationauditentrydata",
          "href": "/graphql/reference/interfaces#oauthapplicationauditentrydata"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "oauthApplicationName",
          "description": "<p>The name of the OAuth application.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oauthApplicationResourcePath",
          "description": "<p>The HTTP path for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "oauthApplicationUrl",
          "description": "<p>The HTTP URL for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgOauthAppAccessRequestedAuditEntry",
      "kind": "objects",
      "id": "orgoauthappaccessrequestedauditentry",
      "href": "/graphql/reference/objects#orgoauthappaccessrequestedauditentry",
      "description": "<p>Audit log entry for a org.oauth_app_access_requested event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OauthApplicationAuditEntryData",
          "id": "oauthapplicationauditentrydata",
          "href": "/graphql/reference/interfaces#oauthapplicationauditentrydata"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "oauthApplicationName",
          "description": "<p>The name of the OAuth application.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oauthApplicationResourcePath",
          "description": "<p>The HTTP path for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "oauthApplicationUrl",
          "description": "<p>The HTTP URL for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgRemoveBillingManagerAuditEntry",
      "kind": "objects",
      "id": "orgremovebillingmanagerauditentry",
      "href": "/graphql/reference/objects#orgremovebillingmanagerauditentry",
      "description": "<p>Audit log entry for a org.remove_billing_manager event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "reason",
          "description": "<p>The reason for the billing manager being removed.</p>",
          "type": "OrgRemoveBillingManagerAuditEntryReason",
          "id": "orgremovebillingmanagerauditentryreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgremovebillingmanagerauditentryreason"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgRemoveMemberAuditEntry",
      "kind": "objects",
      "id": "orgremovememberauditentry",
      "href": "/graphql/reference/objects#orgremovememberauditentry",
      "description": "<p>Audit log entry for a org.remove_member event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "membershipTypes",
          "description": "<p>The types of membership the member has with the organization.</p>",
          "type": "[OrgRemoveMemberAuditEntryMembershipType!]",
          "id": "orgremovememberauditentrymembershiptype",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgremovememberauditentrymembershiptype"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "reason",
          "description": "<p>The reason for the member being removed.</p>",
          "type": "OrgRemoveMemberAuditEntryReason",
          "id": "orgremovememberauditentryreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgremovememberauditentryreason"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgRemoveOutsideCollaboratorAuditEntry",
      "kind": "objects",
      "id": "orgremoveoutsidecollaboratorauditentry",
      "href": "/graphql/reference/objects#orgremoveoutsidecollaboratorauditentry",
      "description": "<p>Audit log entry for a org.remove_outside_collaborator event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "membershipTypes",
          "description": "<p>The types of membership the outside collaborator has with the organization.</p>",
          "type": "[OrgRemoveOutsideCollaboratorAuditEntryMembershipType!]",
          "id": "orgremoveoutsidecollaboratorauditentrymembershiptype",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgremoveoutsidecollaboratorauditentrymembershiptype"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "reason",
          "description": "<p>The reason for the outside collaborator being removed from the Organization.</p>",
          "type": "OrgRemoveOutsideCollaboratorAuditEntryReason",
          "id": "orgremoveoutsidecollaboratorauditentryreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgremoveoutsidecollaboratorauditentryreason"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgRestoreMemberAuditEntry",
      "kind": "objects",
      "id": "orgrestorememberauditentry",
      "href": "/graphql/reference/objects#orgrestorememberauditentry",
      "description": "<p>Audit log entry for a org.restore_member event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "restoredCustomEmailRoutingsCount",
          "description": "<p>The number of custom email routings for the restored member.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "restoredIssueAssignmentsCount",
          "description": "<p>The number of issue assignments for the restored member.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "restoredMemberships",
          "description": "<p>Restored organization membership objects.</p>",
          "type": "[OrgRestoreMemberAuditEntryMembership!]",
          "id": "orgrestorememberauditentrymembership",
          "kind": "unions",
          "href": "/graphql/reference/unions#orgrestorememberauditentrymembership"
        },
        {
          "name": "restoredMembershipsCount",
          "description": "<p>The number of restored memberships.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "restoredRepositoriesCount",
          "description": "<p>The number of repositories of the restored member.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "restoredRepositoryStarsCount",
          "description": "<p>The number of starred repositories for the restored member.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "restoredRepositoryWatchesCount",
          "description": "<p>The number of watched repositories for the restored member.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgRestoreMemberMembershipOrganizationAuditEntryData",
      "kind": "objects",
      "id": "orgrestoremembermembershiporganizationauditentrydata",
      "href": "/graphql/reference/objects#orgrestoremembermembershiporganizationauditentrydata",
      "description": "<p>Metadata for an organization membership for org.restore_member actions.</p>",
      "implements": [
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgRestoreMemberMembershipRepositoryAuditEntryData",
      "kind": "objects",
      "id": "orgrestoremembermembershiprepositoryauditentrydata",
      "href": "/graphql/reference/objects#orgrestoremembermembershiprepositoryauditentrydata",
      "description": "<p>Metadata for a repository membership for org.restore_member actions.</p>",
      "implements": [
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgRestoreMemberMembershipTeamAuditEntryData",
      "kind": "objects",
      "id": "orgrestoremembermembershipteamauditentrydata",
      "href": "/graphql/reference/objects#orgrestoremembermembershipteamauditentrydata",
      "description": "<p>Metadata for a team membership for org.restore_member actions.</p>",
      "implements": [
        {
          "name": "TeamAuditEntryData",
          "id": "teamauditentrydata",
          "href": "/graphql/reference/interfaces#teamauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "team",
          "description": "<p>The team associated with the action.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "teamName",
          "description": "<p>The name of the team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teamResourcePath",
          "description": "<p>The HTTP path for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamUrl",
          "description": "<p>The HTTP URL for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgUnblockUserAuditEntry",
      "kind": "objects",
      "id": "orgunblockuserauditentry",
      "href": "/graphql/reference/objects#orgunblockuserauditentry",
      "description": "<p>Audit log entry for a org.unblock_user.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "blockedUser",
          "description": "<p>The user being unblocked by the organization.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "blockedUserName",
          "description": "<p>The username of the blocked user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "blockedUserResourcePath",
          "description": "<p>The HTTP path for the blocked user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "blockedUserUrl",
          "description": "<p>The HTTP URL for the blocked user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgUpdateDefaultRepositoryPermissionAuditEntry",
      "kind": "objects",
      "id": "orgupdatedefaultrepositorypermissionauditentry",
      "href": "/graphql/reference/objects#orgupdatedefaultrepositorypermissionauditentry",
      "description": "<p>Audit log entry for a org.update_default_repository_permission.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "permission",
          "description": "<p>The new base repository permission level for the organization.</p>",
          "type": "OrgUpdateDefaultRepositoryPermissionAuditEntryPermission",
          "id": "orgupdatedefaultrepositorypermissionauditentrypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgupdatedefaultrepositorypermissionauditentrypermission"
        },
        {
          "name": "permissionWas",
          "description": "<p>The former base repository permission level for the organization.</p>",
          "type": "OrgUpdateDefaultRepositoryPermissionAuditEntryPermission",
          "id": "orgupdatedefaultrepositorypermissionauditentrypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgupdatedefaultrepositorypermissionauditentrypermission"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgUpdateMemberAuditEntry",
      "kind": "objects",
      "id": "orgupdatememberauditentry",
      "href": "/graphql/reference/objects#orgupdatememberauditentry",
      "description": "<p>Audit log entry for a org.update_member event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "permission",
          "description": "<p>The new member permission level for the organization.</p>",
          "type": "OrgUpdateMemberAuditEntryPermission",
          "id": "orgupdatememberauditentrypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgupdatememberauditentrypermission"
        },
        {
          "name": "permissionWas",
          "description": "<p>The former member permission level for the organization.</p>",
          "type": "OrgUpdateMemberAuditEntryPermission",
          "id": "orgupdatememberauditentrypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgupdatememberauditentrypermission"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrgUpdateMemberRepositoryCreationPermissionAuditEntry",
      "kind": "objects",
      "id": "orgupdatememberrepositorycreationpermissionauditentry",
      "href": "/graphql/reference/objects#orgupdatememberrepositorycreationpermissionauditentry",
      "description": "<p>Audit log entry for a org.update_member_repository_creation_permission event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "canCreateRepositories",
          "description": "<p>Can members create repositories in the organization.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "visibility",
          "description": "<p>The permission for visibility level of repositories for this organization.</p>",
          "type": "OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility",
          "id": "orgupdatememberrepositorycreationpermissionauditentryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgupdatememberrepositorycreationpermissionauditentryvisibility"
        }
      ]
    },
    {
      "name": "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry",
      "kind": "objects",
      "id": "orgupdatememberrepositoryinvitationpermissionauditentry",
      "href": "/graphql/reference/objects#orgupdatememberrepositoryinvitationpermissionauditentry",
      "description": "<p>Audit log entry for a org.update_member_repository_invitation_permission event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "canInviteOutsideCollaboratorsToRepositories",
          "description": "<p>Can outside collaborators be invited to repositories in the organization.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Organization",
      "kind": "objects",
      "id": "organization",
      "href": "/graphql/reference/objects#organization",
      "description": "<p>An account on GitHub, with one or more owners, that has repositories, members and teams.</p>",
      "implements": [
        {
          "name": "Actor",
          "id": "actor",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "AnnouncementBanner",
          "id": "announcementbanner",
          "href": "/graphql/reference/interfaces#announcementbanner"
        },
        {
          "name": "MemberStatusable",
          "id": "memberstatusable",
          "href": "/graphql/reference/interfaces#memberstatusable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "PackageOwner",
          "id": "packageowner",
          "href": "/graphql/reference/interfaces#packageowner"
        },
        {
          "name": "ProfileOwner",
          "id": "profileowner",
          "href": "/graphql/reference/interfaces#profileowner"
        },
        {
          "name": "ProjectOwner",
          "id": "projectowner",
          "href": "/graphql/reference/interfaces#projectowner"
        },
        {
          "name": "ProjectV2Owner",
          "id": "projectv2owner",
          "href": "/graphql/reference/interfaces#projectv2owner"
        },
        {
          "name": "ProjectV2Recent",
          "id": "projectv2recent",
          "href": "/graphql/reference/interfaces#projectv2recent"
        },
        {
          "name": "RepositoryDiscussionAuthor",
          "id": "repositorydiscussionauthor",
          "href": "/graphql/reference/interfaces#repositorydiscussionauthor"
        },
        {
          "name": "RepositoryDiscussionCommentAuthor",
          "id": "repositorydiscussioncommentauthor",
          "href": "/graphql/reference/interfaces#repositorydiscussioncommentauthor"
        },
        {
          "name": "RepositoryOwner",
          "id": "repositoryowner",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "announcement",
          "description": "<p>The text of the announcement.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "announcementExpiresAt",
          "description": "<p>The expiration date of the announcement, if any.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "announcementUserDismissible",
          "description": "<p>Whether the announcement can be dismissed by the user.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "anyPinnableItems",
          "description": "<p>Determine if this repository owner has any items that can be pinned to their profile.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "type",
              "description": "<p>Filter to only a particular kind of pinnable item.</p>",
              "type": {
                "name": "PinnableItemType",
                "id": "pinnableitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "auditLog",
          "description": "<p>Audit log entries of the organization.</p>",
          "type": "OrganizationAuditEntryConnection!",
          "id": "organizationauditentryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationauditentryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the returned audit log entries.</p>",
              "type": {
                "name": "AuditLogOrder",
                "id": "auditlogorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#auditlogorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The query string to filter audit entries.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the organization's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>The organization's public profile description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "descriptionHTML",
          "description": "<p>The organization's public profile description rendered to HTML.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "domains",
          "description": "<p>A list of domains owned by the organization.</p>",
          "type": "VerifiableDomainConnection",
          "id": "verifiabledomainconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#verifiabledomainconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "isApproved",
              "description": "<p>Filter by if the domain is approved.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "isVerified",
              "description": "<p>Filter by if the domain is verified.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for verifiable domains returned.</p>",
              "type": {
                "name": "VerifiableDomainOrder",
                "id": "verifiabledomainorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#verifiabledomainorder"
              }
            }
          ]
        },
        {
          "name": "email",
          "description": "<p>The organization's public email.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseOwners",
          "description": "<p>A list of owners of the organization's enterprise account.</p>",
          "type": "OrganizationEnterpriseOwnerConnection!",
          "id": "organizationenterpriseownerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationenterpriseownerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for enterprise owners returned from the connection.</p>",
              "type": {
                "name": "OrgEnterpriseOwnerOrder",
                "id": "orgenterpriseownerorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#orgenterpriseownerorder"
              }
            },
            {
              "name": "organizationRole",
              "description": "<p>The organization role to filter by.</p>",
              "type": {
                "name": "RoleInOrganization",
                "id": "roleinorganization",
                "kind": "enums",
                "href": "/graphql/reference/enums#roleinorganization"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "ipAllowListEnabledSetting",
          "description": "<p>The setting value for whether the organization has an IP allow list enabled.</p>",
          "type": "IpAllowListEnabledSettingValue!",
          "id": "ipallowlistenabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#ipallowlistenabledsettingvalue"
        },
        {
          "name": "ipAllowListEntries",
          "description": "<p>The IP addresses that are allowed to access resources owned by the organization.</p>",
          "type": "IpAllowListEntryConnection!",
          "id": "ipallowlistentryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#ipallowlistentryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for IP allow list entries returned.</p>",
              "type": {
                "name": "IpAllowListEntryOrder",
                "id": "ipallowlistentryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#ipallowlistentryorder"
              }
            }
          ]
        },
        {
          "name": "ipAllowListForInstalledAppsEnabledSetting",
          "description": "<p>The setting value for whether the organization has IP allow list configuration for installed GitHub Apps enabled.</p>",
          "type": "IpAllowListForInstalledAppsEnabledSettingValue!",
          "id": "ipallowlistforinstalledappsenabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#ipallowlistforinstalledappsenabledsettingvalue"
        },
        {
          "name": "isVerified",
          "description": "<p>Whether the organization has verified its profile email and website.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "itemShowcase",
          "description": "<p>Showcases a selection of repositories and gists that the profile owner has\neither curated or that have been selected automatically based on popularity.</p>",
          "type": "ProfileItemShowcase!",
          "id": "profileitemshowcase",
          "kind": "objects",
          "href": "/graphql/reference/objects#profileitemshowcase"
        },
        {
          "name": "location",
          "description": "<p>The organization's public profile location.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "login",
          "description": "<p>The organization's login name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "mannequins",
          "description": "<p>A list of all mannequins for this organization.</p>",
          "type": "MannequinConnection!",
          "id": "mannequinconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#mannequinconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for mannequins returned from the connection.</p>",
              "type": {
                "name": "MannequinOrder",
                "id": "mannequinorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#mannequinorder"
              }
            }
          ]
        },
        {
          "name": "memberStatuses",
          "description": "<p>Get the status messages members of this entity have set that are either public or visible only to the organization.</p>",
          "type": "UserStatusConnection!",
          "id": "userstatusconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatusconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for user statuses returned from the connection.</p>",
              "type": {
                "name": "UserStatusOrder",
                "id": "userstatusorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#userstatusorder"
              }
            }
          ]
        },
        {
          "name": "membersCanForkPrivateRepositories",
          "description": "<p>Members can fork private repositories in this organization.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "membersWithRole",
          "description": "<p>A list of users who are members of this organization.</p>",
          "type": "OrganizationMemberConnection!",
          "id": "organizationmemberconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationmemberconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>The organization's public profile name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "newTeamResourcePath",
          "description": "<p>The HTTP path creating a new team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "newTeamUrl",
          "description": "<p>The HTTP URL creating a new team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "notificationDeliveryRestrictionEnabledSetting",
          "description": "<p>Indicates if email notification delivery for this organization is restricted to verified or approved domains.</p>",
          "type": "NotificationRestrictionSettingValue!",
          "id": "notificationrestrictionsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#notificationrestrictionsettingvalue"
        },
        {
          "name": "organizationBillingEmail",
          "description": "<p>The billing email for the organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "packages",
          "description": "<p>A list of packages under the owner.</p>",
          "type": "PackageConnection!",
          "id": "packageconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "names",
              "description": "<p>Find packages by their names.</p>",
              "type": {
                "name": "[String]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering of the returned packages.</p>",
              "type": {
                "name": "PackageOrder",
                "id": "packageorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#packageorder"
              }
            },
            {
              "name": "packageType",
              "description": "<p>Filter registry package by type.</p>",
              "type": {
                "name": "PackageType",
                "id": "packagetype",
                "kind": "enums",
                "href": "/graphql/reference/enums#packagetype"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Find packages in a repository by ID.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            }
          ]
        },
        {
          "name": "pendingMembers",
          "description": "<p>A list of users who have been invited to join this organization.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "pinnableItems",
          "description": "<p>A list of repositories and gists this profile owner can pin to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinnable items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItems",
          "description": "<p>A list of repositories and gists this profile owner has pinned to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinned items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItemsRemaining",
          "description": "<p>Returns how many more items this profile owner can pin to their profile.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "project",
          "description": "<p>Find project by number.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projectV2",
          "description": "<p>Find a project by number.</p>",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projects",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectConnection!",
          "id": "projectconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for projects returned from the connection.</p>",
              "type": {
                "name": "ProjectOrder",
                "id": "projectorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectorder"
              }
            },
            {
              "name": "search",
              "description": "<p>Query to search projects by, currently only searching by name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the projects by.</p>",
              "type": {
                "name": "[ProjectState!]",
                "id": "projectstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#projectstate"
              }
            }
          ]
        },
        {
          "name": "projectsResourcePath",
          "description": "<p>The HTTP path listing organization's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsUrl",
          "description": "<p>The HTTP URL listing organization's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsV2",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>How to order the returned projects.</p>",
              "type": {
                "name": "ProjectV2Order",
                "id": "projectv2order",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2order"
              }
            },
            {
              "name": "query",
              "description": "<p>A project to search for under the the owner.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "recentProjects",
          "description": "<p>Recent projects that this user has modified in the context of the owner.</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "repositories",
          "description": "<p>A list of repositories that the user owns.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "isFork",
              "description": "<p>If non-null, filters repositories according to whether they are forks of another repository.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>Find Repository.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "arguments": [
            {
              "name": "followRenames",
              "defaultValue": true,
              "description": "<p>Follow repository renames. If disabled, a repository referenced by its old name will return an error.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "name",
              "description": "<p>Name of Repository to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "repositoryDiscussionComments",
          "description": "<p>Discussion comments this user has authored.</p>",
          "type": "DiscussionCommentConnection!",
          "id": "discussioncommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "onlyAnswers",
              "defaultValue": false,
              "description": "<p>Filter discussion comments to only those that were marked as the answer.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Filter discussion comments to only those in a specific repository.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            }
          ]
        },
        {
          "name": "repositoryDiscussions",
          "description": "<p>Discussions this user has started.</p>",
          "type": "DiscussionConnection!",
          "id": "discussionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "answered",
              "description": "<p>Filter discussions to only those that have been answered or not. Defaults to\nincluding both answered and unanswered discussions.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for discussions returned from the connection.</p>",
              "type": {
                "name": "DiscussionOrder",
                "id": "discussionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#discussionorder"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Filter discussions to only those in a specific repository.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the discussions by.</p>",
              "type": {
                "name": "[DiscussionState!]",
                "id": "discussionstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#discussionstate"
              }
            }
          ]
        },
        {
          "name": "repositoryMigrations",
          "description": "<p>A list of all repository migrations for this organization.</p>",
          "type": "RepositoryMigrationConnection!",
          "id": "repositorymigrationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorymigrationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repository migrations returned.</p>",
              "type": {
                "name": "RepositoryMigrationOrder",
                "id": "repositorymigrationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositorymigrationorder"
              }
            },
            {
              "name": "repositoryName",
              "description": "<p>Filter repository migrations by repository name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "state",
              "description": "<p>Filter repository migrations by state.</p>",
              "type": {
                "name": "MigrationState",
                "id": "migrationstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#migrationstate"
              }
            }
          ]
        },
        {
          "name": "requiresTwoFactorAuthentication",
          "description": "<p>When true the organization requires all members, billing managers, and outside\ncollaborators to enable two-factor authentication.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this organization.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "samlIdentityProvider",
          "description": "<p>The Organization's SAML identity provider. Visible to (1) organization owners,\n(2) organization owners' personal access tokens (classic) with read:org or\nadmin:org scope, (3) GitHub App with an installation token with read or write\naccess to members.</p>",
          "type": "OrganizationIdentityProvider",
          "id": "organizationidentityprovider",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationidentityprovider"
        },
        {
          "name": "team",
          "description": "<p>Find an organization's team by its slug.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team",
          "arguments": [
            {
              "name": "slug",
              "description": "<p>The name or slug of the team to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "teams",
          "description": "<p>A list of teams in this organization.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "ldapMapped",
              "description": "<p>If true, filters teams that are mapped to an LDAP Group (Enterprise only).</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "notificationSetting",
              "description": "<p>If non-null, filters teams according to notification setting.</p>",
              "type": {
                "name": "TeamNotificationSetting",
                "id": "teamnotificationsetting",
                "kind": "enums",
                "href": "/graphql/reference/enums#teamnotificationsetting"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for teams returned from the connection.</p>",
              "type": {
                "name": "TeamOrder",
                "id": "teamorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#teamorder"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters teams according to privacy.</p>",
              "type": {
                "name": "TeamPrivacy",
                "id": "teamprivacy",
                "kind": "enums",
                "href": "/graphql/reference/enums#teamprivacy"
              }
            },
            {
              "name": "query",
              "description": "<p>If non-null, filters teams with query on team name and team slug.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "role",
              "description": "<p>If non-null, filters teams according to whether the viewer is an admin or member on team.</p>",
              "type": {
                "name": "TeamRole",
                "id": "teamrole",
                "kind": "enums",
                "href": "/graphql/reference/enums#teamrole"
              }
            },
            {
              "name": "rootTeamsOnly",
              "defaultValue": false,
              "description": "<p>If true, restrict to only root teams.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "userLogins",
              "description": "<p>User logins to filter by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "teamsResourcePath",
          "description": "<p>The HTTP path listing organization's teams.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamsUrl",
          "description": "<p>The HTTP URL listing organization's teams.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "twitterUsername",
          "description": "<p>The organization's Twitter username.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this organization.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanAdminister",
          "description": "<p>Organization is adminable by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanChangePinnedItems",
          "description": "<p>Can the viewer pin repositories and gists to the profile?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateProjects",
          "description": "<p>Can the current viewer create new projects on this owner.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateRepositories",
          "description": "<p>Viewer can create repositories on this organization.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateTeams",
          "description": "<p>Viewer can create teams on this organization.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerIsAMember",
          "description": "<p>Viewer is an active member of this organization.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerIsFollowing",
          "description": "<p>Whether or not this Organization is followed by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "webCommitSignoffRequired",
          "description": "<p>Whether contributors are required to sign off on web-based commits for repositories in this organization.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "websiteUrl",
          "description": "<p>The organization's public profile URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrganizationAuditEntryConnection",
      "kind": "objects",
      "id": "organizationauditentryconnection",
      "href": "/graphql/reference/objects#organizationauditentryconnection",
      "description": "<p>The connection type for OrganizationAuditEntry.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[OrganizationAuditEntryEdge]",
          "id": "organizationauditentryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationauditentryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[OrganizationAuditEntry]",
          "id": "organizationauditentry",
          "kind": "unions",
          "href": "/graphql/reference/unions#organizationauditentry"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationAuditEntryEdge",
      "kind": "objects",
      "id": "organizationauditentryedge",
      "href": "/graphql/reference/objects#organizationauditentryedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "OrganizationAuditEntry",
          "id": "organizationauditentry",
          "kind": "unions",
          "href": "/graphql/reference/unions#organizationauditentry"
        }
      ]
    },
    {
      "name": "OrganizationConnection",
      "kind": "objects",
      "id": "organizationconnection",
      "href": "/graphql/reference/objects#organizationconnection",
      "description": "<p>A list of organizations managed by an enterprise.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[OrganizationEdge]",
          "id": "organizationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Organization]",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationEdge",
      "kind": "objects",
      "id": "organizationedge",
      "href": "/graphql/reference/objects#organizationedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        }
      ]
    },
    {
      "name": "OrganizationEnterpriseOwnerConnection",
      "kind": "objects",
      "id": "organizationenterpriseownerconnection",
      "href": "/graphql/reference/objects#organizationenterpriseownerconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[OrganizationEnterpriseOwnerEdge]",
          "id": "organizationenterpriseowneredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationenterpriseowneredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationEnterpriseOwnerEdge",
      "kind": "objects",
      "id": "organizationenterpriseowneredge",
      "href": "/graphql/reference/objects#organizationenterpriseowneredge",
      "description": "<p>An enterprise owner in the context of an organization that is part of the enterprise.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "organizationRole",
          "description": "<p>The role of the owner with respect to the organization.</p>",
          "type": "RoleInOrganization!",
          "id": "roleinorganization",
          "kind": "enums",
          "href": "/graphql/reference/enums#roleinorganization"
        }
      ]
    },
    {
      "name": "OrganizationIdentityProvider",
      "kind": "objects",
      "id": "organizationidentityprovider",
      "href": "/graphql/reference/objects#organizationidentityprovider",
      "description": "<p>An Identity Provider configured to provision SAML and SCIM identities for\nOrganizations. Visible to (1) organization owners, (2) organization owners'\npersonal access tokens (classic) with read:org or admin:org scope, (3) GitHub\nApp with an installation token with read or write access to members.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "digestMethod",
          "description": "<p>The digest algorithm used to sign SAML requests for the Identity Provider.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "externalIdentities",
          "description": "<p>External Identities provisioned by this Identity Provider.</p>",
          "type": "ExternalIdentityConnection!",
          "id": "externalidentityconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentityconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "login",
              "description": "<p>Filter to external identities with the users login.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "membersOnly",
              "description": "<p>Filter to external identities with valid org membership only.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "userName",
              "description": "<p>Filter to external identities with the users userName/NameID attribute.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "idpCertificate",
          "description": "<p>The x509 certificate used by the Identity Provider to sign assertions and responses.</p>",
          "type": "X509Certificate",
          "id": "x509certificate",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#x509certificate"
        },
        {
          "name": "issuer",
          "description": "<p>The Issuer Entity ID for the SAML Identity Provider.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organization",
          "description": "<p>Organization this Identity Provider belongs to.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "signatureMethod",
          "description": "<p>The signature algorithm used to sign SAML requests for the Identity Provider.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "ssoUrl",
          "description": "<p>The URL endpoint for the Identity Provider's SAML SSO.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrganizationInvitation",
      "kind": "objects",
      "id": "organizationinvitation",
      "href": "/graphql/reference/objects#organizationinvitation",
      "description": "<p>An Invitation for a user to an organization.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "email",
          "description": "<p>The email address of the user invited to the organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "invitationSource",
          "description": "<p>The source of the invitation.</p>",
          "type": "OrganizationInvitationSource!",
          "id": "organizationinvitationsource",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationinvitationsource"
        },
        {
          "name": "invitationType",
          "description": "<p>The type of invitation that was sent (e.g. email, user).</p>",
          "type": "OrganizationInvitationType!",
          "id": "organizationinvitationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationinvitationtype"
        },
        {
          "name": "invitee",
          "description": "<p>The user who was invited to the organization.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "inviter",
          "description": "<p>The user who created the invitation.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "organization",
          "description": "<p>The organization the invite is for.</p>",
          "type": "Organization!",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "role",
          "description": "<p>The user's pending role in the organization (e.g. member, owner).</p>",
          "type": "OrganizationInvitationRole!",
          "id": "organizationinvitationrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationinvitationrole"
        }
      ]
    },
    {
      "name": "OrganizationInvitationConnection",
      "kind": "objects",
      "id": "organizationinvitationconnection",
      "href": "/graphql/reference/objects#organizationinvitationconnection",
      "description": "<p>The connection type for OrganizationInvitation.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[OrganizationInvitationEdge]",
          "id": "organizationinvitationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[OrganizationInvitation]",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationInvitationEdge",
      "kind": "objects",
      "id": "organizationinvitationedge",
      "href": "/graphql/reference/objects#organizationinvitationedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "OrganizationInvitation",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        }
      ]
    },
    {
      "name": "OrganizationMemberConnection",
      "kind": "objects",
      "id": "organizationmemberconnection",
      "href": "/graphql/reference/objects#organizationmemberconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[OrganizationMemberEdge]",
          "id": "organizationmemberedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationmemberedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationMemberEdge",
      "kind": "objects",
      "id": "organizationmemberedge",
      "href": "/graphql/reference/objects#organizationmemberedge",
      "description": "<p>Represents a user within an organization.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "hasTwoFactorEnabled",
          "description": "<p>Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "role",
          "description": "<p>The role this user has in the organization.</p>",
          "type": "OrganizationMemberRole",
          "id": "organizationmemberrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationmemberrole"
        }
      ]
    },
    {
      "name": "OrganizationMigration",
      "kind": "objects",
      "id": "organizationmigration",
      "href": "/graphql/reference/objects#organizationmigration",
      "description": "<p>A GitHub Enterprise Importer (GEI) organization migration.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "failureReason",
          "description": "<p>The reason the organization migration failed.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "remainingRepositoriesCount",
          "description": "<p>The remaining amount of repos to be migrated.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "sourceOrgName",
          "description": "<p>The name of the source organization to be migrated.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "sourceOrgUrl",
          "description": "<p>The URL of the source organization to migrate.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>The migration state.</p>",
          "type": "OrganizationMigrationState!",
          "id": "organizationmigrationstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationmigrationstate"
        },
        {
          "name": "targetOrgName",
          "description": "<p>The name of the target organization.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "totalRepositoriesCount",
          "description": "<p>The total amount of repositories to be migrated.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationTeamsHovercardContext",
      "kind": "objects",
      "id": "organizationteamshovercardcontext",
      "href": "/graphql/reference/objects#organizationteamshovercardcontext",
      "description": "<p>An organization teams hovercard context.</p>",
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "relevantTeams",
          "description": "<p>Teams in this organization the user is a member of that are relevant.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "teamsResourcePath",
          "description": "<p>The path for the full team list for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamsUrl",
          "description": "<p>The URL for the full team list for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "totalTeamCount",
          "description": "<p>The total number of teams the user is on in the organization.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationsHovercardContext",
      "kind": "objects",
      "id": "organizationshovercardcontext",
      "href": "/graphql/reference/objects#organizationshovercardcontext",
      "description": "<p>An organization list hovercard context.</p>",
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "relevantOrganizations",
          "description": "<p>Organizations this user is a member of that are relevant.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the User's organizations.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            }
          ]
        },
        {
          "name": "totalOrganizationCount",
          "description": "<p>The total number of organizations this user is in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "Package",
      "kind": "objects",
      "id": "package",
      "href": "/graphql/reference/objects#package",
      "description": "<p>Information for an uploaded package.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "latestVersion",
          "description": "<p>Find the latest version for the package.</p>",
          "type": "PackageVersion",
          "id": "packageversion",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageversion"
        },
        {
          "name": "name",
          "description": "<p>Identifies the name of the package.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "packageType",
          "description": "<p>Identifies the type of the package.</p>",
          "type": "PackageType!",
          "id": "packagetype",
          "kind": "enums",
          "href": "/graphql/reference/enums#packagetype"
        },
        {
          "name": "repository",
          "description": "<p>The repository this package belongs to.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "statistics",
          "description": "<p>Statistics about package activity.</p>",
          "type": "PackageStatistics",
          "id": "packagestatistics",
          "kind": "objects",
          "href": "/graphql/reference/objects#packagestatistics"
        },
        {
          "name": "version",
          "description": "<p>Find package version by version string.</p>",
          "type": "PackageVersion",
          "id": "packageversion",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageversion",
          "arguments": [
            {
              "name": "version",
              "description": "<p>The package version.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "versions",
          "description": "<p>list of versions for this package.</p>",
          "type": "PackageVersionConnection!",
          "id": "packageversionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageversionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering of the returned packages.</p>",
              "type": {
                "name": "PackageVersionOrder",
                "id": "packageversionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#packageversionorder"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "PackageConnection",
      "kind": "objects",
      "id": "packageconnection",
      "href": "/graphql/reference/objects#packageconnection",
      "description": "<p>The connection type for Package.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PackageEdge]",
          "id": "packageedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Package]",
          "id": "package",
          "kind": "objects",
          "href": "/graphql/reference/objects#package"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PackageEdge",
      "kind": "objects",
      "id": "packageedge",
      "href": "/graphql/reference/objects#packageedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Package",
          "id": "package",
          "kind": "objects",
          "href": "/graphql/reference/objects#package"
        }
      ]
    },
    {
      "name": "PackageFile",
      "kind": "objects",
      "id": "packagefile",
      "href": "/graphql/reference/objects#packagefile",
      "description": "<p>A file in a package version.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "md5",
          "description": "<p>MD5 hash of the file.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>Name of the file.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "packageVersion",
          "description": "<p>The package version this file belongs to.</p>",
          "type": "PackageVersion",
          "id": "packageversion",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageversion"
        },
        {
          "name": "sha1",
          "description": "<p>SHA1 hash of the file.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "sha256",
          "description": "<p>SHA256 hash of the file.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "size",
          "description": "<p>Size of the file in bytes.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>URL to download the asset.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "PackageFileConnection",
      "kind": "objects",
      "id": "packagefileconnection",
      "href": "/graphql/reference/objects#packagefileconnection",
      "description": "<p>The connection type for PackageFile.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PackageFileEdge]",
          "id": "packagefileedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#packagefileedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PackageFile]",
          "id": "packagefile",
          "kind": "objects",
          "href": "/graphql/reference/objects#packagefile"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PackageFileEdge",
      "kind": "objects",
      "id": "packagefileedge",
      "href": "/graphql/reference/objects#packagefileedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PackageFile",
          "id": "packagefile",
          "kind": "objects",
          "href": "/graphql/reference/objects#packagefile"
        }
      ]
    },
    {
      "name": "PackageStatistics",
      "kind": "objects",
      "id": "packagestatistics",
      "href": "/graphql/reference/objects#packagestatistics",
      "description": "<p>Represents a object that contains package activity statistics such as downloads.</p>",
      "fields": [
        {
          "name": "downloadsTotalCount",
          "description": "<p>Number of times the package was downloaded since it was created.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PackageTag",
      "kind": "objects",
      "id": "packagetag",
      "href": "/graphql/reference/objects#packagetag",
      "description": "<p>A version tag contains the mapping between a tag name and a version.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>Identifies the tag name of the version.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "version",
          "description": "<p>Version that the tag is associated with.</p>",
          "type": "PackageVersion",
          "id": "packageversion",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageversion"
        }
      ]
    },
    {
      "name": "PackageVersion",
      "kind": "objects",
      "id": "packageversion",
      "href": "/graphql/reference/objects#packageversion",
      "description": "<p>Information about a specific package version.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "files",
          "description": "<p>List of files associated with this package version.</p>",
          "type": "PackageFileConnection!",
          "id": "packagefileconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#packagefileconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering of the returned package files.</p>",
              "type": {
                "name": "PackageFileOrder",
                "id": "packagefileorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#packagefileorder"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "package",
          "description": "<p>The package associated with this version.</p>",
          "type": "Package",
          "id": "package",
          "kind": "objects",
          "href": "/graphql/reference/objects#package"
        },
        {
          "name": "platform",
          "description": "<p>The platform this version was built for.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "preRelease",
          "description": "<p>Whether or not this version is a pre-release.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "readme",
          "description": "<p>The README of this package version.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "release",
          "description": "<p>The release associated with this package version.</p>",
          "type": "Release",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release"
        },
        {
          "name": "statistics",
          "description": "<p>Statistics about package activity.</p>",
          "type": "PackageVersionStatistics",
          "id": "packageversionstatistics",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageversionstatistics"
        },
        {
          "name": "summary",
          "description": "<p>The package version summary.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "version",
          "description": "<p>The version string.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "PackageVersionConnection",
      "kind": "objects",
      "id": "packageversionconnection",
      "href": "/graphql/reference/objects#packageversionconnection",
      "description": "<p>The connection type for PackageVersion.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PackageVersionEdge]",
          "id": "packageversionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageversionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PackageVersion]",
          "id": "packageversion",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageversion"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PackageVersionEdge",
      "kind": "objects",
      "id": "packageversionedge",
      "href": "/graphql/reference/objects#packageversionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PackageVersion",
          "id": "packageversion",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageversion"
        }
      ]
    },
    {
      "name": "PackageVersionStatistics",
      "kind": "objects",
      "id": "packageversionstatistics",
      "href": "/graphql/reference/objects#packageversionstatistics",
      "description": "<p>Represents a object that contains package version activity statistics such as downloads.</p>",
      "fields": [
        {
          "name": "downloadsTotalCount",
          "description": "<p>Number of times the package was downloaded since it was created.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PageInfo",
      "kind": "objects",
      "id": "pageinfo",
      "href": "/graphql/reference/objects#pageinfo",
      "description": "<p>Information about pagination in a connection.</p>",
      "fields": [
        {
          "name": "endCursor",
          "description": "<p>When paginating forwards, the cursor to continue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "hasNextPage",
          "description": "<p>When paginating forwards, are there more items?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasPreviousPage",
          "description": "<p>When paginating backwards, are there more items?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "startCursor",
          "description": "<p>When paginating backwards, the cursor to continue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "PermissionSource",
      "kind": "objects",
      "id": "permissionsource",
      "href": "/graphql/reference/objects#permissionsource",
      "description": "<p>A level of permission and source for a user's access to a repository.</p>",
      "fields": [
        {
          "name": "organization",
          "description": "<p>The organization the repository belongs to.</p>",
          "type": "Organization!",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "permission",
          "description": "<p>The level of access this source has granted to the user.</p>",
          "type": "DefaultRepositoryPermissionField!",
          "id": "defaultrepositorypermissionfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#defaultrepositorypermissionfield"
        },
        {
          "name": "source",
          "description": "<p>The source of this permission.</p>",
          "type": "PermissionGranter!",
          "id": "permissiongranter",
          "kind": "unions",
          "href": "/graphql/reference/unions#permissiongranter"
        }
      ]
    },
    {
      "name": "PinnableItemConnection",
      "kind": "objects",
      "id": "pinnableitemconnection",
      "href": "/graphql/reference/objects#pinnableitemconnection",
      "description": "<p>The connection type for PinnableItem.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PinnableItemEdge]",
          "id": "pinnableitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PinnableItem]",
          "id": "pinnableitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#pinnableitem"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PinnableItemEdge",
      "kind": "objects",
      "id": "pinnableitemedge",
      "href": "/graphql/reference/objects#pinnableitemedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PinnableItem",
          "id": "pinnableitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#pinnableitem"
        }
      ]
    },
    {
      "name": "PinnedDiscussion",
      "kind": "objects",
      "id": "pinneddiscussion",
      "href": "/graphql/reference/objects#pinneddiscussion",
      "description": "<p>A Pinned Discussion is a discussion pinned to a repository's index page.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "discussion",
          "description": "<p>The discussion that was pinned.</p>",
          "type": "Discussion!",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion"
        },
        {
          "name": "gradientStopColors",
          "description": "<p>Color stops of the chosen gradient.</p>",
          "type": "[String!]!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pattern",
          "description": "<p>Background texture pattern.</p>",
          "type": "PinnedDiscussionPattern!",
          "id": "pinneddiscussionpattern",
          "kind": "enums",
          "href": "/graphql/reference/enums#pinneddiscussionpattern"
        },
        {
          "name": "pinnedBy",
          "description": "<p>The actor that pinned this discussion.</p>",
          "type": "Actor!",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "preconfiguredGradient",
          "description": "<p>Preconfigured background gradient option.</p>",
          "type": "PinnedDiscussionGradient",
          "id": "pinneddiscussiongradient",
          "kind": "enums",
          "href": "/graphql/reference/enums#pinneddiscussiongradient"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "PinnedDiscussionConnection",
      "kind": "objects",
      "id": "pinneddiscussionconnection",
      "href": "/graphql/reference/objects#pinneddiscussionconnection",
      "description": "<p>The connection type for PinnedDiscussion.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PinnedDiscussionEdge]",
          "id": "pinneddiscussionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinneddiscussionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PinnedDiscussion]",
          "id": "pinneddiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinneddiscussion"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PinnedDiscussionEdge",
      "kind": "objects",
      "id": "pinneddiscussionedge",
      "href": "/graphql/reference/objects#pinneddiscussionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PinnedDiscussion",
          "id": "pinneddiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinneddiscussion"
        }
      ]
    },
    {
      "name": "PinnedEvent",
      "kind": "objects",
      "id": "pinnedevent",
      "href": "/graphql/reference/objects#pinnedevent",
      "description": "<p>Represents a<code>pinned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "issue",
          "description": "<p>Identifies the issue associated with the event.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        }
      ]
    },
    {
      "name": "PinnedIssue",
      "kind": "objects",
      "id": "pinnedissue",
      "href": "/graphql/reference/objects#pinnedissue",
      "description": "<p>A Pinned Issue is a issue pinned to a repository's index page.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "fullDatabaseId",
          "description": "<p>Identifies the primary key from the database as a BigInt.</p>",
          "type": "BigInt",
          "id": "bigint",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#bigint"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "issue",
          "description": "<p>The issue that was pinned.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "pinnedBy",
          "description": "<p>The actor that pinned this issue.</p>",
          "type": "Actor!",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "repository",
          "description": "<p>The repository that this issue was pinned to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PinnedIssueConnection",
      "kind": "objects",
      "id": "pinnedissueconnection",
      "href": "/graphql/reference/objects#pinnedissueconnection",
      "description": "<p>The connection type for PinnedIssue.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PinnedIssueEdge]",
          "id": "pinnedissueedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnedissueedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PinnedIssue]",
          "id": "pinnedissue",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnedissue"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PinnedIssueEdge",
      "kind": "objects",
      "id": "pinnedissueedge",
      "href": "/graphql/reference/objects#pinnedissueedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PinnedIssue",
          "id": "pinnedissue",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnedissue"
        }
      ]
    },
    {
      "name": "PrivateRepositoryForkingDisableAuditEntry",
      "kind": "objects",
      "id": "privaterepositoryforkingdisableauditentry",
      "href": "/graphql/reference/objects#privaterepositoryforkingdisableauditentry",
      "description": "<p>Audit log entry for a private_repository_forking.disable event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "EnterpriseAuditEntryData",
          "id": "enterpriseauditentrydata",
          "href": "/graphql/reference/interfaces#enterpriseauditentrydata"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "enterpriseResourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "enterpriseSlug",
          "description": "<p>The slug of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseUrl",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "PrivateRepositoryForkingEnableAuditEntry",
      "kind": "objects",
      "id": "privaterepositoryforkingenableauditentry",
      "href": "/graphql/reference/objects#privaterepositoryforkingenableauditentry",
      "description": "<p>Audit log entry for a private_repository_forking.enable event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "EnterpriseAuditEntryData",
          "id": "enterpriseauditentrydata",
          "href": "/graphql/reference/interfaces#enterpriseauditentrydata"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "enterpriseResourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "enterpriseSlug",
          "description": "<p>The slug of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseUrl",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ProfileItemShowcase",
      "kind": "objects",
      "id": "profileitemshowcase",
      "href": "/graphql/reference/objects#profileitemshowcase",
      "description": "<p>A curatable list of repositories relating to a repository owner, which defaults\nto showing the most popular repositories they own.</p>",
      "fields": [
        {
          "name": "hasPinnedItems",
          "description": "<p>Whether or not the owner has pinned any repositories or gists.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "items",
          "description": "<p>The repositories and gists in the showcase. If the profile owner has any\npinned items, those will be returned. Otherwise, the profile owner's popular\nrepositories will be returned.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Project",
      "kind": "objects",
      "id": "project",
      "href": "/graphql/reference/objects#project",
      "description": "<p>Projects manage issues, pull requests and notes within a project owner.</p>",
      "implements": [
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        }
      ],
      "fields": [
        {
          "name": "body",
          "description": "<p>The project's description body.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The projects description body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "closed",
          "description": "<p>Indicates if the object is closed (definition of closed may depend on type).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "columns",
          "description": "<p>List of columns in the project.</p>",
          "type": "ProjectColumnConnection!",
          "id": "projectcolumnconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumnconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who originally created the project.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The project's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "number",
          "description": "<p>The project's number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "owner",
          "description": "<p>The project's owner. Currently limited to repositories, organizations, and users.</p>",
          "type": "ProjectOwner!",
          "id": "projectowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#projectowner"
        },
        {
          "name": "pendingCards",
          "description": "<p>List of pending cards in this project.</p>",
          "type": "ProjectCardConnection!",
          "id": "projectcardconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "archivedStates",
              "description": "<p>A list of archived states to filter the cards by.</p>",
              "type": {
                "name": "[ProjectCardArchivedState]",
                "id": "projectcardarchivedstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#projectcardarchivedstate"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "progress",
          "description": "<p>Project progress details.</p>",
          "type": "ProjectProgress!",
          "id": "projectprogress",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectprogress"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this project.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Whether the project is open or closed.</p>",
          "type": "ProjectState!",
          "id": "projectstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this project.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanClose",
          "description": "<p>Indicates if the object can be closed by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReopen",
          "description": "<p>Indicates if the object can be reopened by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "ProjectCard",
      "kind": "objects",
      "id": "projectcard",
      "href": "/graphql/reference/objects#projectcard",
      "description": "<p>A card in a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "column",
          "description": "<p>The project column this card is associated under. A card may only belong to one\nproject column at a time. The column field will be null if the card is created\nin a pending state and has yet to be associated with a column. Once cards are\nassociated with a column, they will not become pending in the future.</p>",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn"
        },
        {
          "name": "content",
          "description": "<p>The card content item.</p>",
          "type": "ProjectCardItem",
          "id": "projectcarditem",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectcarditem"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created this card.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isArchived",
          "description": "<p>Whether the card is archived.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "note",
          "description": "<p>The card note.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this card.</p>",
          "type": "Project!",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this card.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>The state of ProjectCard.</p>",
          "type": "ProjectCardState",
          "id": "projectcardstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectcardstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this card.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ProjectCardConnection",
      "kind": "objects",
      "id": "projectcardconnection",
      "href": "/graphql/reference/objects#projectcardconnection",
      "description": "<p>The connection type for ProjectCard.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectCardEdge]",
          "id": "projectcardedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectCard]",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectCardEdge",
      "kind": "objects",
      "id": "projectcardedge",
      "href": "/graphql/reference/objects#projectcardedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard"
        }
      ]
    },
    {
      "name": "ProjectColumn",
      "kind": "objects",
      "id": "projectcolumn",
      "href": "/graphql/reference/objects#projectcolumn",
      "description": "<p>A column inside a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "cards",
          "description": "<p>List of cards in the column.</p>",
          "type": "ProjectCardConnection!",
          "id": "projectcardconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "archivedStates",
              "description": "<p>A list of archived states to filter the cards by.</p>",
              "type": {
                "name": "[ProjectCardArchivedState]",
                "id": "projectcardarchivedstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#projectcardarchivedstate"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The project column's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this column.</p>",
          "type": "Project!",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project"
        },
        {
          "name": "purpose",
          "description": "<p>The semantic purpose of the column.</p>",
          "type": "ProjectColumnPurpose",
          "id": "projectcolumnpurpose",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectcolumnpurpose"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this project column.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this project column.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ProjectColumnConnection",
      "kind": "objects",
      "id": "projectcolumnconnection",
      "href": "/graphql/reference/objects#projectcolumnconnection",
      "description": "<p>The connection type for ProjectColumn.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectColumnEdge]",
          "id": "projectcolumnedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumnedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectColumn]",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectColumnEdge",
      "kind": "objects",
      "id": "projectcolumnedge",
      "href": "/graphql/reference/objects#projectcolumnedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn"
        }
      ]
    },
    {
      "name": "ProjectConnection",
      "kind": "objects",
      "id": "projectconnection",
      "href": "/graphql/reference/objects#projectconnection",
      "description": "<p>A list of projects associated with the owner.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectEdge]",
          "id": "projectedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Project]",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectEdge",
      "kind": "objects",
      "id": "projectedge",
      "href": "/graphql/reference/objects#projectedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project"
        }
      ]
    },
    {
      "name": "ProjectProgress",
      "kind": "objects",
      "id": "projectprogress",
      "href": "/graphql/reference/objects#projectprogress",
      "description": "<p>Project progress stats.</p>",
      "fields": [
        {
          "name": "doneCount",
          "description": "<p>The number of done cards.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "donePercentage",
          "description": "<p>The percentage of done cards.</p>",
          "type": "Float!",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "enabled",
          "description": "<p>Whether progress tracking is enabled and cards with purpose exist for this project.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "inProgressCount",
          "description": "<p>The number of in-progress cards.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "inProgressPercentage",
          "description": "<p>The percentage of in-progress cards.</p>",
          "type": "Float!",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "todoCount",
          "description": "<p>The number of to do cards.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "todoPercentage",
          "description": "<p>The percentage of to do cards.</p>",
          "type": "Float!",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        }
      ]
    },
    {
      "name": "ProjectV2",
      "kind": "objects",
      "id": "projectv2",
      "href": "/graphql/reference/objects#projectv2",
      "description": "<p>New projects that manage issues, pull requests and drafts using tables and boards.</p>",
      "implements": [
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        }
      ],
      "fields": [
        {
          "name": "closed",
          "description": "<p>Returns true if the project is closed.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who originally created the project.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "field",
          "description": "<p>A field of the project.</p>",
          "type": "ProjectV2FieldConfiguration",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration",
          "arguments": [
            {
              "name": "name",
              "description": "<p>The name of the field.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "fields",
          "description": "<p>List of fields and their constraints in the project.</p>",
          "type": "ProjectV2FieldConfigurationConnection!",
          "id": "projectv2fieldconfigurationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2fieldconfigurationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for project v2 fields returned from the connection.</p>",
              "type": {
                "name": "ProjectV2FieldOrder",
                "id": "projectv2fieldorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2fieldorder"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "items",
          "description": "<p>List of items in the project.</p>",
          "type": "ProjectV2ItemConnection!",
          "id": "projectv2itemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2itemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for project v2 items returned from the connection.</p>",
              "type": {
                "name": "ProjectV2ItemOrder",
                "id": "projectv2itemorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2itemorder"
              }
            }
          ]
        },
        {
          "name": "number",
          "description": "<p>The project's number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "owner",
          "description": "<p>The project's owner. Currently limited to organizations and users.</p>",
          "type": "ProjectV2Owner!",
          "id": "projectv2owner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#projectv2owner"
        },
        {
          "name": "public",
          "description": "<p>Returns true if the project is public.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "readme",
          "description": "<p>The project's readme.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositories",
          "description": "<p>The repositories the project is linked to.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this project.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "shortDescription",
          "description": "<p>The project's short description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teams",
          "description": "<p>The teams the project is linked to.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for teams returned from this connection.</p>",
              "type": {
                "name": "TeamOrder",
                "id": "teamorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#teamorder"
              }
            }
          ]
        },
        {
          "name": "template",
          "description": "<p>Returns true if this project is a template.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "title",
          "description": "<p>The project's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this project.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "view",
          "description": "<p>A view of the project.</p>",
          "type": "ProjectV2View",
          "id": "projectv2view",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2view",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number of a view belonging to the project.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanClose",
          "description": "<p>Indicates if the object can be closed by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReopen",
          "description": "<p>Indicates if the object can be reopened by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "views",
          "description": "<p>List of views in the project.</p>",
          "type": "ProjectV2ViewConnection!",
          "id": "projectv2viewconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2viewconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for project v2 views returned from the connection.</p>",
              "type": {
                "name": "ProjectV2ViewOrder",
                "id": "projectv2vieworder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2vieworder"
              }
            }
          ]
        },
        {
          "name": "workflow",
          "description": "<p>A workflow of the project.</p>",
          "type": "ProjectV2Workflow",
          "id": "projectv2workflow",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2workflow",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number of a workflow belonging to the project.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "workflows",
          "description": "<p>List of the workflows in the project.</p>",
          "type": "ProjectV2WorkflowConnection!",
          "id": "projectv2workflowconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2workflowconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for project v2 workflows returned from the connection.</p>",
              "type": {
                "name": "ProjectV2WorkflowOrder",
                "id": "projectv2workfloworder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2workfloworder"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ProjectV2ActorConnection",
      "kind": "objects",
      "id": "projectv2actorconnection",
      "href": "/graphql/reference/objects#projectv2actorconnection",
      "description": "<p>The connection type for ProjectV2Actor.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2ActorEdge]",
          "id": "projectv2actoredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2actoredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2Actor]",
          "id": "projectv2actor",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2actor"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2ActorEdge",
      "kind": "objects",
      "id": "projectv2actoredge",
      "href": "/graphql/reference/objects#projectv2actoredge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2Actor",
          "id": "projectv2actor",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2actor"
        }
      ]
    },
    {
      "name": "ProjectV2Connection",
      "kind": "objects",
      "id": "projectv2connection",
      "href": "/graphql/reference/objects#projectv2connection",
      "description": "<p>The connection type for ProjectV2.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2Edge]",
          "id": "projectv2edge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2edge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2]",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2Edge",
      "kind": "objects",
      "id": "projectv2edge",
      "href": "/graphql/reference/objects#projectv2edge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2"
        }
      ]
    },
    {
      "name": "ProjectV2Field",
      "kind": "objects",
      "id": "projectv2field",
      "href": "/graphql/reference/objects#projectv2field",
      "description": "<p>A field inside a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2FieldCommon",
          "id": "projectv2fieldcommon",
          "href": "/graphql/reference/interfaces#projectv2fieldcommon"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "dataType",
          "description": "<p>The field's type.</p>",
          "type": "ProjectV2FieldType!",
          "id": "projectv2fieldtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2fieldtype"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The project field's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this field.</p>",
          "type": "ProjectV2!",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2FieldConfigurationConnection",
      "kind": "objects",
      "id": "projectv2fieldconfigurationconnection",
      "href": "/graphql/reference/objects#projectv2fieldconfigurationconnection",
      "description": "<p>The connection type for ProjectV2FieldConfiguration.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2FieldConfigurationEdge]",
          "id": "projectv2fieldconfigurationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2fieldconfigurationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2FieldConfiguration]",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2FieldConfigurationEdge",
      "kind": "objects",
      "id": "projectv2fieldconfigurationedge",
      "href": "/graphql/reference/objects#projectv2fieldconfigurationedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2FieldConfiguration",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        }
      ]
    },
    {
      "name": "ProjectV2FieldConnection",
      "kind": "objects",
      "id": "projectv2fieldconnection",
      "href": "/graphql/reference/objects#projectv2fieldconnection",
      "description": "<p>The connection type for ProjectV2Field.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2FieldEdge]",
          "id": "projectv2fieldedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2fieldedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2Field]",
          "id": "projectv2field",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2field"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2FieldEdge",
      "kind": "objects",
      "id": "projectv2fieldedge",
      "href": "/graphql/reference/objects#projectv2fieldedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2Field",
          "id": "projectv2field",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2field"
        }
      ]
    },
    {
      "name": "ProjectV2Item",
      "kind": "objects",
      "id": "projectv2item",
      "href": "/graphql/reference/objects#projectv2item",
      "description": "<p>An item within a Project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "content",
          "description": "<p>The content of the referenced draft issue, issue, or pull request.</p>",
          "type": "ProjectV2ItemContent",
          "id": "projectv2itemcontent",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2itemcontent"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created the item.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "fieldValueByName",
          "description": "<p>The field value of the first project field which matches the<code>name</code>argument that is set on the item.</p>",
          "type": "ProjectV2ItemFieldValue",
          "id": "projectv2itemfieldvalue",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2itemfieldvalue",
          "arguments": [
            {
              "name": "name",
              "description": "<p>The name of the field to return the field value of.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "fieldValues",
          "description": "<p>The field values that are set on the item.</p>",
          "type": "ProjectV2ItemFieldValueConnection!",
          "id": "projectv2itemfieldvalueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2itemfieldvalueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for project v2 item field values returned from the connection.</p>",
              "type": {
                "name": "ProjectV2ItemFieldValueOrder",
                "id": "projectv2itemfieldvalueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2itemfieldvalueorder"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isArchived",
          "description": "<p>Whether the item is archived.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this item.</p>",
          "type": "ProjectV2!",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2"
        },
        {
          "name": "type",
          "description": "<p>The type of the item.</p>",
          "type": "ProjectV2ItemType!",
          "id": "projectv2itemtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2itemtype"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2ItemConnection",
      "kind": "objects",
      "id": "projectv2itemconnection",
      "href": "/graphql/reference/objects#projectv2itemconnection",
      "description": "<p>The connection type for ProjectV2Item.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2ItemEdge]",
          "id": "projectv2itemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2itemedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2Item]",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2ItemEdge",
      "kind": "objects",
      "id": "projectv2itemedge",
      "href": "/graphql/reference/objects#projectv2itemedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2Item",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldDateValue",
      "kind": "objects",
      "id": "projectv2itemfielddatevalue",
      "href": "/graphql/reference/objects#projectv2itemfielddatevalue",
      "description": "<p>The value of a date field in a Project item.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2ItemFieldValueCommon",
          "id": "projectv2itemfieldvaluecommon",
          "href": "/graphql/reference/interfaces#projectv2itemfieldvaluecommon"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created the item.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "date",
          "description": "<p>Date value for the field.</p>",
          "type": "Date",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "field",
          "description": "<p>The project field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "item",
          "description": "<p>The project item that contains this value.</p>",
          "type": "ProjectV2Item!",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldIterationValue",
      "kind": "objects",
      "id": "projectv2itemfielditerationvalue",
      "href": "/graphql/reference/objects#projectv2itemfielditerationvalue",
      "description": "<p>The value of an iteration field in a Project item.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2ItemFieldValueCommon",
          "id": "projectv2itemfieldvaluecommon",
          "href": "/graphql/reference/interfaces#projectv2itemfieldvaluecommon"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created the item.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "duration",
          "description": "<p>The duration of the iteration in days.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "field",
          "description": "<p>The project field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "item",
          "description": "<p>The project item that contains this value.</p>",
          "type": "ProjectV2Item!",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item"
        },
        {
          "name": "iterationId",
          "description": "<p>The ID of the iteration.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "startDate",
          "description": "<p>The start date of the iteration.</p>",
          "type": "Date!",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "title",
          "description": "<p>The title of the iteration.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "titleHTML",
          "description": "<p>The title of the iteration, with HTML.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldLabelValue",
      "kind": "objects",
      "id": "projectv2itemfieldlabelvalue",
      "href": "/graphql/reference/objects#projectv2itemfieldlabelvalue",
      "description": "<p>The value of the labels field in a Project item.</p>",
      "fields": [
        {
          "name": "field",
          "description": "<p>The field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "labels",
          "description": "<p>Labels value of a field.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldMilestoneValue",
      "kind": "objects",
      "id": "projectv2itemfieldmilestonevalue",
      "href": "/graphql/reference/objects#projectv2itemfieldmilestonevalue",
      "description": "<p>The value of a milestone field in a Project item.</p>",
      "fields": [
        {
          "name": "field",
          "description": "<p>The field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "milestone",
          "description": "<p>Milestone value of a field.</p>",
          "type": "Milestone",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldNumberValue",
      "kind": "objects",
      "id": "projectv2itemfieldnumbervalue",
      "href": "/graphql/reference/objects#projectv2itemfieldnumbervalue",
      "description": "<p>The value of a number field in a Project item.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2ItemFieldValueCommon",
          "id": "projectv2itemfieldvaluecommon",
          "href": "/graphql/reference/interfaces#projectv2itemfieldvaluecommon"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created the item.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "field",
          "description": "<p>The project field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "item",
          "description": "<p>The project item that contains this value.</p>",
          "type": "ProjectV2Item!",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item"
        },
        {
          "name": "number",
          "description": "<p>Number as a float(8).</p>",
          "type": "Float",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldPullRequestValue",
      "kind": "objects",
      "id": "projectv2itemfieldpullrequestvalue",
      "href": "/graphql/reference/objects#projectv2itemfieldpullrequestvalue",
      "description": "<p>The value of a pull request field in a Project item.</p>",
      "fields": [
        {
          "name": "field",
          "description": "<p>The field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "pullRequests",
          "description": "<p>The pull requests for this field.</p>",
          "type": "PullRequestConnection",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests.</p>",
              "type": {
                "name": "PullRequestOrder",
                "id": "pullrequestorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#pullrequestorder"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldRepositoryValue",
      "kind": "objects",
      "id": "projectv2itemfieldrepositoryvalue",
      "href": "/graphql/reference/objects#projectv2itemfieldrepositoryvalue",
      "description": "<p>The value of a repository field in a Project item.</p>",
      "fields": [
        {
          "name": "field",
          "description": "<p>The field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "repository",
          "description": "<p>The repository for this field.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldReviewerValue",
      "kind": "objects",
      "id": "projectv2itemfieldreviewervalue",
      "href": "/graphql/reference/objects#projectv2itemfieldreviewervalue",
      "description": "<p>The value of a reviewers field in a Project item.</p>",
      "fields": [
        {
          "name": "field",
          "description": "<p>The field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "reviewers",
          "description": "<p>The reviewers for this field.</p>",
          "type": "RequestedReviewerConnection",
          "id": "requestedreviewerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#requestedreviewerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldSingleSelectValue",
      "kind": "objects",
      "id": "projectv2itemfieldsingleselectvalue",
      "href": "/graphql/reference/objects#projectv2itemfieldsingleselectvalue",
      "description": "<p>The value of a single select field in a Project item.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2ItemFieldValueCommon",
          "id": "projectv2itemfieldvaluecommon",
          "href": "/graphql/reference/interfaces#projectv2itemfieldvaluecommon"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created the item.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "field",
          "description": "<p>The project field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "item",
          "description": "<p>The project item that contains this value.</p>",
          "type": "ProjectV2Item!",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item"
        },
        {
          "name": "name",
          "description": "<p>The name of the selected single select option.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameHTML",
          "description": "<p>The html name of the selected single select option.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "optionId",
          "description": "<p>The id of the selected single select option.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldTextValue",
      "kind": "objects",
      "id": "projectv2itemfieldtextvalue",
      "href": "/graphql/reference/objects#projectv2itemfieldtextvalue",
      "description": "<p>The value of a text field in a Project item.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2ItemFieldValueCommon",
          "id": "projectv2itemfieldvaluecommon",
          "href": "/graphql/reference/interfaces#projectv2itemfieldvaluecommon"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created the item.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "field",
          "description": "<p>The project field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "item",
          "description": "<p>The project item that contains this value.</p>",
          "type": "ProjectV2Item!",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item"
        },
        {
          "name": "text",
          "description": "<p>Text value of a field.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldUserValue",
      "kind": "objects",
      "id": "projectv2itemfielduservalue",
      "href": "/graphql/reference/objects#projectv2itemfielduservalue",
      "description": "<p>The value of a user field in a Project item.</p>",
      "fields": [
        {
          "name": "field",
          "description": "<p>The field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "users",
          "description": "<p>The users for this field.</p>",
          "type": "UserConnection",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldValueConnection",
      "kind": "objects",
      "id": "projectv2itemfieldvalueconnection",
      "href": "/graphql/reference/objects#projectv2itemfieldvalueconnection",
      "description": "<p>The connection type for ProjectV2ItemFieldValue.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2ItemFieldValueEdge]",
          "id": "projectv2itemfieldvalueedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2itemfieldvalueedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2ItemFieldValue]",
          "id": "projectv2itemfieldvalue",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2itemfieldvalue"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldValueEdge",
      "kind": "objects",
      "id": "projectv2itemfieldvalueedge",
      "href": "/graphql/reference/objects#projectv2itemfieldvalueedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2ItemFieldValue",
          "id": "projectv2itemfieldvalue",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2itemfieldvalue"
        }
      ]
    },
    {
      "name": "ProjectV2IterationField",
      "kind": "objects",
      "id": "projectv2iterationfield",
      "href": "/graphql/reference/objects#projectv2iterationfield",
      "description": "<p>An iteration field inside a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2FieldCommon",
          "id": "projectv2fieldcommon",
          "href": "/graphql/reference/interfaces#projectv2fieldcommon"
        }
      ],
      "fields": [
        {
          "name": "configuration",
          "description": "<p>Iteration configuration settings.</p>",
          "type": "ProjectV2IterationFieldConfiguration!",
          "id": "projectv2iterationfieldconfiguration",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2iterationfieldconfiguration"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "dataType",
          "description": "<p>The field's type.</p>",
          "type": "ProjectV2FieldType!",
          "id": "projectv2fieldtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2fieldtype"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The project field's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this field.</p>",
          "type": "ProjectV2!",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2IterationFieldConfiguration",
      "kind": "objects",
      "id": "projectv2iterationfieldconfiguration",
      "href": "/graphql/reference/objects#projectv2iterationfieldconfiguration",
      "description": "<p>Iteration field configuration for a project.</p>",
      "fields": [
        {
          "name": "completedIterations",
          "description": "<p>The iteration's completed iterations.</p>",
          "type": "[ProjectV2IterationFieldIteration!]!",
          "id": "projectv2iterationfielditeration",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2iterationfielditeration"
        },
        {
          "name": "duration",
          "description": "<p>The iteration's duration in days.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "iterations",
          "description": "<p>The iteration's iterations.</p>",
          "type": "[ProjectV2IterationFieldIteration!]!",
          "id": "projectv2iterationfielditeration",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2iterationfielditeration"
        },
        {
          "name": "startDay",
          "description": "<p>The iteration's start day of the week.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2IterationFieldIteration",
      "kind": "objects",
      "id": "projectv2iterationfielditeration",
      "href": "/graphql/reference/objects#projectv2iterationfielditeration",
      "description": "<p>Iteration field iteration settings for a project.</p>",
      "fields": [
        {
          "name": "duration",
          "description": "<p>The iteration's duration in days.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "<p>The iteration's ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "startDate",
          "description": "<p>The iteration's start date.</p>",
          "type": "Date!",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "title",
          "description": "<p>The iteration's title.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "titleHTML",
          "description": "<p>The iteration's html title.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ProjectV2SingleSelectField",
      "kind": "objects",
      "id": "projectv2singleselectfield",
      "href": "/graphql/reference/objects#projectv2singleselectfield",
      "description": "<p>A single select field inside a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2FieldCommon",
          "id": "projectv2fieldcommon",
          "href": "/graphql/reference/interfaces#projectv2fieldcommon"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "dataType",
          "description": "<p>The field's type.</p>",
          "type": "ProjectV2FieldType!",
          "id": "projectv2fieldtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2fieldtype"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The project field's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "options",
          "description": "<p>Options for the single select field.</p>",
          "type": "[ProjectV2SingleSelectFieldOption!]!",
          "id": "projectv2singleselectfieldoption",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2singleselectfieldoption",
          "arguments": [
            {
              "name": "names",
              "description": "<p>Filter returned options to only those matching these names, case insensitive.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "project",
          "description": "<p>The project that contains this field.</p>",
          "type": "ProjectV2!",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2SingleSelectFieldOption",
      "kind": "objects",
      "id": "projectv2singleselectfieldoption",
      "href": "/graphql/reference/objects#projectv2singleselectfieldoption",
      "description": "<p>Single select field option for a configuration for a project.</p>",
      "fields": [
        {
          "name": "id",
          "description": "<p>The option's ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The option's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameHTML",
          "description": "<p>The option's html name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ProjectV2SortBy",
      "kind": "objects",
      "id": "projectv2sortby",
      "href": "/graphql/reference/objects#projectv2sortby",
      "description": "<p>Represents a sort by field and direction.</p>",
      "fields": [
        {
          "name": "direction",
          "description": "<p>The direction of the sorting. Possible values are ASC and DESC.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which items are sorted.</p>",
          "type": "ProjectV2Field!",
          "id": "projectv2field",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2field"
        }
      ]
    },
    {
      "name": "ProjectV2SortByConnection",
      "kind": "objects",
      "id": "projectv2sortbyconnection",
      "href": "/graphql/reference/objects#projectv2sortbyconnection",
      "description": "<p>The connection type for ProjectV2SortBy.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2SortByEdge]",
          "id": "projectv2sortbyedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2sortbyedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2SortBy]",
          "id": "projectv2sortby",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2sortby"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2SortByEdge",
      "kind": "objects",
      "id": "projectv2sortbyedge",
      "href": "/graphql/reference/objects#projectv2sortbyedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2SortBy",
          "id": "projectv2sortby",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2sortby"
        }
      ]
    },
    {
      "name": "ProjectV2SortByField",
      "kind": "objects",
      "id": "projectv2sortbyfield",
      "href": "/graphql/reference/objects#projectv2sortbyfield",
      "description": "<p>Represents a sort by field and direction.</p>",
      "fields": [
        {
          "name": "direction",
          "description": "<p>The direction of the sorting. Possible values are ASC and DESC.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which items are sorted.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        }
      ]
    },
    {
      "name": "ProjectV2SortByFieldConnection",
      "kind": "objects",
      "id": "projectv2sortbyfieldconnection",
      "href": "/graphql/reference/objects#projectv2sortbyfieldconnection",
      "description": "<p>The connection type for ProjectV2SortByField.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2SortByFieldEdge]",
          "id": "projectv2sortbyfieldedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2sortbyfieldedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2SortByField]",
          "id": "projectv2sortbyfield",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2sortbyfield"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2SortByFieldEdge",
      "kind": "objects",
      "id": "projectv2sortbyfieldedge",
      "href": "/graphql/reference/objects#projectv2sortbyfieldedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2SortByField",
          "id": "projectv2sortbyfield",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2sortbyfield"
        }
      ]
    },
    {
      "name": "ProjectV2View",
      "kind": "objects",
      "id": "projectv2view",
      "href": "/graphql/reference/objects#projectv2view",
      "description": "<p>A view within a ProjectV2.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "fields",
          "description": "<p>The view's visible fields.</p>",
          "type": "ProjectV2FieldConfigurationConnection",
          "id": "projectv2fieldconfigurationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2fieldconfigurationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the project v2 fields returned from the connection.</p>",
              "type": {
                "name": "ProjectV2FieldOrder",
                "id": "projectv2fieldorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2fieldorder"
              }
            }
          ]
        },
        {
          "name": "filter",
          "description": "<p>The project view's filter.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "groupBy",
          "description": "<p>The view's group-by field.</p>",
          "type": "ProjectV2FieldConnection",
          "id": "projectv2fieldconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2fieldconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the project v2 fields returned from the connection.</p>",
              "type": {
                "name": "ProjectV2FieldOrder",
                "id": "projectv2fieldorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2fieldorder"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p>The <code>ProjectV2View#order_by</code> API is deprecated in favour of the more capable <code>ProjectV2View#group_by_field</code> API. Check out the <code>ProjectV2View#group_by_fields</code> API as an example for the more capable alternative. Removal on 2023-04-01 UTC.</p>"
        },
        {
          "name": "groupByFields",
          "description": "<p>The view's group-by field.</p>",
          "type": "ProjectV2FieldConfigurationConnection",
          "id": "projectv2fieldconfigurationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2fieldconfigurationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the project v2 fields returned from the connection.</p>",
              "type": {
                "name": "ProjectV2FieldOrder",
                "id": "projectv2fieldorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2fieldorder"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "layout",
          "description": "<p>The project view's layout.</p>",
          "type": "ProjectV2ViewLayout!",
          "id": "projectv2viewlayout",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2viewlayout"
        },
        {
          "name": "name",
          "description": "<p>The project view's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "number",
          "description": "<p>The project view's number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this view.</p>",
          "type": "ProjectV2!",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2"
        },
        {
          "name": "sortBy",
          "description": "<p>The view's sort-by config.</p>",
          "type": "ProjectV2SortByConnection",
          "id": "projectv2sortbyconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2sortbyconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p>The <code>ProjectV2View#sort_by</code> API is deprecated in favour of the more capable <code>ProjectV2View#sort_by_fields</code> API. Check out the <code>ProjectV2View#sort_by_fields</code> API as an example for the more capable alternative. Removal on 2023-04-01 UTC.</p>"
        },
        {
          "name": "sortByFields",
          "description": "<p>The view's sort-by config.</p>",
          "type": "ProjectV2SortByFieldConnection",
          "id": "projectv2sortbyfieldconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2sortbyfieldconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "verticalGroupBy",
          "description": "<p>The view's vertical-group-by field.</p>",
          "type": "ProjectV2FieldConnection",
          "id": "projectv2fieldconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2fieldconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the project v2 fields returned from the connection.</p>",
              "type": {
                "name": "ProjectV2FieldOrder",
                "id": "projectv2fieldorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2fieldorder"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p>The <code>ProjectV2View#vertical_group_by</code> API is deprecated in favour of the more capable <code>ProjectV2View#vertical_group_by_fields</code> API. Check out the <code>ProjectV2View#vertical_group_by_fields</code> API as an example for the more capable alternative. Removal on 2023-04-01 UTC.</p>"
        },
        {
          "name": "verticalGroupByFields",
          "description": "<p>The view's vertical-group-by field.</p>",
          "type": "ProjectV2FieldConfigurationConnection",
          "id": "projectv2fieldconfigurationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2fieldconfigurationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the project v2 fields returned from the connection.</p>",
              "type": {
                "name": "ProjectV2FieldOrder",
                "id": "projectv2fieldorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2fieldorder"
              }
            }
          ]
        },
        {
          "name": "visibleFields",
          "description": "<p>The view's visible fields.</p>",
          "type": "ProjectV2FieldConnection",
          "id": "projectv2fieldconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2fieldconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the project v2 fields returned from the connection.</p>",
              "type": {
                "name": "ProjectV2FieldOrder",
                "id": "projectv2fieldorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2fieldorder"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p>The <code>ProjectV2View#visibleFields</code> API is deprecated in favour of the more capable <code>ProjectV2View#fields</code> API. Check out the <code>ProjectV2View#fields</code> API as an example for the more capable alternative. Removal on 2023-01-01 UTC.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2ViewConnection",
      "kind": "objects",
      "id": "projectv2viewconnection",
      "href": "/graphql/reference/objects#projectv2viewconnection",
      "description": "<p>The connection type for ProjectV2View.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2ViewEdge]",
          "id": "projectv2viewedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2viewedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2View]",
          "id": "projectv2view",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2view"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2ViewEdge",
      "kind": "objects",
      "id": "projectv2viewedge",
      "href": "/graphql/reference/objects#projectv2viewedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2View",
          "id": "projectv2view",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2view"
        }
      ]
    },
    {
      "name": "ProjectV2Workflow",
      "kind": "objects",
      "id": "projectv2workflow",
      "href": "/graphql/reference/objects#projectv2workflow",
      "description": "<p>A workflow inside a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "enabled",
          "description": "<p>The workflows' enabled state.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The workflows' name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "number",
          "description": "<p>The workflows' number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this workflow.</p>",
          "type": "ProjectV2!",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2WorkflowConnection",
      "kind": "objects",
      "id": "projectv2workflowconnection",
      "href": "/graphql/reference/objects#projectv2workflowconnection",
      "description": "<p>The connection type for ProjectV2Workflow.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectV2WorkflowEdge]",
          "id": "projectv2workflowedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2workflowedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectV2Workflow]",
          "id": "projectv2workflow",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2workflow"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectV2WorkflowEdge",
      "kind": "objects",
      "id": "projectv2workflowedge",
      "href": "/graphql/reference/objects#projectv2workflowedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectV2Workflow",
          "id": "projectv2workflow",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2workflow"
        }
      ]
    },
    {
      "name": "PublicKey",
      "kind": "objects",
      "id": "publickey",
      "href": "/graphql/reference/objects#publickey",
      "description": "<p>A user's public key.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "accessedAt",
          "description": "<p>The last time this authorization was used to perform an action. Values will be null for keys not owned by the user.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the key was created. Keys created before\nMarch 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "fingerprint",
          "description": "<p>The fingerprint for this PublicKey.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isReadOnly",
          "description": "<p>Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "key",
          "description": "<p>The public key string.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the key was updated. Keys created before\nMarch 5th, 2014 may have inaccurate values. Values will be null for keys not\nowned by the user.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "PublicKeyConnection",
      "kind": "objects",
      "id": "publickeyconnection",
      "href": "/graphql/reference/objects#publickeyconnection",
      "description": "<p>The connection type for PublicKey.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PublicKeyEdge]",
          "id": "publickeyedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#publickeyedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PublicKey]",
          "id": "publickey",
          "kind": "objects",
          "href": "/graphql/reference/objects#publickey"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PublicKeyEdge",
      "kind": "objects",
      "id": "publickeyedge",
      "href": "/graphql/reference/objects#publickeyedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PublicKey",
          "id": "publickey",
          "kind": "objects",
          "href": "/graphql/reference/objects#publickey"
        }
      ]
    },
    {
      "name": "PullRequest",
      "kind": "objects",
      "id": "pullrequest",
      "href": "/graphql/reference/objects#pullrequest",
      "description": "<p>A repository pull request.</p>",
      "implements": [
        {
          "name": "Assignable",
          "id": "assignable",
          "href": "/graphql/reference/interfaces#assignable"
        },
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Labelable",
          "id": "labelable",
          "href": "/graphql/reference/interfaces#labelable"
        },
        {
          "name": "Lockable",
          "id": "lockable",
          "href": "/graphql/reference/interfaces#lockable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectV2Owner",
          "id": "projectv2owner",
          "href": "/graphql/reference/interfaces#projectv2owner"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "activeLockReason",
          "description": "<p>Reason that the conversation was locked.</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "additions",
          "description": "<p>The number of additions in this pull request.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "assignees",
          "description": "<p>A list of Users assigned to this object.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "autoMergeRequest",
          "description": "<p>Returns the auto-merge request object if one exists for this pull request.</p>",
          "type": "AutoMergeRequest",
          "id": "automergerequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#automergerequest"
        },
        {
          "name": "baseRef",
          "description": "<p>Identifies the base Ref associated with the pull request.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "baseRefName",
          "description": "<p>Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "baseRefOid",
          "description": "<p>Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "baseRepository",
          "description": "<p>The repository associated with this pull request's base Ref.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "canBeRebased",
          "description": "<p>Whether or not the pull request is rebaseable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "isDeprecated": false,
          "preview": {
            "title": "Merge info preview more detailed information about a pull request's merge state preview",
            "description": "This preview adds support for accessing fields that provide more detailed information about a pull request's merge state.",
            "toggled_by": "merge-info-preview",
            "toggled_on": [
              "PullRequest.canBeRebased",
              "PullRequest.mergeStateStatus"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.merge-info-preview+json",
            "href": "/graphql/overview/schema-previews#merge-info-preview-more-detailed-information-about-a-pull-requests-merge-state-preview"
          }
        },
        {
          "name": "changedFiles",
          "description": "<p>The number of changed files in this pull request.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "checksResourcePath",
          "description": "<p>The HTTP path for the checks of this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "checksUrl",
          "description": "<p>The HTTP URL for the checks of this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "closed",
          "description": "<p><code>true</code> if the pull request is closed.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "closingIssuesReferences",
          "description": "<p>List of issues that were may be closed by this pull request.</p>",
          "type": "IssueConnection",
          "id": "issueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "userLinkedOnly",
              "defaultValue": false,
              "description": "<p>Return only manually linked Issues.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "comments",
          "description": "<p>A list of comments associated with the pull request.</p>",
          "type": "IssueCommentConnection!",
          "id": "issuecommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issue comments returned from the connection.</p>",
              "type": {
                "name": "IssueCommentOrder",
                "id": "issuecommentorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issuecommentorder"
              }
            }
          ]
        },
        {
          "name": "commits",
          "description": "<p>A list of commits present in this pull request's head branch not present in the base branch.</p>",
          "type": "PullRequestCommitConnection!",
          "id": "pullrequestcommitconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommitconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deletions",
          "description": "<p>The number of deletions in this pull request.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited this pull request's body.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "files",
          "description": "<p>Lists the files changed within this pull request.</p>",
          "type": "PullRequestChangedFileConnection",
          "id": "pullrequestchangedfileconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestchangedfileconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "headRef",
          "description": "<p>Identifies the head Ref associated with the pull request.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "headRefName",
          "description": "<p>Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "headRefOid",
          "description": "<p>Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "headRepository",
          "description": "<p>The repository associated with this pull request's head Ref.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "headRepositoryOwner",
          "description": "<p>The owner of the repository associated with this pull request's head Ref.</p>",
          "type": "RepositoryOwner",
          "id": "repositoryowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "hovercard",
          "description": "<p>The hovercard information for this issue.</p>",
          "type": "Hovercard!",
          "id": "hovercard",
          "kind": "objects",
          "href": "/graphql/reference/objects#hovercard",
          "arguments": [
            {
              "name": "includeNotificationContexts",
              "defaultValue": true,
              "description": "<p>Whether or not to include notification contexts.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>The head and base repositories are different.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isDraft",
          "description": "<p>Identifies if the pull request is a draft.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isReadByViewer",
          "description": "<p>Is this pull request read by the viewer.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "labels",
          "description": "<p>A list of labels associated with the object.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for labels returned from the connection.</p>",
              "type": {
                "name": "LabelOrder",
                "id": "labelorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#labelorder"
              }
            }
          ]
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "latestOpinionatedReviews",
          "description": "<p>A list of latest reviews per user associated with the pull request.</p>",
          "type": "PullRequestReviewConnection",
          "id": "pullrequestreviewconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "writersOnly",
              "defaultValue": false,
              "description": "<p>Only return reviews from user who have write access to the repository.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "latestReviews",
          "description": "<p>A list of latest reviews per user associated with the pull request that are not also pending review.</p>",
          "type": "PullRequestReviewConnection",
          "id": "pullrequestreviewconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "locked",
          "description": "<p><code>true</code> if the pull request is locked.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "maintainerCanModify",
          "description": "<p>Indicates whether maintainers can modify the pull request.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "mergeCommit",
          "description": "<p>The commit that was created when this pull request was merged.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "mergeStateStatus",
          "description": "<p>Detailed information about the current pull request merge state status.</p>",
          "type": "MergeStateStatus!",
          "id": "mergestatestatus",
          "kind": "enums",
          "href": "/graphql/reference/enums#mergestatestatus",
          "isDeprecated": false,
          "preview": {
            "title": "Merge info preview more detailed information about a pull request's merge state preview",
            "description": "This preview adds support for accessing fields that provide more detailed information about a pull request's merge state.",
            "toggled_by": "merge-info-preview",
            "toggled_on": [
              "PullRequest.canBeRebased",
              "PullRequest.mergeStateStatus"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.merge-info-preview+json",
            "href": "/graphql/overview/schema-previews#merge-info-preview-more-detailed-information-about-a-pull-requests-merge-state-preview"
          }
        },
        {
          "name": "mergeable",
          "description": "<p>Whether or not the pull request can be merged based on the existence of merge conflicts.</p>",
          "type": "MergeableState!",
          "id": "mergeablestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#mergeablestate"
        },
        {
          "name": "merged",
          "description": "<p>Whether or not the pull request was merged.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "mergedAt",
          "description": "<p>The date and time that the pull request was merged.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "mergedBy",
          "description": "<p>The actor who merged the pull request.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "milestone",
          "description": "<p>Identifies the milestone associated with the pull request.</p>",
          "type": "Milestone",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone"
        },
        {
          "name": "number",
          "description": "<p>Identifies the pull request number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "participants",
          "description": "<p>A list of Users that are participating in the Pull Request conversation.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "permalink",
          "description": "<p>The permalink to the pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "potentialMergeCommit",
          "description": "<p>The commit that GitHub automatically generated to test if this pull request\ncould be merged. This field will not return a value if the pull request is\nmerged, or if the test merge commit is still being generated. See the\n<code>mergeable</code> field for more details on the mergeability of the pull request.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "projectCards",
          "description": "<p>List of project cards associated with this pull request.</p>",
          "type": "ProjectCardConnection!",
          "id": "projectcardconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "archivedStates",
              "description": "<p>A list of archived states to filter the cards by.</p>",
              "type": {
                "name": "[ProjectCardArchivedState]",
                "id": "projectcardarchivedstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#projectcardarchivedstate"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projectV2",
          "description": "<p>Find a project by number.</p>",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projectsV2",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>How to order the returned projects.</p>",
              "type": {
                "name": "ProjectV2Order",
                "id": "projectv2order",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2order"
              }
            },
            {
              "name": "query",
              "description": "<p>A project to search for under the the owner.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "revertResourcePath",
          "description": "<p>The HTTP path for reverting this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "revertUrl",
          "description": "<p>The HTTP URL for reverting this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "reviewDecision",
          "description": "<p>The current status of this pull request with respect to code review.</p>",
          "type": "PullRequestReviewDecision",
          "id": "pullrequestreviewdecision",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewdecision"
        },
        {
          "name": "reviewRequests",
          "description": "<p>A list of review requests associated with the pull request.</p>",
          "type": "ReviewRequestConnection",
          "id": "reviewrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "reviewThreads",
          "description": "<p>The list of all review threads for this pull request.</p>",
          "type": "PullRequestReviewThreadConnection!",
          "id": "pullrequestreviewthreadconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthreadconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "reviews",
          "description": "<p>A list of reviews associated with the pull request.</p>",
          "type": "PullRequestReviewConnection",
          "id": "pullrequestreviewconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "author",
              "description": "<p>Filter by author of the review.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the reviews.</p>",
              "type": {
                "name": "[PullRequestReviewState!]",
                "id": "pullrequestreviewstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequestreviewstate"
              }
            }
          ]
        },
        {
          "name": "state",
          "description": "<p>Identifies the state of the pull request.</p>",
          "type": "PullRequestState!",
          "id": "pullrequeststate",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequeststate"
        },
        {
          "name": "suggestedReviewers",
          "description": "<p>A list of reviewer suggestions based on commit history and past review comments.</p>",
          "type": "[SuggestedReviewer]!",
          "id": "suggestedreviewer",
          "kind": "objects",
          "href": "/graphql/reference/objects#suggestedreviewer"
        },
        {
          "name": "timeline",
          "description": "<p>A list of events, comments, commits, etc. associated with the pull request.</p>",
          "type": "PullRequestTimelineConnection!",
          "id": "pullrequesttimelineconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequesttimelineconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "since",
              "description": "<p>Allows filtering timeline events by a <code>since</code> timestamp.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#datetime"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p><code>timeline</code> will be removed Use PullRequest.timelineItems instead. Removal on 2020-10-01 UTC.</p>"
        },
        {
          "name": "timelineItems",
          "description": "<p>A list of events, comments, commits, etc. associated with the pull request.</p>",
          "type": "PullRequestTimelineItemsConnection!",
          "id": "pullrequesttimelineitemsconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequesttimelineitemsconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "itemTypes",
              "description": "<p>Filter timeline items by type.</p>",
              "type": {
                "name": "[PullRequestTimelineItemsItemType!]",
                "id": "pullrequesttimelineitemsitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequesttimelineitemsitemtype"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "since",
              "description": "<p>Filter timeline items by a <code>since</code> timestamp.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#datetime"
              }
            },
            {
              "name": "skip",
              "description": "<p>Skips the first <em>n</em> elements in the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "title",
          "description": "<p>Identifies the pull request title.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "titleHTML",
          "description": "<p>Identifies the pull request title rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "totalCommentsCount",
          "description": "<p>Returns a count of how many comments this pull request has received.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanApplySuggestion",
          "description": "<p>Whether or not the viewer can apply suggestion.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanClose",
          "description": "<p>Indicates if the object can be closed by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanDeleteHeadRef",
          "description": "<p>Check if the viewer can restore the deleted head ref.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanDisableAutoMerge",
          "description": "<p>Whether or not the viewer can disable auto-merge.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanEditFiles",
          "description": "<p>Can the viewer edit files within this pull request.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanEnableAutoMerge",
          "description": "<p>Whether or not the viewer can enable auto-merge.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMergeAsAdmin",
          "description": "<p>Indicates whether the viewer can bypass branch protections and merge the pull request immediately.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReopen",
          "description": "<p>Indicates if the object can be reopened by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdateBranch",
          "description": "<p>Whether or not the viewer can update the head ref of this PR, by merging or rebasing the base ref.\nIf the head ref is up to date or unable to be updated by this user, this will return false.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerLatestReview",
          "description": "<p>The latest review given from the viewer.</p>",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "viewerLatestReviewRequest",
          "description": "<p>The person who has requested the viewer for review on this pull request.</p>",
          "type": "ReviewRequest",
          "id": "reviewrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewrequest"
        },
        {
          "name": "viewerMergeBodyText",
          "description": "<p>The merge body text for the viewer and method.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "arguments": [
            {
              "name": "mergeType",
              "description": "<p>The merge method for the message.</p>",
              "type": {
                "name": "PullRequestMergeMethod",
                "id": "pullrequestmergemethod",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequestmergemethod"
              }
            }
          ]
        },
        {
          "name": "viewerMergeHeadlineText",
          "description": "<p>The merge headline text for the viewer and method.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "arguments": [
            {
              "name": "mergeType",
              "description": "<p>The merge method for the message.</p>",
              "type": {
                "name": "PullRequestMergeMethod",
                "id": "pullrequestmergemethod",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequestmergemethod"
              }
            }
          ]
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "PullRequestChangedFile",
      "kind": "objects",
      "id": "pullrequestchangedfile",
      "href": "/graphql/reference/objects#pullrequestchangedfile",
      "description": "<p>A file changed in a pull request.</p>",
      "fields": [
        {
          "name": "additions",
          "description": "<p>The number of additions to the file.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "changeType",
          "description": "<p>How the file was changed in this PullRequest.</p>",
          "type": "PatchStatus!",
          "id": "patchstatus",
          "kind": "enums",
          "href": "/graphql/reference/enums#patchstatus"
        },
        {
          "name": "deletions",
          "description": "<p>The number of deletions to the file.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "path",
          "description": "<p>The path of the file.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "viewerViewedState",
          "description": "<p>The state of the file for the viewer.</p>",
          "type": "FileViewedState!",
          "id": "fileviewedstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#fileviewedstate"
        }
      ]
    },
    {
      "name": "PullRequestChangedFileConnection",
      "kind": "objects",
      "id": "pullrequestchangedfileconnection",
      "href": "/graphql/reference/objects#pullrequestchangedfileconnection",
      "description": "<p>The connection type for PullRequestChangedFile.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestChangedFileEdge]",
          "id": "pullrequestchangedfileedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestchangedfileedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestChangedFile]",
          "id": "pullrequestchangedfile",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestchangedfile"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestChangedFileEdge",
      "kind": "objects",
      "id": "pullrequestchangedfileedge",
      "href": "/graphql/reference/objects#pullrequestchangedfileedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestChangedFile",
          "id": "pullrequestchangedfile",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestchangedfile"
        }
      ]
    },
    {
      "name": "PullRequestCommit",
      "kind": "objects",
      "id": "pullrequestcommit",
      "href": "/graphql/reference/objects#pullrequestcommit",
      "description": "<p>Represents a Git commit part of a pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "commit",
          "description": "<p>The Git commit object.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request this commit belongs to.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this pull request commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this pull request commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "PullRequestCommitCommentThread",
      "kind": "objects",
      "id": "pullrequestcommitcommentthread",
      "href": "/graphql/reference/objects#pullrequestcommitcommentthread",
      "description": "<p>Represents a commit comment thread part of a pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        }
      ],
      "fields": [
        {
          "name": "comments",
          "description": "<p>The comments that exist in this thread.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>The commit the comments were made on.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "path",
          "description": "<p>The file the comments were made on.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>The position in the diff for the commit that the comment was made on.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request this commit comment thread belongs to.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PullRequestCommitConnection",
      "kind": "objects",
      "id": "pullrequestcommitconnection",
      "href": "/graphql/reference/objects#pullrequestcommitconnection",
      "description": "<p>The connection type for PullRequestCommit.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestCommitEdge]",
          "id": "pullrequestcommitedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommitedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestCommit]",
          "id": "pullrequestcommit",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommit"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestCommitEdge",
      "kind": "objects",
      "id": "pullrequestcommitedge",
      "href": "/graphql/reference/objects#pullrequestcommitedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestCommit",
          "id": "pullrequestcommit",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommit"
        }
      ]
    },
    {
      "name": "PullRequestConnection",
      "kind": "objects",
      "id": "pullrequestconnection",
      "href": "/graphql/reference/objects#pullrequestconnection",
      "description": "<p>The connection type for PullRequest.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestEdge]",
          "id": "pullrequestedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequest]",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestContributionsByRepository",
      "kind": "objects",
      "id": "pullrequestcontributionsbyrepository",
      "href": "/graphql/reference/objects#pullrequestcontributionsbyrepository",
      "description": "<p>This aggregates pull requests opened by a user within one repository.</p>",
      "fields": [
        {
          "name": "contributions",
          "description": "<p>The pull request contributions.</p>",
          "type": "CreatedPullRequestContributionConnection!",
          "id": "createdpullrequestcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#contributionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository in which the pull requests were opened.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PullRequestEdge",
      "kind": "objects",
      "id": "pullrequestedge",
      "href": "/graphql/reference/objects#pullrequestedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "PullRequestReview",
      "kind": "objects",
      "id": "pullrequestreview",
      "href": "/graphql/reference/objects#pullrequestreview",
      "description": "<p>A review object for a given pull request.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "authorCanPushToRepository",
          "description": "<p>Indicates whether the author of this review has push access to the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "body",
          "description": "<p>Identifies the pull request review body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body of this review rendered as plain text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "comments",
          "description": "<p>A list of review comments for the current pull request review.</p>",
          "type": "PullRequestReviewCommentConnection!",
          "id": "pullrequestreviewcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with this pull request review.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "onBehalfOf",
          "description": "<p>A list of teams that this review was made on behalf of.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>Identifies the pull request associated with this pull request review.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path permalink for this PullRequestReview.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Identifies the current state of the pull request review.</p>",
          "type": "PullRequestReviewState!",
          "id": "pullrequestreviewstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewstate"
        },
        {
          "name": "submittedAt",
          "description": "<p>Identifies when the Pull Request Review was submitted.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL permalink for this PullRequestReview.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "PullRequestReviewComment",
      "kind": "objects",
      "id": "pullrequestreviewcomment",
      "href": "/graphql/reference/objects#pullrequestreviewcomment",
      "description": "<p>A review comment associated with a given repository pull request.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Minimizable",
          "id": "minimizable",
          "href": "/graphql/reference/interfaces#minimizable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The comment body of this review comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The comment body of this review comment rendered as plain text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with the comment.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies when the comment was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "diffHunk",
          "description": "<p>The diff hunk to which the comment applies.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "draftedAt",
          "description": "<p>Identifies when the comment was created in a draft state.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "line",
          "description": "<p>The end line number on the file to which the comment applies.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized. One of <code>abuse</code>, <code>off-topic</code>,\n<code>outdated</code>, <code>resolved</code>, <code>duplicate</code> and <code>spam</code>. Note that the case and\nformatting of these values differs from the inputs to the <code>MinimizeComment</code> mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "originalCommit",
          "description": "<p>Identifies the original commit associated with the comment.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "originalLine",
          "description": "<p>The end line number on the file to which the comment applied when it was first created.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "originalPosition",
          "description": "<p>The original line index in the diff to which the comment applies.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "isDeprecated": true,
          "deprecationReason": "<p>We are phasing out diff-relative positioning for PR comments Removal on 2023-10-01 UTC.</p>"
        },
        {
          "name": "originalStartLine",
          "description": "<p>The start line number on the file to which the comment applied when it was first created.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "outdated",
          "description": "<p>Identifies when the comment body is outdated.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "path",
          "description": "<p>The path to which the comment applies.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>The line index in the diff to which the comment applies.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "isDeprecated": true,
          "deprecationReason": "<p>We are phasing out diff-relative positioning for PR comments Use the <code>line</code> and <code>startLine</code> fields instead, which are file line numbers instead of diff line numbers Removal on 2023-10-01 UTC.</p>"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request associated with this review comment.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "pullRequestReview",
          "description": "<p>The pull request review associated with this review comment.</p>",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "replyTo",
          "description": "<p>The comment this is a reply to.</p>",
          "type": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path permalink for this review comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "startLine",
          "description": "<p>The start line number on the file to which the comment applies.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "state",
          "description": "<p>Identifies the state of the comment.</p>",
          "type": "PullRequestReviewCommentState!",
          "id": "pullrequestreviewcommentstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewcommentstate"
        },
        {
          "name": "subjectType",
          "description": "<p>The level at which the comments in the corresponding thread are targeted, can be a diff line or a file.</p>",
          "type": "PullRequestReviewThreadSubjectType!",
          "id": "pullrequestreviewthreadsubjecttype",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewthreadsubjecttype"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies when the comment was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL permalink for this review comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "PullRequestReviewCommentConnection",
      "kind": "objects",
      "id": "pullrequestreviewcommentconnection",
      "href": "/graphql/reference/objects#pullrequestreviewcommentconnection",
      "description": "<p>The connection type for PullRequestReviewComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestReviewCommentEdge]",
          "id": "pullrequestreviewcommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestReviewComment]",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestReviewCommentEdge",
      "kind": "objects",
      "id": "pullrequestreviewcommentedge",
      "href": "/graphql/reference/objects#pullrequestreviewcommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment"
        }
      ]
    },
    {
      "name": "PullRequestReviewConnection",
      "kind": "objects",
      "id": "pullrequestreviewconnection",
      "href": "/graphql/reference/objects#pullrequestreviewconnection",
      "description": "<p>The connection type for PullRequestReview.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestReviewEdge]",
          "id": "pullrequestreviewedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestReview]",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestReviewContributionsByRepository",
      "kind": "objects",
      "id": "pullrequestreviewcontributionsbyrepository",
      "href": "/graphql/reference/objects#pullrequestreviewcontributionsbyrepository",
      "description": "<p>This aggregates pull request reviews made by a user within one repository.</p>",
      "fields": [
        {
          "name": "contributions",
          "description": "<p>The pull request review contributions.</p>",
          "type": "CreatedPullRequestReviewContributionConnection!",
          "id": "createdpullrequestreviewcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#contributionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository in which the pull request reviews were made.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PullRequestReviewEdge",
      "kind": "objects",
      "id": "pullrequestreviewedge",
      "href": "/graphql/reference/objects#pullrequestreviewedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        }
      ]
    },
    {
      "name": "PullRequestReviewThread",
      "kind": "objects",
      "id": "pullrequestreviewthread",
      "href": "/graphql/reference/objects#pullrequestreviewthread",
      "description": "<p>A threaded list of comments for a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "comments",
          "description": "<p>A list of pull request comments associated with the thread.</p>",
          "type": "PullRequestReviewCommentConnection!",
          "id": "pullrequestreviewcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "skip",
              "description": "<p>Skips the first <em>n</em> elements in the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "diffSide",
          "description": "<p>The side of the diff on which this thread was placed.</p>",
          "type": "DiffSide!",
          "id": "diffside",
          "kind": "enums",
          "href": "/graphql/reference/enums#diffside"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isCollapsed",
          "description": "<p>Whether or not the thread has been collapsed (resolved).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isOutdated",
          "description": "<p>Indicates whether this thread was outdated by newer changes.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isResolved",
          "description": "<p>Whether this thread has been resolved.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "line",
          "description": "<p>The line in the file to which this thread refers.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "originalLine",
          "description": "<p>The original line in the file to which this thread refers.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "originalStartLine",
          "description": "<p>The original start line in the file to which this thread refers (multi-line only).</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "path",
          "description": "<p>Identifies the file path of this thread.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequest",
          "description": "<p>Identifies the pull request associated with this thread.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "repository",
          "description": "<p>Identifies the repository associated with this thread.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resolvedBy",
          "description": "<p>The user who resolved this thread.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "startDiffSide",
          "description": "<p>The side of the diff that the first line of the thread starts on (multi-line only).</p>",
          "type": "DiffSide",
          "id": "diffside",
          "kind": "enums",
          "href": "/graphql/reference/enums#diffside"
        },
        {
          "name": "startLine",
          "description": "<p>The start line in the file to which this thread refers (multi-line only).</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "subjectType",
          "description": "<p>The level at which the comments in the corresponding thread are targeted, can be a diff line or a file.</p>",
          "type": "PullRequestReviewThreadSubjectType!",
          "id": "pullrequestreviewthreadsubjecttype",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewthreadsubjecttype"
        },
        {
          "name": "viewerCanReply",
          "description": "<p>Indicates whether the current viewer can reply to this thread.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanResolve",
          "description": "<p>Whether or not the viewer can resolve this thread.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUnresolve",
          "description": "<p>Whether or not the viewer can unresolve this thread.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "PullRequestReviewThreadConnection",
      "kind": "objects",
      "id": "pullrequestreviewthreadconnection",
      "href": "/graphql/reference/objects#pullrequestreviewthreadconnection",
      "description": "<p>Review comment threads for a pull request review.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestReviewThreadEdge]",
          "id": "pullrequestreviewthreadedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthreadedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestReviewThread]",
          "id": "pullrequestreviewthread",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthread"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestReviewThreadEdge",
      "kind": "objects",
      "id": "pullrequestreviewthreadedge",
      "href": "/graphql/reference/objects#pullrequestreviewthreadedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthread"
        }
      ]
    },
    {
      "name": "PullRequestRevisionMarker",
      "kind": "objects",
      "id": "pullrequestrevisionmarker",
      "href": "/graphql/reference/objects#pullrequestrevisionmarker",
      "description": "<p>Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.</p>",
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "lastSeenCommit",
          "description": "<p>The last commit the viewer has seen.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request to which the marker belongs.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "PullRequestTemplate",
      "kind": "objects",
      "id": "pullrequesttemplate",
      "href": "/graphql/reference/objects#pullrequesttemplate",
      "description": "<p>A repository pull request template.</p>",
      "fields": [
        {
          "name": "body",
          "description": "<p>The body of the template.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "filename",
          "description": "<p>The filename of the template.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repository",
          "description": "<p>The repository the template belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PullRequestThread",
      "kind": "objects",
      "id": "pullrequestthread",
      "href": "/graphql/reference/objects#pullrequestthread",
      "description": "<p>A threaded list of comments for a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "comments",
          "description": "<p>A list of pull request comments associated with the thread.</p>",
          "type": "PullRequestReviewCommentConnection!",
          "id": "pullrequestreviewcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "skip",
              "description": "<p>Skips the first <em>n</em> elements in the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "diffSide",
          "description": "<p>The side of the diff on which this thread was placed.</p>",
          "type": "DiffSide!",
          "id": "diffside",
          "kind": "enums",
          "href": "/graphql/reference/enums#diffside"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isCollapsed",
          "description": "<p>Whether or not the thread has been collapsed (resolved).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isOutdated",
          "description": "<p>Indicates whether this thread was outdated by newer changes.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isResolved",
          "description": "<p>Whether this thread has been resolved.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "line",
          "description": "<p>The line in the file to which this thread refers.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pullRequest",
          "description": "<p>Identifies the pull request associated with this thread.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "repository",
          "description": "<p>Identifies the repository associated with this thread.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resolvedBy",
          "description": "<p>The user who resolved this thread.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "startDiffSide",
          "description": "<p>The side of the diff that the first line of the thread starts on (multi-line only).</p>",
          "type": "DiffSide",
          "id": "diffside",
          "kind": "enums",
          "href": "/graphql/reference/enums#diffside"
        },
        {
          "name": "startLine",
          "description": "<p>The line of the first file diff in the thread.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "viewerCanReply",
          "description": "<p>Indicates whether the current viewer can reply to this thread.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanResolve",
          "description": "<p>Whether or not the viewer can resolve this thread.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUnresolve",
          "description": "<p>Whether or not the viewer can unresolve this thread.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "PullRequestTimelineConnection",
      "kind": "objects",
      "id": "pullrequesttimelineconnection",
      "href": "/graphql/reference/objects#pullrequesttimelineconnection",
      "description": "<p>The connection type for PullRequestTimelineItem.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestTimelineItemEdge]",
          "id": "pullrequesttimelineitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequesttimelineitemedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestTimelineItem]",
          "id": "pullrequesttimelineitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#pullrequesttimelineitem"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItemEdge",
      "kind": "objects",
      "id": "pullrequesttimelineitemedge",
      "href": "/graphql/reference/objects#pullrequesttimelineitemedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestTimelineItem",
          "id": "pullrequesttimelineitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#pullrequesttimelineitem"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItemsConnection",
      "kind": "objects",
      "id": "pullrequesttimelineitemsconnection",
      "href": "/graphql/reference/objects#pullrequesttimelineitemsconnection",
      "description": "<p>The connection type for PullRequestTimelineItems.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestTimelineItemsEdge]",
          "id": "pullrequesttimelineitemsedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequesttimelineitemsedge"
        },
        {
          "name": "filteredCount",
          "description": "<p>Identifies the count of items after applying <code>before</code> and <code>after</code> filters.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestTimelineItems]",
          "id": "pullrequesttimelineitems",
          "kind": "unions",
          "href": "/graphql/reference/unions#pullrequesttimelineitems"
        },
        {
          "name": "pageCount",
          "description": "<p>Identifies the count of items after applying <code>before</code>/<code>after</code> filters and <code>first</code>/<code>last</code>/<code>skip</code> slicing.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the timeline was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItemsEdge",
      "kind": "objects",
      "id": "pullrequesttimelineitemsedge",
      "href": "/graphql/reference/objects#pullrequesttimelineitemsedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestTimelineItems",
          "id": "pullrequesttimelineitems",
          "kind": "unions",
          "href": "/graphql/reference/unions#pullrequesttimelineitems"
        }
      ]
    },
    {
      "name": "Push",
      "kind": "objects",
      "id": "push",
      "href": "/graphql/reference/objects#push",
      "description": "<p>A Git push.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "nextSha",
          "description": "<p>The SHA after the push.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "permalink",
          "description": "<p>The permalink for this push.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "previousSha",
          "description": "<p>The SHA before the push.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "pusher",
          "description": "<p>The actor who pushed.</p>",
          "type": "Actor!",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "repository",
          "description": "<p>The repository that was pushed to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PushAllowance",
      "kind": "objects",
      "id": "pushallowance",
      "href": "/graphql/reference/objects#pushallowance",
      "description": "<p>A team, user, or app who has the ability to push to a protected branch.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>The actor that can push.</p>",
          "type": "PushAllowanceActor",
          "id": "pushallowanceactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#pushallowanceactor"
        },
        {
          "name": "branchProtectionRule",
          "description": "<p>Identifies the branch protection rule associated with the allowed user, team, or app.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "PushAllowanceConnection",
      "kind": "objects",
      "id": "pushallowanceconnection",
      "href": "/graphql/reference/objects#pushallowanceconnection",
      "description": "<p>The connection type for PushAllowance.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PushAllowanceEdge]",
          "id": "pushallowanceedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pushallowanceedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PushAllowance]",
          "id": "pushallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#pushallowance"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PushAllowanceEdge",
      "kind": "objects",
      "id": "pushallowanceedge",
      "href": "/graphql/reference/objects#pushallowanceedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PushAllowance",
          "id": "pushallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#pushallowance"
        }
      ]
    },
    {
      "name": "RateLimit",
      "kind": "objects",
      "id": "ratelimit",
      "href": "/graphql/reference/objects#ratelimit",
      "description": "<p>Represents the client's rate limit.</p>",
      "fields": [
        {
          "name": "cost",
          "description": "<p>The point cost for the current query counting against the rate limit.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "limit",
          "description": "<p>The maximum number of points the client is permitted to consume in a 60 minute window.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "nodeCount",
          "description": "<p>The maximum number of nodes this query may return.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "remaining",
          "description": "<p>The number of points remaining in the current rate limit window.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "resetAt",
          "description": "<p>The time at which the current rate limit window resets in UTC epoch seconds.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "used",
          "description": "<p>The number of points used in the current rate limit window.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReactingUserConnection",
      "kind": "objects",
      "id": "reactinguserconnection",
      "href": "/graphql/reference/objects#reactinguserconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReactingUserEdge]",
          "id": "reactinguseredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactinguseredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReactingUserEdge",
      "kind": "objects",
      "id": "reactinguseredge",
      "href": "/graphql/reference/objects#reactinguseredge",
      "description": "<p>Represents a user that's made a reaction.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "reactedAt",
          "description": "<p>The moment when the user made the reaction.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "Reaction",
      "kind": "objects",
      "id": "reaction",
      "href": "/graphql/reference/objects#reaction",
      "description": "<p>An emoji reaction to a particular piece of content.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "content",
          "description": "<p>Identifies the emoji reaction.</p>",
          "type": "ReactionContent!",
          "id": "reactioncontent",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactioncontent"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "reactable",
          "description": "<p>The reactable piece of content.</p>",
          "type": "Reactable!",
          "id": "reactable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "user",
          "description": "<p>Identifies the user who created this reaction.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ReactionConnection",
      "kind": "objects",
      "id": "reactionconnection",
      "href": "/graphql/reference/objects#reactionconnection",
      "description": "<p>A list of reactions that have been left on the subject.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReactionEdge]",
          "id": "reactionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Reaction]",
          "id": "reaction",
          "kind": "objects",
          "href": "/graphql/reference/objects#reaction"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "viewerHasReacted",
          "description": "<p>Whether or not the authenticated user has left a reaction on the subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "ReactionEdge",
      "kind": "objects",
      "id": "reactionedge",
      "href": "/graphql/reference/objects#reactionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Reaction",
          "id": "reaction",
          "kind": "objects",
          "href": "/graphql/reference/objects#reaction"
        }
      ]
    },
    {
      "name": "ReactionGroup",
      "kind": "objects",
      "id": "reactiongroup",
      "href": "/graphql/reference/objects#reactiongroup",
      "description": "<p>A group of emoji reactions to a particular piece of content.</p>",
      "fields": [
        {
          "name": "content",
          "description": "<p>Identifies the emoji reaction.</p>",
          "type": "ReactionContent!",
          "id": "reactioncontent",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactioncontent"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies when the reaction was created.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactors",
          "description": "<p>Reactors to the reaction subject with the emotion represented by this reaction group.</p>",
          "type": "ReactorConnection!",
          "id": "reactorconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactorconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "subject",
          "description": "<p>The subject that was reacted to.</p>",
          "type": "Reactable!",
          "id": "reactable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "users",
          "description": "<p>Users who have reacted to the reaction subject with the emotion represented by this reaction group.</p>",
          "type": "ReactingUserConnection!",
          "id": "reactinguserconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactinguserconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p>Reactors can now be mannequins, bots, and organizations. Use the <code>reactors</code> field instead. Removal on 2021-10-01 UTC.</p>"
        },
        {
          "name": "viewerHasReacted",
          "description": "<p>Whether or not the authenticated user has left a reaction on the subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "ReactorConnection",
      "kind": "objects",
      "id": "reactorconnection",
      "href": "/graphql/reference/objects#reactorconnection",
      "description": "<p>The connection type for Reactor.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReactorEdge]",
          "id": "reactoredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactoredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Reactor]",
          "id": "reactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#reactor"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReactorEdge",
      "kind": "objects",
      "id": "reactoredge",
      "href": "/graphql/reference/objects#reactoredge",
      "description": "<p>Represents an author of a reaction.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The author of the reaction.</p>",
          "type": "Reactor!",
          "id": "reactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#reactor"
        },
        {
          "name": "reactedAt",
          "description": "<p>The moment when the user made the reaction.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ReadyForReviewEvent",
      "kind": "objects",
      "id": "readyforreviewevent",
      "href": "/graphql/reference/objects#readyforreviewevent",
      "description": "<p>Represents a<code>ready_for_review</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this ready for review event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this ready for review event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Ref",
      "kind": "objects",
      "id": "ref",
      "href": "/graphql/reference/objects#ref",
      "description": "<p>Represents a Git reference.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "associatedPullRequests",
          "description": "<p>A list of pull requests with this ref as the head ref.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "branchProtectionRule",
          "description": "<p>Branch protection rules for this ref.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "compare",
          "description": "<p>Compares the current ref as a base ref to another head ref, if the comparison can be made.</p>",
          "type": "Comparison",
          "id": "comparison",
          "kind": "objects",
          "href": "/graphql/reference/objects#comparison",
          "arguments": [
            {
              "name": "headRef",
              "description": "<p>The head ref to compare against.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The ref name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "prefix",
          "description": "<p>The ref's prefix, such as <code>refs/heads/</code> or <code>refs/tags/</code>.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "refUpdateRule",
          "description": "<p>Branch protection rules that are viewable by non-admins.</p>",
          "type": "RefUpdateRule",
          "id": "refupdaterule",
          "kind": "objects",
          "href": "/graphql/reference/objects#refupdaterule"
        },
        {
          "name": "repository",
          "description": "<p>The repository the ref belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "target",
          "description": "<p>The object the ref points to. Returns null when object does not exist.</p>",
          "type": "GitObject",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject"
        }
      ]
    },
    {
      "name": "RefConnection",
      "kind": "objects",
      "id": "refconnection",
      "href": "/graphql/reference/objects#refconnection",
      "description": "<p>The connection type for Ref.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RefEdge]",
          "id": "refedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#refedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Ref]",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RefEdge",
      "kind": "objects",
      "id": "refedge",
      "href": "/graphql/reference/objects#refedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "RefUpdateRule",
      "kind": "objects",
      "id": "refupdaterule",
      "href": "/graphql/reference/objects#refupdaterule",
      "description": "<p>A ref update rules for a viewer.</p>",
      "fields": [
        {
          "name": "allowsDeletions",
          "description": "<p>Can this branch be deleted.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "allowsForcePushes",
          "description": "<p>Are force pushes allowed on this branch.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "blocksCreations",
          "description": "<p>Can matching branches be created.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "pattern",
          "description": "<p>Identifies the protection rule pattern.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiredApprovingReviewCount",
          "description": "<p>Number of approving reviews required to update matching branches.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "requiredStatusCheckContexts",
          "description": "<p>List of required status check contexts that must pass for commits to be accepted to matching branches.</p>",
          "type": "[String]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiresCodeOwnerReviews",
          "description": "<p>Are reviews from code owners required to update matching branches.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresConversationResolution",
          "description": "<p>Are conversations required to be resolved before merging.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresLinearHistory",
          "description": "<p>Are merge commits prohibited from being pushed to this branch.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresSignatures",
          "description": "<p>Are commits required to be signed.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerAllowedToDismissReviews",
          "description": "<p>Is the viewer allowed to dismiss reviews.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanPush",
          "description": "<p>Can the viewer push to the branch.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "ReferencedEvent",
      "kind": "objects",
      "id": "referencedevent",
      "href": "/graphql/reference/objects#referencedevent",
      "description": "<p>Represents a<code>referenced</code>event on a given <code>ReferencedSubject</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with the<code>referenced</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "commitRepository",
          "description": "<p>Identifies the repository associated with the<code>referenced</code>event.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>Reference originated in a different repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isDirectReference",
          "description": "<p>Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "subject",
          "description": "<p>Object referenced by event.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        }
      ]
    },
    {
      "name": "Release",
      "kind": "objects",
      "id": "release",
      "href": "/graphql/reference/objects#release",
      "description": "<p>A release contains the content for a release.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The author of the release.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>The description of the release.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "descriptionHTML",
          "description": "<p>The description of this release rendered to HTML.</p>",
          "type": "HTML",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isDraft",
          "description": "<p>Whether or not the release is a draft.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isLatest",
          "description": "<p>Whether or not the release is the latest releast.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPrerelease",
          "description": "<p>Whether or not the release is a prerelease.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "mentions",
          "description": "<p>A list of users mentioned in the release description.</p>",
          "type": "UserConnection",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>The title of the release.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies the date and time when the release was created.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "releaseAssets",
          "description": "<p>List of releases assets which are dependent on this release.</p>",
          "type": "ReleaseAssetConnection!",
          "id": "releaseassetconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseassetconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "name",
              "description": "<p>A list of names to filter the assets by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository that the release belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this issue.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "shortDescriptionHTML",
          "description": "<p>A description of the release, rendered to HTML without any links in it.</p>",
          "type": "HTML",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html",
          "arguments": [
            {
              "name": "limit",
              "defaultValue": "200",
              "description": "<p>How many characters to return.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "tag",
          "description": "<p>The Git tag the release points to.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "tagCommit",
          "description": "<p>The tag commit for this release.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "tagName",
          "description": "<p>The name of the release's Git tag.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this issue.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "ReleaseAsset",
      "kind": "objects",
      "id": "releaseasset",
      "href": "/graphql/reference/objects#releaseasset",
      "description": "<p>A release asset contains the content for a release asset.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "contentType",
          "description": "<p>The asset's content-type.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "downloadCount",
          "description": "<p>The number of times this asset was downloaded.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "downloadUrl",
          "description": "<p>Identifies the URL where you can download the release asset via the browser.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>Identifies the title of the release asset.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "release",
          "description": "<p>Release that the asset is associated with.</p>",
          "type": "Release",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release"
        },
        {
          "name": "size",
          "description": "<p>The size (in bytes) of the asset.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "uploadedBy",
          "description": "<p>The user that performed the upload.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "url",
          "description": "<p>Identifies the URL of the release asset.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ReleaseAssetConnection",
      "kind": "objects",
      "id": "releaseassetconnection",
      "href": "/graphql/reference/objects#releaseassetconnection",
      "description": "<p>The connection type for ReleaseAsset.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReleaseAssetEdge]",
          "id": "releaseassetedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseassetedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ReleaseAsset]",
          "id": "releaseasset",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseasset"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReleaseAssetEdge",
      "kind": "objects",
      "id": "releaseassetedge",
      "href": "/graphql/reference/objects#releaseassetedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ReleaseAsset",
          "id": "releaseasset",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseasset"
        }
      ]
    },
    {
      "name": "ReleaseConnection",
      "kind": "objects",
      "id": "releaseconnection",
      "href": "/graphql/reference/objects#releaseconnection",
      "description": "<p>The connection type for Release.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReleaseEdge]",
          "id": "releaseedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Release]",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReleaseEdge",
      "kind": "objects",
      "id": "releaseedge",
      "href": "/graphql/reference/objects#releaseedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Release",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release"
        }
      ]
    },
    {
      "name": "RemovedFromProjectEvent",
      "kind": "objects",
      "id": "removedfromprojectevent",
      "href": "/graphql/reference/objects#removedfromprojectevent",
      "description": "<p>Represents a<code>removed_from_project</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "project",
          "description": "<p>Project referenced by event.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectColumnName",
          "description": "<p>Column name referenced by this project event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        }
      ]
    },
    {
      "name": "RenamedTitleEvent",
      "kind": "objects",
      "id": "renamedtitleevent",
      "href": "/graphql/reference/objects#renamedtitleevent",
      "description": "<p>Represents a<code>renamed</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "currentTitle",
          "description": "<p>Identifies the current title of the issue or pull request.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "previousTitle",
          "description": "<p>Identifies the previous title of the issue or pull request.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subject",
          "description": "<p>Subject that was renamed.</p>",
          "type": "RenamedTitleSubject!",
          "id": "renamedtitlesubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#renamedtitlesubject"
        }
      ]
    },
    {
      "name": "ReopenedEvent",
      "kind": "objects",
      "id": "reopenedevent",
      "href": "/graphql/reference/objects#reopenedevent",
      "description": "<p>Represents a<code>reopened</code>event on any <code>Closable</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "closable",
          "description": "<p>Object that was reopened.</p>",
          "type": "Closable!",
          "id": "closable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "stateReason",
          "description": "<p>The reason the issue state was changed to open.</p>",
          "type": "IssueStateReason",
          "id": "issuestatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuestatereason"
        }
      ]
    },
    {
      "name": "RepoAccessAuditEntry",
      "kind": "objects",
      "id": "repoaccessauditentry",
      "href": "/graphql/reference/objects#repoaccessauditentry",
      "description": "<p>Audit log entry for a repo.access event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "visibility",
          "description": "<p>The visibility of the repository.</p>",
          "type": "RepoAccessAuditEntryVisibility",
          "id": "repoaccessauditentryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#repoaccessauditentryvisibility"
        }
      ]
    },
    {
      "name": "RepoAddMemberAuditEntry",
      "kind": "objects",
      "id": "repoaddmemberauditentry",
      "href": "/graphql/reference/objects#repoaddmemberauditentry",
      "description": "<p>Audit log entry for a repo.add_member event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "visibility",
          "description": "<p>The visibility of the repository.</p>",
          "type": "RepoAddMemberAuditEntryVisibility",
          "id": "repoaddmemberauditentryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#repoaddmemberauditentryvisibility"
        }
      ]
    },
    {
      "name": "RepoAddTopicAuditEntry",
      "kind": "objects",
      "id": "repoaddtopicauditentry",
      "href": "/graphql/reference/objects#repoaddtopicauditentry",
      "description": "<p>Audit log entry for a repo.add_topic event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        },
        {
          "name": "TopicAuditEntryData",
          "id": "topicauditentrydata",
          "href": "/graphql/reference/interfaces#topicauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "topic",
          "description": "<p>The name of the topic added to the repository.</p>",
          "type": "Topic",
          "id": "topic",
          "kind": "objects",
          "href": "/graphql/reference/objects#topic"
        },
        {
          "name": "topicName",
          "description": "<p>The name of the topic added to the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoArchivedAuditEntry",
      "kind": "objects",
      "id": "repoarchivedauditentry",
      "href": "/graphql/reference/objects#repoarchivedauditentry",
      "description": "<p>Audit log entry for a repo.archived event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "visibility",
          "description": "<p>The visibility of the repository.</p>",
          "type": "RepoArchivedAuditEntryVisibility",
          "id": "repoarchivedauditentryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#repoarchivedauditentryvisibility"
        }
      ]
    },
    {
      "name": "RepoChangeMergeSettingAuditEntry",
      "kind": "objects",
      "id": "repochangemergesettingauditentry",
      "href": "/graphql/reference/objects#repochangemergesettingauditentry",
      "description": "<p>Audit log entry for a repo.change_merge_setting event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isEnabled",
          "description": "<p>Whether the change was to enable (true) or disable (false) the merge type.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "mergeType",
          "description": "<p>The merge method affected by the change.</p>",
          "type": "RepoChangeMergeSettingAuditEntryMergeType",
          "id": "repochangemergesettingauditentrymergetype",
          "kind": "enums",
          "href": "/graphql/reference/enums#repochangemergesettingauditentrymergetype"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigDisableAnonymousGitAccessAuditEntry",
      "kind": "objects",
      "id": "repoconfigdisableanonymousgitaccessauditentry",
      "href": "/graphql/reference/objects#repoconfigdisableanonymousgitaccessauditentry",
      "description": "<p>Audit log entry for a repo.config.disable_anonymous_git_access event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigDisableCollaboratorsOnlyAuditEntry",
      "kind": "objects",
      "id": "repoconfigdisablecollaboratorsonlyauditentry",
      "href": "/graphql/reference/objects#repoconfigdisablecollaboratorsonlyauditentry",
      "description": "<p>Audit log entry for a repo.config.disable_collaborators_only event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigDisableContributorsOnlyAuditEntry",
      "kind": "objects",
      "id": "repoconfigdisablecontributorsonlyauditentry",
      "href": "/graphql/reference/objects#repoconfigdisablecontributorsonlyauditentry",
      "description": "<p>Audit log entry for a repo.config.disable_contributors_only event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigDisableSockpuppetDisallowedAuditEntry",
      "kind": "objects",
      "id": "repoconfigdisablesockpuppetdisallowedauditentry",
      "href": "/graphql/reference/objects#repoconfigdisablesockpuppetdisallowedauditentry",
      "description": "<p>Audit log entry for a repo.config.disable_sockpuppet_disallowed event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigEnableAnonymousGitAccessAuditEntry",
      "kind": "objects",
      "id": "repoconfigenableanonymousgitaccessauditentry",
      "href": "/graphql/reference/objects#repoconfigenableanonymousgitaccessauditentry",
      "description": "<p>Audit log entry for a repo.config.enable_anonymous_git_access event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigEnableCollaboratorsOnlyAuditEntry",
      "kind": "objects",
      "id": "repoconfigenablecollaboratorsonlyauditentry",
      "href": "/graphql/reference/objects#repoconfigenablecollaboratorsonlyauditentry",
      "description": "<p>Audit log entry for a repo.config.enable_collaborators_only event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigEnableContributorsOnlyAuditEntry",
      "kind": "objects",
      "id": "repoconfigenablecontributorsonlyauditentry",
      "href": "/graphql/reference/objects#repoconfigenablecontributorsonlyauditentry",
      "description": "<p>Audit log entry for a repo.config.enable_contributors_only event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigEnableSockpuppetDisallowedAuditEntry",
      "kind": "objects",
      "id": "repoconfigenablesockpuppetdisallowedauditentry",
      "href": "/graphql/reference/objects#repoconfigenablesockpuppetdisallowedauditentry",
      "description": "<p>Audit log entry for a repo.config.enable_sockpuppet_disallowed event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigLockAnonymousGitAccessAuditEntry",
      "kind": "objects",
      "id": "repoconfiglockanonymousgitaccessauditentry",
      "href": "/graphql/reference/objects#repoconfiglockanonymousgitaccessauditentry",
      "description": "<p>Audit log entry for a repo.config.lock_anonymous_git_access event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoConfigUnlockAnonymousGitAccessAuditEntry",
      "kind": "objects",
      "id": "repoconfigunlockanonymousgitaccessauditentry",
      "href": "/graphql/reference/objects#repoconfigunlockanonymousgitaccessauditentry",
      "description": "<p>Audit log entry for a repo.config.unlock_anonymous_git_access event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepoCreateAuditEntry",
      "kind": "objects",
      "id": "repocreateauditentry",
      "href": "/graphql/reference/objects#repocreateauditentry",
      "description": "<p>Audit log entry for a repo.create event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "forkParentName",
          "description": "<p>The name of the parent repository for this forked repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "forkSourceName",
          "description": "<p>The name of the root repository for this network.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "visibility",
          "description": "<p>The visibility of the repository.</p>",
          "type": "RepoCreateAuditEntryVisibility",
          "id": "repocreateauditentryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#repocreateauditentryvisibility"
        }
      ]
    },
    {
      "name": "RepoDestroyAuditEntry",
      "kind": "objects",
      "id": "repodestroyauditentry",
      "href": "/graphql/reference/objects#repodestroyauditentry",
      "description": "<p>Audit log entry for a repo.destroy event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "visibility",
          "description": "<p>The visibility of the repository.</p>",
          "type": "RepoDestroyAuditEntryVisibility",
          "id": "repodestroyauditentryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#repodestroyauditentryvisibility"
        }
      ]
    },
    {
      "name": "RepoRemoveMemberAuditEntry",
      "kind": "objects",
      "id": "reporemovememberauditentry",
      "href": "/graphql/reference/objects#reporemovememberauditentry",
      "description": "<p>Audit log entry for a repo.remove_member event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "visibility",
          "description": "<p>The visibility of the repository.</p>",
          "type": "RepoRemoveMemberAuditEntryVisibility",
          "id": "reporemovememberauditentryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#reporemovememberauditentryvisibility"
        }
      ]
    },
    {
      "name": "RepoRemoveTopicAuditEntry",
      "kind": "objects",
      "id": "reporemovetopicauditentry",
      "href": "/graphql/reference/objects#reporemovetopicauditentry",
      "description": "<p>Audit log entry for a repo.remove_topic event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        },
        {
          "name": "TopicAuditEntryData",
          "id": "topicauditentrydata",
          "href": "/graphql/reference/interfaces#topicauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "topic",
          "description": "<p>The name of the topic added to the repository.</p>",
          "type": "Topic",
          "id": "topic",
          "kind": "objects",
          "href": "/graphql/reference/objects#topic"
        },
        {
          "name": "topicName",
          "description": "<p>The name of the topic added to the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Repository",
      "kind": "objects",
      "id": "repository",
      "href": "/graphql/reference/objects#repository",
      "description": "<p>A repository contains the content for a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "PackageOwner",
          "id": "packageowner",
          "href": "/graphql/reference/interfaces#packageowner"
        },
        {
          "name": "ProjectOwner",
          "id": "projectowner",
          "href": "/graphql/reference/interfaces#projectowner"
        },
        {
          "name": "ProjectV2Recent",
          "id": "projectv2recent",
          "href": "/graphql/reference/interfaces#projectv2recent"
        },
        {
          "name": "RepositoryInfo",
          "id": "repositoryinfo",
          "href": "/graphql/reference/interfaces#repositoryinfo"
        },
        {
          "name": "Starrable",
          "id": "starrable",
          "href": "/graphql/reference/interfaces#starrable"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "allowUpdateBranch",
          "description": "<p>Whether or not a pull request head branch that is behind its base branch can\nalways be updated even if it is not required to be up to date before merging.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "archivedAt",
          "description": "<p>Identifies the date and time when the repository was archived.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "assignableUsers",
          "description": "<p>A list of users that can be assigned to issues in this repository.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "query",
              "description": "<p>Filters users with query on user name and login.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "autoMergeAllowed",
          "description": "<p>Whether or not Auto-merge can be enabled on pull requests in this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "branchProtectionRules",
          "description": "<p>A list of branch protection rules for this repository.</p>",
          "type": "BranchProtectionRuleConnection!",
          "id": "branchprotectionruleconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "codeOfConduct",
          "description": "<p>Returns the code of conduct for this repository.</p>",
          "type": "CodeOfConduct",
          "id": "codeofconduct",
          "kind": "objects",
          "href": "/graphql/reference/objects#codeofconduct"
        },
        {
          "name": "codeowners",
          "description": "<p>Information extracted from the repository's <code>CODEOWNERS</code> file.</p>",
          "type": "RepositoryCodeowners",
          "id": "repositorycodeowners",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorycodeowners",
          "arguments": [
            {
              "name": "refName",
              "description": "<p>The ref name used to return the associated <code>CODEOWNERS</code> file.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "collaborators",
          "description": "<p>A list of collaborators associated with the repository.</p>",
          "type": "RepositoryCollaboratorConnection",
          "id": "repositorycollaboratorconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorycollaboratorconnection",
          "arguments": [
            {
              "name": "affiliation",
              "description": "<p>Collaborators affiliation level with a repository.</p>",
              "type": {
                "name": "CollaboratorAffiliation",
                "id": "collaboratoraffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#collaboratoraffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "login",
              "description": "<p>The login of one specific collaborator.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "query",
              "description": "<p>Filters users with query on user name and login.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "commitComments",
          "description": "<p>A list of commit comments associated with the repository.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "contactLinks",
          "description": "<p>Returns a list of contact links associated to the repository.</p>",
          "type": "[RepositoryContactLink!]",
          "id": "repositorycontactlink",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorycontactlink"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "defaultBranchRef",
          "description": "<p>The Ref associated with the repository's default branch.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "deleteBranchOnMerge",
          "description": "<p>Whether or not branches are automatically deleted when merged in this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "dependencyGraphManifests",
          "description": "<p>A list of dependency manifests contained in the repository.</p>",
          "type": "DependencyGraphManifestConnection",
          "id": "dependencygraphmanifestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependencygraphmanifestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "dependenciesAfter",
              "description": "<p>Cursor to paginate dependencies.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "dependenciesFirst",
              "description": "<p>Number of dependencies to fetch.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "withDependencies",
              "description": "<p>Flag to scope to only manifests with dependencies.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ],
          "isDeprecated": false,
          "preview": {
            "title": "Access to a repository's dependency graph preview",
            "description": "This preview adds support for reading a dependency graph for a repository.",
            "toggled_by": "hawkgirl-preview",
            "toggled_on": [
              "DependencyGraphManifest",
              "Repository.dependencyGraphManifests",
              "DependencyGraphManifestEdge",
              "DependencyGraphManifestConnection",
              "DependencyGraphDependency",
              "DependencyGraphDependencyEdge",
              "DependencyGraphDependencyConnection",
              "DependencyGraphPackageRelease.dependencies"
            ],
            "owning_teams": [
              "@github/dependency-graph"
            ],
            "accept_header": "application/vnd.github.hawkgirl-preview+json",
            "href": "/graphql/overview/schema-previews#access-to-a-repositorys-dependency-graph-preview"
          }
        },
        {
          "name": "deployKeys",
          "description": "<p>A list of deploy keys that are on this repository.</p>",
          "type": "DeployKeyConnection!",
          "id": "deploykeyconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploykeyconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "deployments",
          "description": "<p>Deployments associated with the repository.</p>",
          "type": "DeploymentConnection!",
          "id": "deploymentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "environments",
              "description": "<p>Environments to list deployments for.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for deployments returned from the connection.</p>",
              "type": {
                "name": "DeploymentOrder",
                "id": "deploymentorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#deploymentorder"
              }
            }
          ]
        },
        {
          "name": "description",
          "description": "<p>The description of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "descriptionHTML",
          "description": "<p>The description of the repository rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "discussion",
          "description": "<p>Returns a single discussion from the current repository by number.</p>",
          "type": "Discussion",
          "id": "discussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussion",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the discussion to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "discussionCategories",
          "description": "<p>A list of discussion categories that are available in the repository.</p>",
          "type": "DiscussionCategoryConnection!",
          "id": "discussioncategoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncategoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "filterByAssignable",
              "defaultValue": false,
              "description": "<p>Filter by categories that are assignable by the viewer.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "discussionCategory",
          "description": "<p>A discussion category by slug.</p>",
          "type": "DiscussionCategory",
          "id": "discussioncategory",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncategory",
          "arguments": [
            {
              "name": "slug",
              "description": "<p>The slug of the discussion category to be returned.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "discussions",
          "description": "<p>A list of discussions that have been opened in the repository.</p>",
          "type": "DiscussionConnection!",
          "id": "discussionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "categoryId",
              "description": "<p>Only include discussions that belong to the category with this ID.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for discussions returned from the connection.</p>",
              "type": {
                "name": "DiscussionOrder",
                "id": "discussionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#discussionorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the discussions by.</p>",
              "type": {
                "name": "[DiscussionState!]",
                "id": "discussionstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#discussionstate"
              }
            }
          ]
        },
        {
          "name": "diskUsage",
          "description": "<p>The number of kilobytes this repository occupies on disk.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "environment",
          "description": "<p>Returns a single active environment from the current repository by name.</p>",
          "type": "Environment",
          "id": "environment",
          "kind": "objects",
          "href": "/graphql/reference/objects#environment",
          "arguments": [
            {
              "name": "name",
              "description": "<p>The name of the environment to be returned.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "environments",
          "description": "<p>A list of environments that are in this repository.</p>",
          "type": "EnvironmentConnection!",
          "id": "environmentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#environmentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "forkCount",
          "description": "<p>Returns how many forks there are of this repository in the whole network.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "forkingAllowed",
          "description": "<p>Whether this repository allows forks.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "forks",
          "description": "<p>A list of direct forked repositories.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "hasAnonymousAccessEnabled",
          "description": "<p>Indicates if the repository has anonymous Git read access feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasDiscussionsEnabled",
          "description": "<p>Indicates if the repository has the Discussions feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasIssuesEnabled",
          "description": "<p>Indicates if the repository has issues feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasProjectsEnabled",
          "description": "<p>Indicates if the repository has the Projects feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasVulnerabilityAlertsEnabled",
          "description": "<p>Whether vulnerability alerts are enabled for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasWikiEnabled",
          "description": "<p>Indicates if the repository has wiki feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "homepageUrl",
          "description": "<p>The repository's URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isArchived",
          "description": "<p>Indicates if the repository is unmaintained.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isBlankIssuesEnabled",
          "description": "<p>Returns true if blank issue creation is allowed.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isDisabled",
          "description": "<p>Returns whether or not this repository disabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isEmpty",
          "description": "<p>Returns whether or not this repository is empty.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isFork",
          "description": "<p>Identifies if the repository is a fork.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isInOrganization",
          "description": "<p>Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isLocked",
          "description": "<p>Indicates if the repository has been locked or not.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMirror",
          "description": "<p>Identifies if the repository is a mirror.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPrivate",
          "description": "<p>Identifies if the repository is private or internal.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isSecurityPolicyEnabled",
          "description": "<p>Returns true if this repository has a security policy.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isTemplate",
          "description": "<p>Identifies if the repository is a template that can be used to generate new repositories.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isUserConfigurationRepository",
          "description": "<p>Is this repository a user configuration repository?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issue",
          "description": "<p>Returns a single issue from the current repository by number.</p>",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the issue to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "issueOrPullRequest",
          "description": "<p>Returns a single issue-like object from the current repository by number.</p>",
          "type": "IssueOrPullRequest",
          "id": "issueorpullrequest",
          "kind": "unions",
          "href": "/graphql/reference/unions#issueorpullrequest",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the issue to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "issueTemplates",
          "description": "<p>Returns a list of issue templates associated to the repository.</p>",
          "type": "[IssueTemplate!]",
          "id": "issuetemplate",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetemplate"
        },
        {
          "name": "issues",
          "description": "<p>A list of issues that have been opened in the repository.</p>",
          "type": "IssueConnection!",
          "id": "issueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filtering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueFilters",
                "id": "issuefilters",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issuefilters"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the issues by.</p>",
              "type": {
                "name": "[IssueState!]",
                "id": "issuestate",
                "kind": "enums",
                "href": "/graphql/reference/enums#issuestate"
              }
            }
          ]
        },
        {
          "name": "label",
          "description": "<p>Returns a single label by name.</p>",
          "type": "Label",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label",
          "arguments": [
            {
              "name": "name",
              "description": "<p>Label name.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "labels",
          "description": "<p>A list of labels associated with the repository.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for labels returned from the connection.</p>",
              "type": {
                "name": "LabelOrder",
                "id": "labelorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#labelorder"
              }
            },
            {
              "name": "query",
              "description": "<p>If provided, searches labels by name and description.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "languages",
          "description": "<p>A list containing a breakdown of the language composition of the repository.</p>",
          "type": "LanguageConnection",
          "id": "languageconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#languageconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "LanguageOrder",
                "id": "languageorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#languageorder"
              }
            }
          ]
        },
        {
          "name": "latestRelease",
          "description": "<p>Get the latest release for the repository if one exists.</p>",
          "type": "Release",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release"
        },
        {
          "name": "licenseInfo",
          "description": "<p>The license associated with the repository.</p>",
          "type": "License",
          "id": "license",
          "kind": "objects",
          "href": "/graphql/reference/objects#license"
        },
        {
          "name": "lockReason",
          "description": "<p>The reason the repository has been locked.</p>",
          "type": "RepositoryLockReason",
          "id": "repositorylockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorylockreason"
        },
        {
          "name": "mentionableUsers",
          "description": "<p>A list of Users that can be mentioned in the context of the repository.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "query",
              "description": "<p>Filters users with query on user name and login.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "mergeCommitAllowed",
          "description": "<p>Whether or not PRs are merged with a merge commit on this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "mergeCommitMessage",
          "description": "<p>How the default commit message will be generated when merging a pull request.</p>",
          "type": "MergeCommitMessage!",
          "id": "mergecommitmessage",
          "kind": "enums",
          "href": "/graphql/reference/enums#mergecommitmessage"
        },
        {
          "name": "mergeCommitTitle",
          "description": "<p>How the default commit title will be generated when merging a pull request.</p>",
          "type": "MergeCommitTitle!",
          "id": "mergecommittitle",
          "kind": "enums",
          "href": "/graphql/reference/enums#mergecommittitle"
        },
        {
          "name": "milestone",
          "description": "<p>Returns a single milestone from the current repository by number.</p>",
          "type": "Milestone",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the milestone to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "milestones",
          "description": "<p>A list of milestones associated with the repository.</p>",
          "type": "MilestoneConnection",
          "id": "milestoneconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestoneconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for milestones.</p>",
              "type": {
                "name": "MilestoneOrder",
                "id": "milestoneorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#milestoneorder"
              }
            },
            {
              "name": "query",
              "description": "<p>Filters milestones with a query on the title.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "states",
              "description": "<p>Filter by the state of the milestones.</p>",
              "type": {
                "name": "[MilestoneState!]",
                "id": "milestonestate",
                "kind": "enums",
                "href": "/graphql/reference/enums#milestonestate"
              }
            }
          ]
        },
        {
          "name": "mirrorUrl",
          "description": "<p>The repository's original mirror URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>The name of the repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameWithOwner",
          "description": "<p>The repository's name with owner.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "object",
          "description": "<p>A Git object in the repository.</p>",
          "type": "GitObject",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject",
          "arguments": [
            {
              "name": "expression",
              "description": "<p>A Git revision expression suitable for rev-parse.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "oid",
              "description": "<p>The Git object ID.</p>",
              "type": {
                "name": "GitObjectID",
                "id": "gitobjectid",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#gitobjectid"
              }
            }
          ]
        },
        {
          "name": "openGraphImageUrl",
          "description": "<p>The image used to represent this repository in Open Graph data.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "owner",
          "description": "<p>The User owner of the repository.</p>",
          "type": "RepositoryOwner!",
          "id": "repositoryowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "packages",
          "description": "<p>A list of packages under the owner.</p>",
          "type": "PackageConnection!",
          "id": "packageconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "names",
              "description": "<p>Find packages by their names.</p>",
              "type": {
                "name": "[String]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering of the returned packages.</p>",
              "type": {
                "name": "PackageOrder",
                "id": "packageorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#packageorder"
              }
            },
            {
              "name": "packageType",
              "description": "<p>Filter registry package by type.</p>",
              "type": {
                "name": "PackageType",
                "id": "packagetype",
                "kind": "enums",
                "href": "/graphql/reference/enums#packagetype"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Find packages in a repository by ID.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            }
          ]
        },
        {
          "name": "parent",
          "description": "<p>The repository parent, if this is a fork.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "pinnedDiscussions",
          "description": "<p>A list of discussions that have been pinned in this repository.</p>",
          "type": "PinnedDiscussionConnection!",
          "id": "pinneddiscussionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinneddiscussionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "pinnedIssues",
          "description": "<p>A list of pinned issues for this repository.</p>",
          "type": "PinnedIssueConnection",
          "id": "pinnedissueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnedissueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "primaryLanguage",
          "description": "<p>The primary language of the repository's code.</p>",
          "type": "Language",
          "id": "language",
          "kind": "objects",
          "href": "/graphql/reference/objects#language"
        },
        {
          "name": "project",
          "description": "<p>Find project by number.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projects",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectConnection!",
          "id": "projectconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for projects returned from the connection.</p>",
              "type": {
                "name": "ProjectOrder",
                "id": "projectorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectorder"
              }
            },
            {
              "name": "search",
              "description": "<p>Query to search projects by, currently only searching by name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the projects by.</p>",
              "type": {
                "name": "[ProjectState!]",
                "id": "projectstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#projectstate"
              }
            }
          ]
        },
        {
          "name": "projectsResourcePath",
          "description": "<p>The HTTP path listing the repository's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsUrl",
          "description": "<p>The HTTP URL listing the repository's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "pullRequest",
          "description": "<p>Returns a single pull request from the current repository by number.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the pull request to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "pullRequestTemplates",
          "description": "<p>Returns a list of pull request templates associated to the repository.</p>",
          "type": "[PullRequestTemplate!]",
          "id": "pullrequesttemplate",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequesttemplate"
        },
        {
          "name": "pullRequests",
          "description": "<p>A list of pull requests that have been opened in the repository.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "pushedAt",
          "description": "<p>Identifies the date and time when the repository was last pushed to.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "rebaseMergeAllowed",
          "description": "<p>Whether or not rebase-merging is enabled on this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "recentProjects",
          "description": "<p>Recent projects that this user has modified in the context of the owner.</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "ref",
          "description": "<p>Fetch a given ref from the repository.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref",
          "arguments": [
            {
              "name": "qualifiedName",
              "description": "<p>The ref to retrieve. Fully qualified matches are checked in order\n(<code>refs/heads/master</code>) before falling back onto checks for short name matches (<code>master</code>).</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "refs",
          "description": "<p>Fetch a list of refs from the repository.</p>",
          "type": "RefConnection",
          "id": "refconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#refconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "direction",
              "description": "<p>DEPRECATED: use orderBy. The ordering direction.</p>",
              "type": {
                "name": "OrderDirection",
                "id": "orderdirection",
                "kind": "enums",
                "href": "/graphql/reference/enums#orderdirection"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for refs returned from the connection.</p>",
              "type": {
                "name": "RefOrder",
                "id": "reforder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reforder"
              }
            },
            {
              "name": "query",
              "description": "<p>Filters refs with query on name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "refPrefix",
              "description": "<p>A ref name prefix like <code>refs/heads/</code>, <code>refs/tags/</code>, etc.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "release",
          "description": "<p>Lookup a single release given various criteria.</p>",
          "type": "Release",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release",
          "arguments": [
            {
              "name": "tagName",
              "description": "<p>The name of the Tag the Release was created from.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "releases",
          "description": "<p>List of releases which are dependent on this repository.</p>",
          "type": "ReleaseConnection!",
          "id": "releaseconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "ReleaseOrder",
                "id": "releaseorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#releaseorder"
              }
            }
          ]
        },
        {
          "name": "repositoryTopics",
          "description": "<p>A list of applied repository-topic associations for this repository.</p>",
          "type": "RepositoryTopicConnection!",
          "id": "repositorytopicconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorytopicconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this repository.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "securityPolicyUrl",
          "description": "<p>The security policy URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "shortDescriptionHTML",
          "description": "<p>A description of the repository, rendered to HTML without any links in it.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html",
          "arguments": [
            {
              "name": "limit",
              "defaultValue": "200",
              "description": "<p>How many characters to return.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "squashMergeAllowed",
          "description": "<p>Whether or not squash-merging is enabled on this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "squashMergeCommitMessage",
          "description": "<p>How the default commit message will be generated when squash merging a pull request.</p>",
          "type": "SquashMergeCommitMessage!",
          "id": "squashmergecommitmessage",
          "kind": "enums",
          "href": "/graphql/reference/enums#squashmergecommitmessage"
        },
        {
          "name": "squashMergeCommitTitle",
          "description": "<p>How the default commit title will be generated when squash merging a pull request.</p>",
          "type": "SquashMergeCommitTitle!",
          "id": "squashmergecommittitle",
          "kind": "enums",
          "href": "/graphql/reference/enums#squashmergecommittitle"
        },
        {
          "name": "squashPrTitleUsedAsDefault",
          "description": "<p>Whether a squash merge commit can use the pull request title as default.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "isDeprecated": true,
          "deprecationReason": "<p><code>squashPrTitleUsedAsDefault</code> will be removed. Use <code>Repository.squashMergeCommitTitle</code> instead. Removal on 2023-04-01 UTC.</p>"
        },
        {
          "name": "sshUrl",
          "description": "<p>The SSH URL to clone this repository.</p>",
          "type": "GitSSHRemote!",
          "id": "gitsshremote",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitsshremote"
        },
        {
          "name": "stargazerCount",
          "description": "<p>Returns a count of how many stargazers there are on this object.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "stargazers",
          "description": "<p>A list of users who have starred this starrable.</p>",
          "type": "StargazerConnection!",
          "id": "stargazerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#starorder"
              }
            }
          ]
        },
        {
          "name": "submodules",
          "description": "<p>Returns a list of all submodules in this repository parsed from the\n.gitmodules file as of the default branch's HEAD commit.</p>",
          "type": "SubmoduleConnection!",
          "id": "submoduleconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#submoduleconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "tempCloneToken",
          "description": "<p>Temporary authentication token for cloning this repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "templateRepository",
          "description": "<p>The repository from which this repository was generated, if any.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this repository.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "usesCustomOpenGraphImage",
          "description": "<p>Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanAdminister",
          "description": "<p>Indicates whether the viewer has admin permissions on this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateProjects",
          "description": "<p>Can the current viewer create new projects on this owner.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdateTopics",
          "description": "<p>Indicates whether the viewer can update the topics of this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerDefaultCommitEmail",
          "description": "<p>The last commit email for the viewer.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "viewerDefaultMergeMethod",
          "description": "<p>The last used merge method by the viewer or the default for the repository.</p>",
          "type": "PullRequestMergeMethod!",
          "id": "pullrequestmergemethod",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestmergemethod"
        },
        {
          "name": "viewerHasStarred",
          "description": "<p>Returns a boolean indicating whether the viewing user has starred this starrable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerPermission",
          "description": "<p>The users permission level on the repository. Will return null if authenticated as an GitHub App.</p>",
          "type": "RepositoryPermission",
          "id": "repositorypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorypermission"
        },
        {
          "name": "viewerPossibleCommitEmails",
          "description": "<p>A list of emails this viewer can commit with.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        },
        {
          "name": "visibility",
          "description": "<p>Indicates the repository's visibility level.</p>",
          "type": "RepositoryVisibility!",
          "id": "repositoryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositoryvisibility"
        },
        {
          "name": "vulnerabilityAlert",
          "description": "<p>Returns a single vulnerability alert from the current repository by number.</p>",
          "type": "RepositoryVulnerabilityAlert",
          "id": "repositoryvulnerabilityalert",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalert",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the vulnerability alert to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "vulnerabilityAlerts",
          "description": "<p>A list of vulnerability alerts that are on this repository.</p>",
          "type": "RepositoryVulnerabilityAlertConnection",
          "id": "repositoryvulnerabilityalertconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalertconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "dependencyScopes",
              "description": "<p>Filter by the scope of the alert's dependency.</p>",
              "type": {
                "name": "[RepositoryVulnerabilityAlertDependencyScope!]",
                "id": "repositoryvulnerabilityalertdependencyscope",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryvulnerabilityalertdependencyscope"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "states",
              "description": "<p>Filter by the state of the alert.</p>",
              "type": {
                "name": "[RepositoryVulnerabilityAlertState!]",
                "id": "repositoryvulnerabilityalertstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryvulnerabilityalertstate"
              }
            }
          ]
        },
        {
          "name": "watchers",
          "description": "<p>A list of users watching the repository.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "webCommitSignoffRequired",
          "description": "<p>Whether contributors are required to sign off on web-based commits in this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "RepositoryCodeowners",
      "kind": "objects",
      "id": "repositorycodeowners",
      "href": "/graphql/reference/objects#repositorycodeowners",
      "description": "<p>Information extracted from a repository's <code>CODEOWNERS</code> file.</p>",
      "fields": [
        {
          "name": "errors",
          "description": "<p>Any problems that were encountered while parsing the <code>CODEOWNERS</code> file.</p>",
          "type": "[RepositoryCodeownersError!]!",
          "id": "repositorycodeownerserror",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorycodeownerserror"
        }
      ]
    },
    {
      "name": "RepositoryCodeownersError",
      "kind": "objects",
      "id": "repositorycodeownerserror",
      "href": "/graphql/reference/objects#repositorycodeownerserror",
      "description": "<p>An error in a <code>CODEOWNERS</code> file.</p>",
      "fields": [
        {
          "name": "column",
          "description": "<p>The column number where the error occurs.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "kind",
          "description": "<p>A short string describing the type of error.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "line",
          "description": "<p>The line number where the error occurs.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "message",
          "description": "<p>A complete description of the error, combining information from other fields.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>The path to the file when the error occurs.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "source",
          "description": "<p>The content of the line where the error occurs.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "suggestion",
          "description": "<p>A suggestion of how to fix the error.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RepositoryCollaboratorConnection",
      "kind": "objects",
      "id": "repositorycollaboratorconnection",
      "href": "/graphql/reference/objects#repositorycollaboratorconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryCollaboratorEdge]",
          "id": "repositorycollaboratoredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorycollaboratoredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryCollaboratorEdge",
      "kind": "objects",
      "id": "repositorycollaboratoredge",
      "href": "/graphql/reference/objects#repositorycollaboratoredge",
      "description": "<p>Represents a user who is a collaborator of a repository.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "permission",
          "description": "<p>The permission the user has on the repository.</p>",
          "type": "RepositoryPermission!",
          "id": "repositorypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorypermission"
        },
        {
          "name": "permissionSources",
          "description": "<p>A list of sources for the user's access to the repository.</p>",
          "type": "[PermissionSource!]",
          "id": "permissionsource",
          "kind": "objects",
          "href": "/graphql/reference/objects#permissionsource"
        }
      ]
    },
    {
      "name": "RepositoryConnection",
      "kind": "objects",
      "id": "repositoryconnection",
      "href": "/graphql/reference/objects#repositoryconnection",
      "description": "<p>A list of repositories owned by the subject.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryEdge]",
          "id": "repositoryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Repository]",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalDiskUsage",
          "description": "<p>The total size in kilobytes of all repositories in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryContactLink",
      "kind": "objects",
      "id": "repositorycontactlink",
      "href": "/graphql/reference/objects#repositorycontactlink",
      "description": "<p>A repository contact link.</p>",
      "fields": [
        {
          "name": "about",
          "description": "<p>The contact link purpose.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The contact link name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "url",
          "description": "<p>The contact link URL.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepositoryEdge",
      "kind": "objects",
      "id": "repositoryedge",
      "href": "/graphql/reference/objects#repositoryedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "RepositoryInvitation",
      "kind": "objects",
      "id": "repositoryinvitation",
      "href": "/graphql/reference/objects#repositoryinvitation",
      "description": "<p>An invitation for a user to be added to a repository.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "email",
          "description": "<p>The email address that received the invitation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "invitee",
          "description": "<p>The user who received the invitation.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "inviter",
          "description": "<p>The user who created the invitation.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "permalink",
          "description": "<p>The permalink for this repository invitation.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "permission",
          "description": "<p>The permission granted on this repository by this invitation.</p>",
          "type": "RepositoryPermission!",
          "id": "repositorypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorypermission"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the user is invited to.</p>",
          "type": "RepositoryInfo",
          "id": "repositoryinfo",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryinfo"
        }
      ]
    },
    {
      "name": "RepositoryInvitationConnection",
      "kind": "objects",
      "id": "repositoryinvitationconnection",
      "href": "/graphql/reference/objects#repositoryinvitationconnection",
      "description": "<p>A list of repository invitations.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryInvitationEdge]",
          "id": "repositoryinvitationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryinvitationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[RepositoryInvitation]",
          "id": "repositoryinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryinvitation"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryInvitationEdge",
      "kind": "objects",
      "id": "repositoryinvitationedge",
      "href": "/graphql/reference/objects#repositoryinvitationedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "RepositoryInvitation",
          "id": "repositoryinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryinvitation"
        }
      ]
    },
    {
      "name": "RepositoryMigration",
      "kind": "objects",
      "id": "repositorymigration",
      "href": "/graphql/reference/objects#repositorymigration",
      "description": "<p>A GitHub Enterprise Importer (GEI) repository migration.</p>",
      "implements": [
        {
          "name": "Migration",
          "id": "migration",
          "href": "/graphql/reference/interfaces#migration"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "continueOnError",
          "description": "<p>The migration flag to continue on error.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "failureReason",
          "description": "<p>The reason the migration failed.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "migrationLogUrl",
          "description": "<p>The URL for the migration log (expires 1 day after migration completes).</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "migrationSource",
          "description": "<p>The migration source.</p>",
          "type": "MigrationSource!",
          "id": "migrationsource",
          "kind": "objects",
          "href": "/graphql/reference/objects#migrationsource"
        },
        {
          "name": "repositoryName",
          "description": "<p>The target repository name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "sourceUrl",
          "description": "<p>The migration source URL, for example <code>https://github.com</code> or <code>https://monalisa.ghe.com</code>.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>The migration state.</p>",
          "type": "MigrationState!",
          "id": "migrationstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#migrationstate"
        },
        {
          "name": "warningsCount",
          "description": "<p>The number of warnings encountered for this migration. To review the warnings,\ncheck the <a href=\"https://docs.github.com/en/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer\">Migration Log</a>.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryMigrationConnection",
      "kind": "objects",
      "id": "repositorymigrationconnection",
      "href": "/graphql/reference/objects#repositorymigrationconnection",
      "description": "<p>The connection type for RepositoryMigration.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryMigrationEdge]",
          "id": "repositorymigrationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorymigrationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[RepositoryMigration]",
          "id": "repositorymigration",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorymigration"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryMigrationEdge",
      "kind": "objects",
      "id": "repositorymigrationedge",
      "href": "/graphql/reference/objects#repositorymigrationedge",
      "description": "<p>Represents a repository migration.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "RepositoryMigration",
          "id": "repositorymigration",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorymigration"
        }
      ]
    },
    {
      "name": "RepositoryTopic",
      "kind": "objects",
      "id": "repositorytopic",
      "href": "/graphql/reference/objects#repositorytopic",
      "description": "<p>A repository-topic connects a repository to a topic.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this repository-topic.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "topic",
          "description": "<p>The topic.</p>",
          "type": "Topic!",
          "id": "topic",
          "kind": "objects",
          "href": "/graphql/reference/objects#topic"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this repository-topic.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepositoryTopicConnection",
      "kind": "objects",
      "id": "repositorytopicconnection",
      "href": "/graphql/reference/objects#repositorytopicconnection",
      "description": "<p>The connection type for RepositoryTopic.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryTopicEdge]",
          "id": "repositorytopicedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorytopicedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[RepositoryTopic]",
          "id": "repositorytopic",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorytopic"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryTopicEdge",
      "kind": "objects",
      "id": "repositorytopicedge",
      "href": "/graphql/reference/objects#repositorytopicedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "RepositoryTopic",
          "id": "repositorytopic",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorytopic"
        }
      ]
    },
    {
      "name": "RepositoryVisibilityChangeDisableAuditEntry",
      "kind": "objects",
      "id": "repositoryvisibilitychangedisableauditentry",
      "href": "/graphql/reference/objects#repositoryvisibilitychangedisableauditentry",
      "description": "<p>Audit log entry for a repository_visibility_change.disable event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "EnterpriseAuditEntryData",
          "id": "enterpriseauditentrydata",
          "href": "/graphql/reference/interfaces#enterpriseauditentrydata"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "enterpriseResourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "enterpriseSlug",
          "description": "<p>The slug of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseUrl",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepositoryVisibilityChangeEnableAuditEntry",
      "kind": "objects",
      "id": "repositoryvisibilitychangeenableauditentry",
      "href": "/graphql/reference/objects#repositoryvisibilitychangeenableauditentry",
      "description": "<p>Audit log entry for a repository_visibility_change.enable event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "EnterpriseAuditEntryData",
          "id": "enterpriseauditentrydata",
          "href": "/graphql/reference/interfaces#enterpriseauditentrydata"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "enterpriseResourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "enterpriseSlug",
          "description": "<p>The slug of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseUrl",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepositoryVulnerabilityAlert",
      "kind": "objects",
      "id": "repositoryvulnerabilityalert",
      "href": "/graphql/reference/objects#repositoryvulnerabilityalert",
      "description": "<p>A Dependabot alert for a repository with a dependency affected by a security vulnerability.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>When was the alert created?.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "dependabotUpdate",
          "description": "<p>The associated Dependabot update.</p>",
          "type": "DependabotUpdate",
          "id": "dependabotupdate",
          "kind": "objects",
          "href": "/graphql/reference/objects#dependabotupdate"
        },
        {
          "name": "dependencyScope",
          "description": "<p>The scope of an alert's dependency.</p>",
          "type": "RepositoryVulnerabilityAlertDependencyScope",
          "id": "repositoryvulnerabilityalertdependencyscope",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositoryvulnerabilityalertdependencyscope"
        },
        {
          "name": "dismissComment",
          "description": "<p>Comment explaining the reason the alert was dismissed.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissReason",
          "description": "<p>The reason the alert was dismissed.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissedAt",
          "description": "<p>When was the alert dismissed?.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "dismisser",
          "description": "<p>The user who dismissed the alert.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "fixedAt",
          "description": "<p>When was the alert fixed?.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "number",
          "description": "<p>Identifies the alert number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "repository",
          "description": "<p>The associated repository.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "securityAdvisory",
          "description": "<p>The associated security advisory.</p>",
          "type": "SecurityAdvisory",
          "id": "securityadvisory",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisory"
        },
        {
          "name": "securityVulnerability",
          "description": "<p>The associated security vulnerability.</p>",
          "type": "SecurityVulnerability",
          "id": "securityvulnerability",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerability"
        },
        {
          "name": "state",
          "description": "<p>Identifies the state of the alert.</p>",
          "type": "RepositoryVulnerabilityAlertState!",
          "id": "repositoryvulnerabilityalertstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositoryvulnerabilityalertstate"
        },
        {
          "name": "vulnerableManifestFilename",
          "description": "<p>The vulnerable manifest filename.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "vulnerableManifestPath",
          "description": "<p>The vulnerable manifest path.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "vulnerableRequirements",
          "description": "<p>The vulnerable requirements.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RepositoryVulnerabilityAlertConnection",
      "kind": "objects",
      "id": "repositoryvulnerabilityalertconnection",
      "href": "/graphql/reference/objects#repositoryvulnerabilityalertconnection",
      "description": "<p>The connection type for RepositoryVulnerabilityAlert.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryVulnerabilityAlertEdge]",
          "id": "repositoryvulnerabilityalertedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalertedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[RepositoryVulnerabilityAlert]",
          "id": "repositoryvulnerabilityalert",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalert"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryVulnerabilityAlertEdge",
      "kind": "objects",
      "id": "repositoryvulnerabilityalertedge",
      "href": "/graphql/reference/objects#repositoryvulnerabilityalertedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "RepositoryVulnerabilityAlert",
          "id": "repositoryvulnerabilityalert",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalert"
        }
      ]
    },
    {
      "name": "RequestedReviewerConnection",
      "kind": "objects",
      "id": "requestedreviewerconnection",
      "href": "/graphql/reference/objects#requestedreviewerconnection",
      "description": "<p>The connection type for RequestedReviewer.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RequestedReviewerEdge]",
          "id": "requestedrevieweredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#requestedrevieweredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[RequestedReviewer]",
          "id": "requestedreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#requestedreviewer"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RequestedReviewerEdge",
      "kind": "objects",
      "id": "requestedrevieweredge",
      "href": "/graphql/reference/objects#requestedrevieweredge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "RequestedReviewer",
          "id": "requestedreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#requestedreviewer"
        }
      ]
    },
    {
      "name": "RequiredStatusCheckDescription",
      "kind": "objects",
      "id": "requiredstatuscheckdescription",
      "href": "/graphql/reference/objects#requiredstatuscheckdescription",
      "description": "<p>Represents a required status check for a protected branch, but not any specific run of that check.</p>",
      "fields": [
        {
          "name": "app",
          "description": "<p>The App that must provide this status in order for it to be accepted.</p>",
          "type": "App",
          "id": "app",
          "kind": "objects",
          "href": "/graphql/reference/objects#app"
        },
        {
          "name": "context",
          "description": "<p>The name of this status.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RestrictedContribution",
      "kind": "objects",
      "id": "restrictedcontribution",
      "href": "/graphql/reference/objects#restrictedcontribution",
      "description": "<p>Represents a private contribution a user made on GitHub.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ReviewDismissalAllowance",
      "kind": "objects",
      "id": "reviewdismissalallowance",
      "href": "/graphql/reference/objects#reviewdismissalallowance",
      "description": "<p>A user, team, or app who has the ability to dismiss a review on a protected branch.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>The actor that can dismiss.</p>",
          "type": "ReviewDismissalAllowanceActor",
          "id": "reviewdismissalallowanceactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#reviewdismissalallowanceactor"
        },
        {
          "name": "branchProtectionRule",
          "description": "<p>Identifies the branch protection rule associated with the allowed user, team, or app.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "ReviewDismissalAllowanceConnection",
      "kind": "objects",
      "id": "reviewdismissalallowanceconnection",
      "href": "/graphql/reference/objects#reviewdismissalallowanceconnection",
      "description": "<p>The connection type for ReviewDismissalAllowance.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReviewDismissalAllowanceEdge]",
          "id": "reviewdismissalallowanceedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewdismissalallowanceedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ReviewDismissalAllowance]",
          "id": "reviewdismissalallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewdismissalallowance"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReviewDismissalAllowanceEdge",
      "kind": "objects",
      "id": "reviewdismissalallowanceedge",
      "href": "/graphql/reference/objects#reviewdismissalallowanceedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ReviewDismissalAllowance",
          "id": "reviewdismissalallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewdismissalallowance"
        }
      ]
    },
    {
      "name": "ReviewDismissedEvent",
      "kind": "objects",
      "id": "reviewdismissedevent",
      "href": "/graphql/reference/objects#reviewdismissedevent",
      "description": "<p>Represents a<code>review_dismissed</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "dismissalMessage",
          "description": "<p>Identifies the optional message associated with the<code>review_dismissed</code>event.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissalMessageHTML",
          "description": "<p>Identifies the optional message associated with the event, rendered to HTML.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "previousReviewState",
          "description": "<p>Identifies the previous state of the review with the<code>review_dismissed</code>event.</p>",
          "type": "PullRequestReviewState!",
          "id": "pullrequestreviewstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewstate"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "pullRequestCommit",
          "description": "<p>Identifies the commit which caused the review to become stale.</p>",
          "type": "PullRequestCommit",
          "id": "pullrequestcommit",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommit"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this review dismissed event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "review",
          "description": "<p>Identifies the review associated with the<code>review_dismissed</code>event.</p>",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this review dismissed event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ReviewRequest",
      "kind": "objects",
      "id": "reviewrequest",
      "href": "/graphql/reference/objects#reviewrequest",
      "description": "<p>A request for a user to review a pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "asCodeOwner",
          "description": "<p>Whether this request was created for a code owner.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>Identifies the pull request associated with this review request.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "requestedReviewer",
          "description": "<p>The reviewer that is requested.</p>",
          "type": "RequestedReviewer",
          "id": "requestedreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#requestedreviewer"
        }
      ]
    },
    {
      "name": "ReviewRequestConnection",
      "kind": "objects",
      "id": "reviewrequestconnection",
      "href": "/graphql/reference/objects#reviewrequestconnection",
      "description": "<p>The connection type for ReviewRequest.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReviewRequestEdge]",
          "id": "reviewrequestedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewrequestedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ReviewRequest]",
          "id": "reviewrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewrequest"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReviewRequestEdge",
      "kind": "objects",
      "id": "reviewrequestedge",
      "href": "/graphql/reference/objects#reviewrequestedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ReviewRequest",
          "id": "reviewrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewrequest"
        }
      ]
    },
    {
      "name": "ReviewRequestRemovedEvent",
      "kind": "objects",
      "id": "reviewrequestremovedevent",
      "href": "/graphql/reference/objects#reviewrequestremovedevent",
      "description": "<p>Represents an<code>review_request_removed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "requestedReviewer",
          "description": "<p>Identifies the reviewer whose review request was removed.</p>",
          "type": "RequestedReviewer",
          "id": "requestedreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#requestedreviewer"
        }
      ]
    },
    {
      "name": "ReviewRequestedEvent",
      "kind": "objects",
      "id": "reviewrequestedevent",
      "href": "/graphql/reference/objects#reviewrequestedevent",
      "description": "<p>Represents an<code>review_requested</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "requestedReviewer",
          "description": "<p>Identifies the reviewer whose review was requested.</p>",
          "type": "RequestedReviewer",
          "id": "requestedreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#requestedreviewer"
        }
      ]
    },
    {
      "name": "ReviewStatusHovercardContext",
      "kind": "objects",
      "id": "reviewstatushovercardcontext",
      "href": "/graphql/reference/objects#reviewstatushovercardcontext",
      "description": "<p>A hovercard context with a message describing the current code review state of the pull\nrequest.</p>",
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "reviewDecision",
          "description": "<p>The current status of the pull request with respect to code review.</p>",
          "type": "PullRequestReviewDecision",
          "id": "pullrequestreviewdecision",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewdecision"
        }
      ]
    },
    {
      "name": "SavedReply",
      "kind": "objects",
      "id": "savedreply",
      "href": "/graphql/reference/objects#savedreply",
      "description": "<p>A Saved Reply is text a user can use to reply quickly.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "body",
          "description": "<p>The body of the saved reply.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The saved reply body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "title",
          "description": "<p>The title of the saved reply.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "user",
          "description": "<p>The user that saved this reply.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        }
      ]
    },
    {
      "name": "SavedReplyConnection",
      "kind": "objects",
      "id": "savedreplyconnection",
      "href": "/graphql/reference/objects#savedreplyconnection",
      "description": "<p>The connection type for SavedReply.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[SavedReplyEdge]",
          "id": "savedreplyedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#savedreplyedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[SavedReply]",
          "id": "savedreply",
          "kind": "objects",
          "href": "/graphql/reference/objects#savedreply"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "SavedReplyEdge",
      "kind": "objects",
      "id": "savedreplyedge",
      "href": "/graphql/reference/objects#savedreplyedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "SavedReply",
          "id": "savedreply",
          "kind": "objects",
          "href": "/graphql/reference/objects#savedreply"
        }
      ]
    },
    {
      "name": "SearchResultItemConnection",
      "kind": "objects",
      "id": "searchresultitemconnection",
      "href": "/graphql/reference/objects#searchresultitemconnection",
      "description": "<p>A list of results that matched against a search query. Regardless of the number\nof matches, a maximum of 1,000 results will be available across all types,\npotentially split across many pages.</p>",
      "fields": [
        {
          "name": "codeCount",
          "description": "<p>The total number of pieces of code that matched the search query. Regardless\nof the total number of matches, a maximum of 1,000 results will be available\nacross all types.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "discussionCount",
          "description": "<p>The total number of discussions that matched the search query. Regardless of\nthe total number of matches, a maximum of 1,000 results will be available\nacross all types.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[SearchResultItemEdge]",
          "id": "searchresultitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#searchresultitemedge"
        },
        {
          "name": "issueCount",
          "description": "<p>The total number of issues that matched the search query. Regardless of the\ntotal number of matches, a maximum of 1,000 results will be available across all types.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[SearchResultItem]",
          "id": "searchresultitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#searchresultitem"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "repositoryCount",
          "description": "<p>The total number of repositories that matched the search query. Regardless of\nthe total number of matches, a maximum of 1,000 results will be available\nacross all types.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "userCount",
          "description": "<p>The total number of users that matched the search query. Regardless of the\ntotal number of matches, a maximum of 1,000 results will be available across all types.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "wikiCount",
          "description": "<p>The total number of wiki pages that matched the search query. Regardless of\nthe total number of matches, a maximum of 1,000 results will be available\nacross all types.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "SearchResultItemEdge",
      "kind": "objects",
      "id": "searchresultitemedge",
      "href": "/graphql/reference/objects#searchresultitemedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "SearchResultItem",
          "id": "searchresultitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#searchresultitem"
        },
        {
          "name": "textMatches",
          "description": "<p>Text matches on the result found.</p>",
          "type": "[TextMatch]",
          "id": "textmatch",
          "kind": "objects",
          "href": "/graphql/reference/objects#textmatch"
        }
      ]
    },
    {
      "name": "SecurityAdvisory",
      "kind": "objects",
      "id": "securityadvisory",
      "href": "/graphql/reference/objects#securityadvisory",
      "description": "<p>A GitHub Security Advisory.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "classification",
          "description": "<p>The classification of the advisory.</p>",
          "type": "SecurityAdvisoryClassification!",
          "id": "securityadvisoryclassification",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryclassification"
        },
        {
          "name": "cvss",
          "description": "<p>The CVSS associated with this advisory.</p>",
          "type": "CVSS!",
          "id": "cvss",
          "kind": "objects",
          "href": "/graphql/reference/objects#cvss"
        },
        {
          "name": "cwes",
          "description": "<p>CWEs associated with this Advisory.</p>",
          "type": "CWEConnection!",
          "id": "cweconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#cweconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>This is a long plaintext description of the advisory.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ghsaId",
          "description": "<p>The GitHub Security Advisory ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "identifiers",
          "description": "<p>A list of identifiers for this advisory.</p>",
          "type": "[SecurityAdvisoryIdentifier!]!",
          "id": "securityadvisoryidentifier",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisoryidentifier"
        },
        {
          "name": "notificationsPermalink",
          "description": "<p>The permalink for the advisory's dependabot alerts page.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "origin",
          "description": "<p>The organization that originated the advisory.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "permalink",
          "description": "<p>The permalink for the advisory.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "publishedAt",
          "description": "<p>When the advisory was published.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "references",
          "description": "<p>A list of references for this advisory.</p>",
          "type": "[SecurityAdvisoryReference!]!",
          "id": "securityadvisoryreference",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisoryreference"
        },
        {
          "name": "severity",
          "description": "<p>The severity of the advisory.</p>",
          "type": "SecurityAdvisorySeverity!",
          "id": "securityadvisoryseverity",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryseverity"
        },
        {
          "name": "summary",
          "description": "<p>A short plaintext summary of the advisory.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>When the advisory was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "vulnerabilities",
          "description": "<p>Vulnerabilities associated with this Advisory.</p>",
          "type": "SecurityVulnerabilityConnection!",
          "id": "securityvulnerabilityconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerabilityconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "classifications",
              "description": "<p>A list of advisory classifications to filter vulnerabilities by.</p>",
              "type": {
                "name": "[SecurityAdvisoryClassification!]",
                "id": "securityadvisoryclassification",
                "kind": "enums",
                "href": "/graphql/reference/enums#securityadvisoryclassification"
              }
            },
            {
              "name": "ecosystem",
              "description": "<p>An ecosystem to filter vulnerabilities by.</p>",
              "type": {
                "name": "SecurityAdvisoryEcosystem",
                "id": "securityadvisoryecosystem",
                "kind": "enums",
                "href": "/graphql/reference/enums#securityadvisoryecosystem"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "package",
              "description": "<p>A package name to filter vulnerabilities by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "severities",
              "description": "<p>A list of severities to filter vulnerabilities by.</p>",
              "type": {
                "name": "[SecurityAdvisorySeverity!]",
                "id": "securityadvisoryseverity",
                "kind": "enums",
                "href": "/graphql/reference/enums#securityadvisoryseverity"
              }
            }
          ]
        },
        {
          "name": "withdrawnAt",
          "description": "<p>When the advisory was withdrawn, if it has been withdrawn.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryConnection",
      "kind": "objects",
      "id": "securityadvisoryconnection",
      "href": "/graphql/reference/objects#securityadvisoryconnection",
      "description": "<p>The connection type for SecurityAdvisory.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[SecurityAdvisoryEdge]",
          "id": "securityadvisoryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisoryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[SecurityAdvisory]",
          "id": "securityadvisory",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisory"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryEdge",
      "kind": "objects",
      "id": "securityadvisoryedge",
      "href": "/graphql/reference/objects#securityadvisoryedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "SecurityAdvisory",
          "id": "securityadvisory",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisory"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryIdentifier",
      "kind": "objects",
      "id": "securityadvisoryidentifier",
      "href": "/graphql/reference/objects#securityadvisoryidentifier",
      "description": "<p>A GitHub Security Advisory Identifier.</p>",
      "fields": [
        {
          "name": "type",
          "description": "<p>The identifier type, e.g. GHSA, CVE.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "value",
          "description": "<p>The identifier.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryPackage",
      "kind": "objects",
      "id": "securityadvisorypackage",
      "href": "/graphql/reference/objects#securityadvisorypackage",
      "description": "<p>An individual package.</p>",
      "fields": [
        {
          "name": "ecosystem",
          "description": "<p>The ecosystem the package belongs to, e.g. RUBYGEMS, NPM.</p>",
          "type": "SecurityAdvisoryEcosystem!",
          "id": "securityadvisoryecosystem",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryecosystem"
        },
        {
          "name": "name",
          "description": "<p>The package name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryPackageVersion",
      "kind": "objects",
      "id": "securityadvisorypackageversion",
      "href": "/graphql/reference/objects#securityadvisorypackageversion",
      "description": "<p>An individual package version.</p>",
      "fields": [
        {
          "name": "identifier",
          "description": "<p>The package name or version.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryReference",
      "kind": "objects",
      "id": "securityadvisoryreference",
      "href": "/graphql/reference/objects#securityadvisoryreference",
      "description": "<p>A GitHub Security Advisory Reference.</p>",
      "fields": [
        {
          "name": "url",
          "description": "<p>A publicly accessible reference.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "SecurityVulnerability",
      "kind": "objects",
      "id": "securityvulnerability",
      "href": "/graphql/reference/objects#securityvulnerability",
      "description": "<p>An individual vulnerability within an Advisory.</p>",
      "fields": [
        {
          "name": "advisory",
          "description": "<p>The Advisory associated with this Vulnerability.</p>",
          "type": "SecurityAdvisory!",
          "id": "securityadvisory",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisory"
        },
        {
          "name": "firstPatchedVersion",
          "description": "<p>The first version containing a fix for the vulnerability.</p>",
          "type": "SecurityAdvisoryPackageVersion",
          "id": "securityadvisorypackageversion",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisorypackageversion"
        },
        {
          "name": "package",
          "description": "<p>A description of the vulnerable package.</p>",
          "type": "SecurityAdvisoryPackage!",
          "id": "securityadvisorypackage",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisorypackage"
        },
        {
          "name": "severity",
          "description": "<p>The severity of the vulnerability within this package.</p>",
          "type": "SecurityAdvisorySeverity!",
          "id": "securityadvisoryseverity",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryseverity"
        },
        {
          "name": "updatedAt",
          "description": "<p>When the vulnerability was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "vulnerableVersionRange",
          "description": "<p>A string that describes the vulnerable package versions.\nThis string follows a basic syntax with a few forms.</p>\n<ul>\n<li><code>= 0.2.0</code> denotes a single vulnerable version.</li>\n<li><code>&#x3C;= 1.0.8</code> denotes a version range up to and including the specified version</li>\n<li><code>&#x3C; 0.1.11</code> denotes a version range up to, but excluding, the specified version</li>\n<li><code>>= 4.3.0, &#x3C; 4.3.5</code> denotes a version range with a known minimum and maximum version.</li>\n<li><code>>= 0.0.1</code> denotes a version range with a known minimum, but no known maximum.</li>\n</ul>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SecurityVulnerabilityConnection",
      "kind": "objects",
      "id": "securityvulnerabilityconnection",
      "href": "/graphql/reference/objects#securityvulnerabilityconnection",
      "description": "<p>The connection type for SecurityVulnerability.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[SecurityVulnerabilityEdge]",
          "id": "securityvulnerabilityedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerabilityedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[SecurityVulnerability]",
          "id": "securityvulnerability",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerability"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "SecurityVulnerabilityEdge",
      "kind": "objects",
      "id": "securityvulnerabilityedge",
      "href": "/graphql/reference/objects#securityvulnerabilityedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "SecurityVulnerability",
          "id": "securityvulnerability",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerability"
        }
      ]
    },
    {
      "name": "SmimeSignature",
      "kind": "objects",
      "id": "smimesignature",
      "href": "/graphql/reference/objects#smimesignature",
      "description": "<p>Represents an S/MIME signature on a Commit or Tag.</p>",
      "implements": [
        {
          "name": "GitSignature",
          "id": "gitsignature",
          "href": "/graphql/reference/interfaces#gitsignature"
        }
      ],
      "fields": [
        {
          "name": "email",
          "description": "<p>Email used to sign this object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isValid",
          "description": "<p>True if the signature is valid and verified by GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "payload",
          "description": "<p>Payload for GPG signing object. Raw ODB object without the signature header.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signature",
          "description": "<p>ASCII-armored signature header from object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signer",
          "description": "<p>GitHub user corresponding to the email signing this commit.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "state",
          "description": "<p>The state of this signature. <code>VALID</code> if signature is valid and verified by\nGitHub, otherwise represents reason why signature is considered invalid.</p>",
          "type": "GitSignatureState!",
          "id": "gitsignaturestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#gitsignaturestate"
        },
        {
          "name": "wasSignedByGitHub",
          "description": "<p>True if the signature was made with GitHub's signing key.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "SocialAccount",
      "kind": "objects",
      "id": "socialaccount",
      "href": "/graphql/reference/objects#socialaccount",
      "description": "<p>Social media profile associated with a user.</p>",
      "fields": [
        {
          "name": "displayName",
          "description": "<p>Name of the social media account as it appears on the profile.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "provider",
          "description": "<p>Software or company that hosts the social media account.</p>",
          "type": "SocialAccountProvider!",
          "id": "socialaccountprovider",
          "kind": "enums",
          "href": "/graphql/reference/enums#socialaccountprovider"
        },
        {
          "name": "url",
          "description": "<p>URL of the social media account.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "SocialAccountConnection",
      "kind": "objects",
      "id": "socialaccountconnection",
      "href": "/graphql/reference/objects#socialaccountconnection",
      "description": "<p>The connection type for SocialAccount.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[SocialAccountEdge]",
          "id": "socialaccountedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#socialaccountedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[SocialAccount]",
          "id": "socialaccount",
          "kind": "objects",
          "href": "/graphql/reference/objects#socialaccount"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "SocialAccountEdge",
      "kind": "objects",
      "id": "socialaccountedge",
      "href": "/graphql/reference/objects#socialaccountedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "SocialAccount",
          "id": "socialaccount",
          "kind": "objects",
          "href": "/graphql/reference/objects#socialaccount"
        }
      ]
    },
    {
      "name": "SshSignature",
      "kind": "objects",
      "id": "sshsignature",
      "href": "/graphql/reference/objects#sshsignature",
      "description": "<p>Represents an SSH signature on a Commit or Tag.</p>",
      "implements": [
        {
          "name": "GitSignature",
          "id": "gitsignature",
          "href": "/graphql/reference/interfaces#gitsignature"
        }
      ],
      "fields": [
        {
          "name": "email",
          "description": "<p>Email used to sign this object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isValid",
          "description": "<p>True if the signature is valid and verified by GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "keyFingerprint",
          "description": "<p>Hex-encoded fingerprint of the key that signed this object.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "payload",
          "description": "<p>Payload for GPG signing object. Raw ODB object without the signature header.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signature",
          "description": "<p>ASCII-armored signature header from object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signer",
          "description": "<p>GitHub user corresponding to the email signing this commit.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "state",
          "description": "<p>The state of this signature. <code>VALID</code> if signature is valid and verified by\nGitHub, otherwise represents reason why signature is considered invalid.</p>",
          "type": "GitSignatureState!",
          "id": "gitsignaturestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#gitsignaturestate"
        },
        {
          "name": "wasSignedByGitHub",
          "description": "<p>True if the signature was made with GitHub's signing key.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "StargazerConnection",
      "kind": "objects",
      "id": "stargazerconnection",
      "href": "/graphql/reference/objects#stargazerconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[StargazerEdge]",
          "id": "stargazeredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazeredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "StargazerEdge",
      "kind": "objects",
      "id": "stargazeredge",
      "href": "/graphql/reference/objects#stargazeredge",
      "description": "<p>Represents a user that's starred a repository.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "starredAt",
          "description": "<p>Identifies when the item was starred.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "StarredRepositoryConnection",
      "kind": "objects",
      "id": "starredrepositoryconnection",
      "href": "/graphql/reference/objects#starredrepositoryconnection",
      "description": "<p>The connection type for Repository.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[StarredRepositoryEdge]",
          "id": "starredrepositoryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#starredrepositoryedge"
        },
        {
          "name": "isOverLimit",
          "description": "<p>Is the list of stars for this user truncated? This is true for users that have many stars.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Repository]",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "StarredRepositoryEdge",
      "kind": "objects",
      "id": "starredrepositoryedge",
      "href": "/graphql/reference/objects#starredrepositoryedge",
      "description": "<p>Represents a starred repository.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "starredAt",
          "description": "<p>Identifies when the item was starred.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "Status",
      "kind": "objects",
      "id": "status",
      "href": "/graphql/reference/objects#status",
      "description": "<p>Represents a commit status.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "combinedContexts",
          "description": "<p>A list of status contexts and check runs for this commit.</p>",
          "type": "StatusCheckRollupContextConnection!",
          "id": "statuscheckrollupcontextconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#statuscheckrollupcontextconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>The commit this status is attached to.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "context",
          "description": "<p>Looks up an individual status context by context name.</p>",
          "type": "StatusContext",
          "id": "statuscontext",
          "kind": "objects",
          "href": "/graphql/reference/objects#statuscontext",
          "arguments": [
            {
              "name": "name",
              "description": "<p>The context name.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "contexts",
          "description": "<p>The individual status contexts for this commit.</p>",
          "type": "[StatusContext!]!",
          "id": "statuscontext",
          "kind": "objects",
          "href": "/graphql/reference/objects#statuscontext"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "state",
          "description": "<p>The combined commit status.</p>",
          "type": "StatusState!",
          "id": "statusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#statusstate"
        }
      ]
    },
    {
      "name": "StatusCheckRollup",
      "kind": "objects",
      "id": "statuscheckrollup",
      "href": "/graphql/reference/objects#statuscheckrollup",
      "description": "<p>Represents the rollup for both the check runs and status for a commit.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "commit",
          "description": "<p>The commit the status and check runs are attached to.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "contexts",
          "description": "<p>A list of status contexts and check runs for this commit.</p>",
          "type": "StatusCheckRollupContextConnection!",
          "id": "statuscheckrollupcontextconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#statuscheckrollupcontextconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "state",
          "description": "<p>The combined status for the commit.</p>",
          "type": "StatusState!",
          "id": "statusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#statusstate"
        }
      ]
    },
    {
      "name": "StatusCheckRollupContextConnection",
      "kind": "objects",
      "id": "statuscheckrollupcontextconnection",
      "href": "/graphql/reference/objects#statuscheckrollupcontextconnection",
      "description": "<p>The connection type for StatusCheckRollupContext.</p>",
      "fields": [
        {
          "name": "checkRunCount",
          "description": "<p>The number of check runs in this rollup.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "checkRunCountsByState",
          "description": "<p>Counts of check runs by state.</p>",
          "type": "[CheckRunStateCount!]",
          "id": "checkrunstatecount",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrunstatecount"
        },
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[StatusCheckRollupContextEdge]",
          "id": "statuscheckrollupcontextedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#statuscheckrollupcontextedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[StatusCheckRollupContext]",
          "id": "statuscheckrollupcontext",
          "kind": "unions",
          "href": "/graphql/reference/unions#statuscheckrollupcontext"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "statusContextCount",
          "description": "<p>The number of status contexts in this rollup.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "statusContextCountsByState",
          "description": "<p>Counts of status contexts by state.</p>",
          "type": "[StatusContextStateCount!]",
          "id": "statuscontextstatecount",
          "kind": "objects",
          "href": "/graphql/reference/objects#statuscontextstatecount"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "StatusCheckRollupContextEdge",
      "kind": "objects",
      "id": "statuscheckrollupcontextedge",
      "href": "/graphql/reference/objects#statuscheckrollupcontextedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "StatusCheckRollupContext",
          "id": "statuscheckrollupcontext",
          "kind": "unions",
          "href": "/graphql/reference/unions#statuscheckrollupcontext"
        }
      ]
    },
    {
      "name": "StatusContext",
      "kind": "objects",
      "id": "statuscontext",
      "href": "/graphql/reference/objects#statuscontext",
      "description": "<p>Represents an individual commit status context.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RequirableByPullRequest",
          "id": "requirablebypullrequest",
          "href": "/graphql/reference/interfaces#requirablebypullrequest"
        }
      ],
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>The avatar of the OAuth application or the user that created the status.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "defaultValue": "40",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>This commit this status context is attached to.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "context",
          "description": "<p>The name of this status context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created this status context.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "description",
          "description": "<p>The description for this status context.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isRequired",
          "description": "<p>Whether this is required to pass before merging for a specific pull request.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "pullRequestId",
              "description": "<p>The id of the pull request this is required for.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            },
            {
              "name": "pullRequestNumber",
              "description": "<p>The number of the pull request this is required for.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "state",
          "description": "<p>The state of this status context.</p>",
          "type": "StatusState!",
          "id": "statusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#statusstate"
        },
        {
          "name": "targetUrl",
          "description": "<p>The URL for this status context.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "StatusContextStateCount",
      "kind": "objects",
      "id": "statuscontextstatecount",
      "href": "/graphql/reference/objects#statuscontextstatecount",
      "description": "<p>Represents a count of the state of a status context.</p>",
      "fields": [
        {
          "name": "count",
          "description": "<p>The number of statuses with this state.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "state",
          "description": "<p>The state of a status context.</p>",
          "type": "StatusState!",
          "id": "statusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#statusstate"
        }
      ]
    },
    {
      "name": "Submodule",
      "kind": "objects",
      "id": "submodule",
      "href": "/graphql/reference/objects#submodule",
      "description": "<p>A pointer to a repository at a specific revision embedded inside another repository.</p>",
      "fields": [
        {
          "name": "branch",
          "description": "<p>The branch of the upstream submodule for tracking updates.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "gitUrl",
          "description": "<p>The git URL of the submodule repository.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>The name of the submodule in .gitmodules.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameRaw",
          "description": "<p>The name of the submodule in .gitmodules (Base64-encoded).</p>",
          "type": "Base64String!",
          "id": "base64string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#base64string"
        },
        {
          "name": "path",
          "description": "<p>The path in the superproject that this submodule is located in.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pathRaw",
          "description": "<p>The path in the superproject that this submodule is located in (Base64-encoded).</p>",
          "type": "Base64String!",
          "id": "base64string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#base64string"
        },
        {
          "name": "subprojectCommitOid",
          "description": "<p>The commit revision of the subproject repository being tracked by the submodule.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        }
      ]
    },
    {
      "name": "SubmoduleConnection",
      "kind": "objects",
      "id": "submoduleconnection",
      "href": "/graphql/reference/objects#submoduleconnection",
      "description": "<p>The connection type for Submodule.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[SubmoduleEdge]",
          "id": "submoduleedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#submoduleedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Submodule]",
          "id": "submodule",
          "kind": "objects",
          "href": "/graphql/reference/objects#submodule"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "SubmoduleEdge",
      "kind": "objects",
      "id": "submoduleedge",
      "href": "/graphql/reference/objects#submoduleedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Submodule",
          "id": "submodule",
          "kind": "objects",
          "href": "/graphql/reference/objects#submodule"
        }
      ]
    },
    {
      "name": "SubscribedEvent",
      "kind": "objects",
      "id": "subscribedevent",
      "href": "/graphql/reference/objects#subscribedevent",
      "description": "<p>Represents a<code>subscribed</code>event on a given <code>Subscribable</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "subscribable",
          "description": "<p>Object referenced by event.</p>",
          "type": "Subscribable!",
          "id": "subscribable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#subscribable"
        }
      ]
    },
    {
      "name": "SuggestedReviewer",
      "kind": "objects",
      "id": "suggestedreviewer",
      "href": "/graphql/reference/objects#suggestedreviewer",
      "description": "<p>A suggestion to review a pull request based on a user's commit history and review comments.</p>",
      "fields": [
        {
          "name": "isAuthor",
          "description": "<p>Is this suggestion based on past commits?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isCommenter",
          "description": "<p>Is this suggestion based on past review comments?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "reviewer",
          "description": "<p>Identifies the user suggested to review the pull request.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Tag",
      "kind": "objects",
      "id": "tag",
      "href": "/graphql/reference/objects#tag",
      "description": "<p>Represents a Git tag.</p>",
      "implements": [
        {
          "name": "GitObject",
          "id": "gitobject",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "message",
          "description": "<p>The Git tag message.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The Git tag name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the Git object belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "tagger",
          "description": "<p>Details about the tag author.</p>",
          "type": "GitActor",
          "id": "gitactor",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactor"
        },
        {
          "name": "target",
          "description": "<p>The Git object the tag points to.</p>",
          "type": "GitObject!",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject"
        }
      ]
    },
    {
      "name": "Team",
      "kind": "objects",
      "id": "team",
      "href": "/graphql/reference/objects#team",
      "description": "<p>A team of users in an organization.</p>",
      "implements": [
        {
          "name": "MemberStatusable",
          "id": "memberstatusable",
          "href": "/graphql/reference/interfaces#memberstatusable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        }
      ],
      "fields": [
        {
          "name": "ancestors",
          "description": "<p>A list of teams that are ancestors of this team.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the team's avatar.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "defaultValue": "400",
              "description": "<p>The size in pixels of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "childTeams",
          "description": "<p>List of child teams belonging to this team.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "immediateOnly",
              "defaultValue": true,
              "description": "<p>Whether to list immediate child teams or all descendant child teams.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "TeamOrder",
                "id": "teamorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#teamorder"
              }
            },
            {
              "name": "userLogins",
              "description": "<p>User logins to filter by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "combinedSlug",
          "description": "<p>The slug corresponding to the organization and team.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>The description of the team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "discussion",
          "description": "<p>Find a team discussion by its number.</p>",
          "type": "TeamDiscussion",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The sequence number of the discussion to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "discussions",
          "description": "<p>A list of team discussions.</p>",
          "type": "TeamDiscussionConnection!",
          "id": "teamdiscussionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "isPinned",
              "description": "<p>If provided, filters discussions according to whether or not they are pinned.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "TeamDiscussionOrder",
                "id": "teamdiscussionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#teamdiscussionorder"
              }
            }
          ]
        },
        {
          "name": "discussionsResourcePath",
          "description": "<p>The HTTP path for team discussions.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "discussionsUrl",
          "description": "<p>The HTTP URL for team discussions.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "editTeamResourcePath",
          "description": "<p>The HTTP path for editing this team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "editTeamUrl",
          "description": "<p>The HTTP URL for editing this team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "invitations",
          "description": "<p>A list of pending invitations for users to this team.</p>",
          "type": "OrganizationInvitationConnection",
          "id": "organizationinvitationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "memberStatuses",
          "description": "<p>Get the status messages members of this entity have set that are either public or visible only to the organization.</p>",
          "type": "UserStatusConnection!",
          "id": "userstatusconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatusconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for user statuses returned from the connection.</p>",
              "type": {
                "name": "UserStatusOrder",
                "id": "userstatusorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#userstatusorder"
              }
            }
          ]
        },
        {
          "name": "members",
          "description": "<p>A list of users who are members of this team.</p>",
          "type": "TeamMemberConnection!",
          "id": "teammemberconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teammemberconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "membership",
              "defaultValue": "ALL",
              "description": "<p>Filter by membership type.</p>",
              "type": {
                "name": "TeamMembershipType",
                "id": "teammembershiptype",
                "kind": "enums",
                "href": "/graphql/reference/enums#teammembershiptype"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for the connection.</p>",
              "type": {
                "name": "TeamMemberOrder",
                "id": "teammemberorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#teammemberorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "role",
              "description": "<p>Filter by team member role.</p>",
              "type": {
                "name": "TeamMemberRole",
                "id": "teammemberrole",
                "kind": "enums",
                "href": "/graphql/reference/enums#teammemberrole"
              }
            }
          ]
        },
        {
          "name": "membersResourcePath",
          "description": "<p>The HTTP path for the team' members.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "membersUrl",
          "description": "<p>The HTTP URL for the team' members.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>The name of the team.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "newTeamResourcePath",
          "description": "<p>The HTTP path creating a new team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "newTeamUrl",
          "description": "<p>The HTTP URL creating a new team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "notificationSetting",
          "description": "<p>The notification setting that the team has set.</p>",
          "type": "TeamNotificationSetting!",
          "id": "teamnotificationsetting",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamnotificationsetting"
        },
        {
          "name": "organization",
          "description": "<p>The organization that owns this team.</p>",
          "type": "Organization!",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "parentTeam",
          "description": "<p>The parent team of the team.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "privacy",
          "description": "<p>The level of privacy the team has.</p>",
          "type": "TeamPrivacy!",
          "id": "teamprivacy",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamprivacy"
        },
        {
          "name": "repositories",
          "description": "<p>A list of repositories this team has access to.</p>",
          "type": "TeamRepositoryConnection!",
          "id": "teamrepositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamrepositoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for the connection.</p>",
              "type": {
                "name": "TeamRepositoryOrder",
                "id": "teamrepositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#teamrepositoryorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for. Repositories will be returned where the name contains your search string.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "repositoriesResourcePath",
          "description": "<p>The HTTP path for this team's repositories.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoriesUrl",
          "description": "<p>The HTTP URL for this team's repositories.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "reviewRequestDelegationAlgorithm",
          "description": "<p>What algorithm is used for review assignment for this team.</p>",
          "type": "TeamReviewAssignmentAlgorithm",
          "id": "teamreviewassignmentalgorithm",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamreviewassignmentalgorithm",
          "isDeprecated": false,
          "preview": {
            "title": "Team review assignments preview",
            "description": "This preview adds support for updating the settings for team review assignment.",
            "toggled_by": "stone-crop-preview",
            "toggled_on": [
              "Mutation.updateTeamReviewAssignment",
              "TeamReviewAssignmentAlgorithm",
              "Team.reviewRequestDelegationEnabled",
              "Team.reviewRequestDelegationAlgorithm",
              "Team.reviewRequestDelegationMemberCount",
              "Team.reviewRequestDelegationNotifyTeam"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.stone-crop-preview+json",
            "href": "/graphql/overview/schema-previews#team-review-assignments-preview"
          }
        },
        {
          "name": "reviewRequestDelegationEnabled",
          "description": "<p>True if review assignment is enabled for this team.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "isDeprecated": false,
          "preview": {
            "title": "Team review assignments preview",
            "description": "This preview adds support for updating the settings for team review assignment.",
            "toggled_by": "stone-crop-preview",
            "toggled_on": [
              "Mutation.updateTeamReviewAssignment",
              "TeamReviewAssignmentAlgorithm",
              "Team.reviewRequestDelegationEnabled",
              "Team.reviewRequestDelegationAlgorithm",
              "Team.reviewRequestDelegationMemberCount",
              "Team.reviewRequestDelegationNotifyTeam"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.stone-crop-preview+json",
            "href": "/graphql/overview/schema-previews#team-review-assignments-preview"
          }
        },
        {
          "name": "reviewRequestDelegationMemberCount",
          "description": "<p>How many team members are required for review assignment for this team.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "isDeprecated": false,
          "preview": {
            "title": "Team review assignments preview",
            "description": "This preview adds support for updating the settings for team review assignment.",
            "toggled_by": "stone-crop-preview",
            "toggled_on": [
              "Mutation.updateTeamReviewAssignment",
              "TeamReviewAssignmentAlgorithm",
              "Team.reviewRequestDelegationEnabled",
              "Team.reviewRequestDelegationAlgorithm",
              "Team.reviewRequestDelegationMemberCount",
              "Team.reviewRequestDelegationNotifyTeam"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.stone-crop-preview+json",
            "href": "/graphql/overview/schema-previews#team-review-assignments-preview"
          }
        },
        {
          "name": "reviewRequestDelegationNotifyTeam",
          "description": "<p>When assigning team members via delegation, whether the entire team should be notified as well.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "isDeprecated": false,
          "preview": {
            "title": "Team review assignments preview",
            "description": "This preview adds support for updating the settings for team review assignment.",
            "toggled_by": "stone-crop-preview",
            "toggled_on": [
              "Mutation.updateTeamReviewAssignment",
              "TeamReviewAssignmentAlgorithm",
              "Team.reviewRequestDelegationEnabled",
              "Team.reviewRequestDelegationAlgorithm",
              "Team.reviewRequestDelegationMemberCount",
              "Team.reviewRequestDelegationNotifyTeam"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.stone-crop-preview+json",
            "href": "/graphql/overview/schema-previews#team-review-assignments-preview"
          }
        },
        {
          "name": "slug",
          "description": "<p>The slug corresponding to the team.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teamsResourcePath",
          "description": "<p>The HTTP path for this team's teams.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamsUrl",
          "description": "<p>The HTTP URL for this team's teams.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanAdminister",
          "description": "<p>Team is adminable by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "TeamAddMemberAuditEntry",
      "kind": "objects",
      "id": "teamaddmemberauditentry",
      "href": "/graphql/reference/objects#teamaddmemberauditentry",
      "description": "<p>Audit log entry for a team.add_member event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "TeamAuditEntryData",
          "id": "teamauditentrydata",
          "href": "/graphql/reference/interfaces#teamauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isLdapMapped",
          "description": "<p>Whether the team was mapped to an LDAP Group.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "team",
          "description": "<p>The team associated with the action.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "teamName",
          "description": "<p>The name of the team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teamResourcePath",
          "description": "<p>The HTTP path for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamUrl",
          "description": "<p>The HTTP URL for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "TeamAddRepositoryAuditEntry",
      "kind": "objects",
      "id": "teamaddrepositoryauditentry",
      "href": "/graphql/reference/objects#teamaddrepositoryauditentry",
      "description": "<p>Audit log entry for a team.add_repository event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        },
        {
          "name": "TeamAuditEntryData",
          "id": "teamauditentrydata",
          "href": "/graphql/reference/interfaces#teamauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isLdapMapped",
          "description": "<p>Whether the team was mapped to an LDAP Group.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "team",
          "description": "<p>The team associated with the action.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "teamName",
          "description": "<p>The name of the team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teamResourcePath",
          "description": "<p>The HTTP path for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamUrl",
          "description": "<p>The HTTP URL for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "TeamChangeParentTeamAuditEntry",
      "kind": "objects",
      "id": "teamchangeparentteamauditentry",
      "href": "/graphql/reference/objects#teamchangeparentteamauditentry",
      "description": "<p>Audit log entry for a team.change_parent_team event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "TeamAuditEntryData",
          "id": "teamauditentrydata",
          "href": "/graphql/reference/interfaces#teamauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isLdapMapped",
          "description": "<p>Whether the team was mapped to an LDAP Group.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "parentTeam",
          "description": "<p>The new parent team.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "parentTeamName",
          "description": "<p>The name of the new parent team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "parentTeamNameWas",
          "description": "<p>The name of the former parent team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "parentTeamResourcePath",
          "description": "<p>The HTTP path for the parent team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "parentTeamUrl",
          "description": "<p>The HTTP URL for the parent team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "parentTeamWas",
          "description": "<p>The former parent team.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "parentTeamWasResourcePath",
          "description": "<p>The HTTP path for the previous parent team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "parentTeamWasUrl",
          "description": "<p>The HTTP URL for the previous parent team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "team",
          "description": "<p>The team associated with the action.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "teamName",
          "description": "<p>The name of the team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teamResourcePath",
          "description": "<p>The HTTP path for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamUrl",
          "description": "<p>The HTTP URL for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "TeamConnection",
      "kind": "objects",
      "id": "teamconnection",
      "href": "/graphql/reference/objects#teamconnection",
      "description": "<p>The connection type for Team.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamEdge]",
          "id": "teamedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Team]",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamDiscussion",
      "kind": "objects",
      "id": "teamdiscussion",
      "href": "/graphql/reference/objects#teamdiscussion",
      "description": "<p>A team discussion.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the discussion's team.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyVersion",
          "description": "<p>Identifies the discussion body hash.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "comments",
          "description": "<p>A list of comments on this discussion.</p>",
          "type": "TeamDiscussionCommentConnection!",
          "id": "teamdiscussioncommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "fromComment",
              "description": "<p>When provided, filters the connection such that results begin with the comment with this number.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "TeamDiscussionCommentOrder",
                "id": "teamdiscussioncommentorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#teamdiscussioncommentorder"
              }
            }
          ]
        },
        {
          "name": "commentsResourcePath",
          "description": "<p>The HTTP path for discussion comments.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commentsUrl",
          "description": "<p>The HTTP URL for discussion comments.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPinned",
          "description": "<p>Whether or not the discussion is pinned.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPrivate",
          "description": "<p>Whether or not the discussion is only visible to team members and org admins.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "number",
          "description": "<p>Identifies the discussion within its team.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this discussion.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "team",
          "description": "<p>The team that defines the context of this discussion.</p>",
          "type": "Team!",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "title",
          "description": "<p>The title of the discussion.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this discussion.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanPin",
          "description": "<p>Whether or not the current viewer can pin this discussion.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "TeamDiscussionComment",
      "kind": "objects",
      "id": "teamdiscussioncomment",
      "href": "/graphql/reference/objects#teamdiscussioncomment",
      "description": "<p>A comment on a team discussion.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the comment's team.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyVersion",
          "description": "<p>The current version of the body content.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "discussion",
          "description": "<p>The discussion this comment is about.</p>",
          "type": "TeamDiscussion!",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "number",
          "description": "<p>Identifies the comment number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "TeamDiscussionCommentConnection",
      "kind": "objects",
      "id": "teamdiscussioncommentconnection",
      "href": "/graphql/reference/objects#teamdiscussioncommentconnection",
      "description": "<p>The connection type for TeamDiscussionComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamDiscussionCommentEdge]",
          "id": "teamdiscussioncommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[TeamDiscussionComment]",
          "id": "teamdiscussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamDiscussionCommentEdge",
      "kind": "objects",
      "id": "teamdiscussioncommentedge",
      "href": "/graphql/reference/objects#teamdiscussioncommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "TeamDiscussionComment",
          "id": "teamdiscussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncomment"
        }
      ]
    },
    {
      "name": "TeamDiscussionConnection",
      "kind": "objects",
      "id": "teamdiscussionconnection",
      "href": "/graphql/reference/objects#teamdiscussionconnection",
      "description": "<p>The connection type for TeamDiscussion.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamDiscussionEdge]",
          "id": "teamdiscussionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[TeamDiscussion]",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamDiscussionEdge",
      "kind": "objects",
      "id": "teamdiscussionedge",
      "href": "/graphql/reference/objects#teamdiscussionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "TeamDiscussion",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion"
        }
      ]
    },
    {
      "name": "TeamEdge",
      "kind": "objects",
      "id": "teamedge",
      "href": "/graphql/reference/objects#teamedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        }
      ]
    },
    {
      "name": "TeamMemberConnection",
      "kind": "objects",
      "id": "teammemberconnection",
      "href": "/graphql/reference/objects#teammemberconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamMemberEdge]",
          "id": "teammemberedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teammemberedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamMemberEdge",
      "kind": "objects",
      "id": "teammemberedge",
      "href": "/graphql/reference/objects#teammemberedge",
      "description": "<p>Represents a user who is a member of a team.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "memberAccessResourcePath",
          "description": "<p>The HTTP path to the organization's member access page.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "memberAccessUrl",
          "description": "<p>The HTTP URL to the organization's member access page.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "node",
          "description": "",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "role",
          "description": "<p>The role the member has on the team.</p>",
          "type": "TeamMemberRole!",
          "id": "teammemberrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#teammemberrole"
        }
      ]
    },
    {
      "name": "TeamRemoveMemberAuditEntry",
      "kind": "objects",
      "id": "teamremovememberauditentry",
      "href": "/graphql/reference/objects#teamremovememberauditentry",
      "description": "<p>Audit log entry for a team.remove_member event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "TeamAuditEntryData",
          "id": "teamauditentrydata",
          "href": "/graphql/reference/interfaces#teamauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isLdapMapped",
          "description": "<p>Whether the team was mapped to an LDAP Group.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "team",
          "description": "<p>The team associated with the action.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "teamName",
          "description": "<p>The name of the team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teamResourcePath",
          "description": "<p>The HTTP path for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamUrl",
          "description": "<p>The HTTP URL for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "TeamRemoveRepositoryAuditEntry",
      "kind": "objects",
      "id": "teamremoverepositoryauditentry",
      "href": "/graphql/reference/objects#teamremoverepositoryauditentry",
      "description": "<p>Audit log entry for a team.remove_repository event.</p>",
      "implements": [
        {
          "name": "AuditEntry",
          "id": "auditentry",
          "href": "/graphql/reference/interfaces#auditentry"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "OrganizationAuditEntryData",
          "id": "organizationauditentrydata",
          "href": "/graphql/reference/interfaces#organizationauditentrydata"
        },
        {
          "name": "RepositoryAuditEntryData",
          "id": "repositoryauditentrydata",
          "href": "/graphql/reference/interfaces#repositoryauditentrydata"
        },
        {
          "name": "TeamAuditEntryData",
          "id": "teamauditentrydata",
          "href": "/graphql/reference/interfaces#teamauditentrydata"
        }
      ],
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isLdapMapped",
          "description": "<p>Whether the team was mapped to an LDAP Group.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "team",
          "description": "<p>The team associated with the action.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "teamName",
          "description": "<p>The name of the team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teamResourcePath",
          "description": "<p>The HTTP path for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamUrl",
          "description": "<p>The HTTP URL for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "TeamRepositoryConnection",
      "kind": "objects",
      "id": "teamrepositoryconnection",
      "href": "/graphql/reference/objects#teamrepositoryconnection",
      "description": "<p>The connection type for Repository.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamRepositoryEdge]",
          "id": "teamrepositoryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamrepositoryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Repository]",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamRepositoryEdge",
      "kind": "objects",
      "id": "teamrepositoryedge",
      "href": "/graphql/reference/objects#teamrepositoryedge",
      "description": "<p>Represents a team repository.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "permission",
          "description": "<p>The permission level the team has on the repository.</p>",
          "type": "RepositoryPermission!",
          "id": "repositorypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorypermission"
        }
      ]
    },
    {
      "name": "TextMatch",
      "kind": "objects",
      "id": "textmatch",
      "href": "/graphql/reference/objects#textmatch",
      "description": "<p>A text match within a search result.</p>",
      "fields": [
        {
          "name": "fragment",
          "description": "<p>The specific text fragment within the property matched on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "highlights",
          "description": "<p>Highlights within the matched fragment.</p>",
          "type": "[TextMatchHighlight!]!",
          "id": "textmatchhighlight",
          "kind": "objects",
          "href": "/graphql/reference/objects#textmatchhighlight"
        },
        {
          "name": "property",
          "description": "<p>The property matched on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "TextMatchHighlight",
      "kind": "objects",
      "id": "textmatchhighlight",
      "href": "/graphql/reference/objects#textmatchhighlight",
      "description": "<p>Represents a single highlight in a search result match.</p>",
      "fields": [
        {
          "name": "beginIndice",
          "description": "<p>The indice in the fragment where the matched text begins.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "endIndice",
          "description": "<p>The indice in the fragment where the matched text ends.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "text",
          "description": "<p>The text matched.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "Topic",
      "kind": "objects",
      "id": "topic",
      "href": "/graphql/reference/objects#topic",
      "description": "<p>A topic aggregates entities that are related to a subject.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Starrable",
          "id": "starrable",
          "href": "/graphql/reference/interfaces#starrable"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The topic's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "relatedTopics",
          "description": "<p>A list of related topics, including aliases of this topic, sorted with the most relevant\nfirst. Returns up to 10 Topics.</p>",
          "type": "[Topic!]!",
          "id": "topic",
          "kind": "objects",
          "href": "/graphql/reference/objects#topic",
          "arguments": [
            {
              "name": "first",
              "defaultValue": "3",
              "description": "<p>How many topics to return.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "repositories",
          "description": "<p>A list of repositories.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "stargazerCount",
          "description": "<p>Returns a count of how many stargazers there are on this object.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "stargazers",
          "description": "<p>A list of users who have starred this starrable.</p>",
          "type": "StargazerConnection!",
          "id": "stargazerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#starorder"
              }
            }
          ]
        },
        {
          "name": "viewerHasStarred",
          "description": "<p>Returns a boolean indicating whether the viewing user has starred this starrable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "TransferredEvent",
      "kind": "objects",
      "id": "transferredevent",
      "href": "/graphql/reference/objects#transferredevent",
      "description": "<p>Represents a<code>transferred</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "fromRepository",
          "description": "<p>The repository this came from.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "issue",
          "description": "<p>Identifies the issue associated with the event.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        }
      ]
    },
    {
      "name": "Tree",
      "kind": "objects",
      "id": "tree",
      "href": "/graphql/reference/objects#tree",
      "description": "<p>Represents a Git tree.</p>",
      "implements": [
        {
          "name": "GitObject",
          "id": "gitobject",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "entries",
          "description": "<p>A list of tree entries.</p>",
          "type": "[TreeEntry!]",
          "id": "treeentry",
          "kind": "objects",
          "href": "/graphql/reference/objects#treeentry"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the Git object belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "TreeEntry",
      "kind": "objects",
      "id": "treeentry",
      "href": "/graphql/reference/objects#treeentry",
      "description": "<p>Represents a Git tree entry.</p>",
      "fields": [
        {
          "name": "extension",
          "description": "<p>The extension of the file.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isGenerated",
          "description": "<p>Whether or not this tree entry is generated.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "language",
          "description": "<p>The programming language this file is written in.</p>",
          "type": "Language",
          "id": "language",
          "kind": "objects",
          "href": "/graphql/reference/objects#language"
        },
        {
          "name": "lineCount",
          "description": "<p>Number of lines in the file.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "mode",
          "description": "<p>Entry file mode.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "name",
          "description": "<p>Entry file name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameRaw",
          "description": "<p>Entry file name. (Base64-encoded).</p>",
          "type": "Base64String!",
          "id": "base64string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#base64string"
        },
        {
          "name": "object",
          "description": "<p>Entry file object.</p>",
          "type": "GitObject",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "oid",
          "description": "<p>Entry file Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "path",
          "description": "<p>The full path of the file.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pathRaw",
          "description": "<p>The full path of the file. (Base64-encoded).</p>",
          "type": "Base64String",
          "id": "base64string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#base64string"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the tree entry belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "size",
          "description": "<p>Entry byte size.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "submodule",
          "description": "<p>If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule.</p>",
          "type": "Submodule",
          "id": "submodule",
          "kind": "objects",
          "href": "/graphql/reference/objects#submodule"
        },
        {
          "name": "type",
          "description": "<p>Entry file type.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UnassignedEvent",
      "kind": "objects",
      "id": "unassignedevent",
      "href": "/graphql/reference/objects#unassignedevent",
      "description": "<p>Represents an<code>unassigned</code>event on any assignable object.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "assignable",
          "description": "<p>Identifies the assignable associated with the event.</p>",
          "type": "Assignable!",
          "id": "assignable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#assignable"
        },
        {
          "name": "assignee",
          "description": "<p>Identifies the user or mannequin that was unassigned.</p>",
          "type": "Assignee",
          "id": "assignee",
          "kind": "unions",
          "href": "/graphql/reference/unions#assignee"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "user",
          "description": "<p>Identifies the subject (user) who was unassigned.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "isDeprecated": true,
          "deprecationReason": "<p>Assignees can now be mannequins. Use the <code>assignee</code> field instead. Removal on 2020-01-01 UTC.</p>"
        }
      ]
    },
    {
      "name": "UnknownSignature",
      "kind": "objects",
      "id": "unknownsignature",
      "href": "/graphql/reference/objects#unknownsignature",
      "description": "<p>Represents an unknown signature on a Commit or Tag.</p>",
      "implements": [
        {
          "name": "GitSignature",
          "id": "gitsignature",
          "href": "/graphql/reference/interfaces#gitsignature"
        }
      ],
      "fields": [
        {
          "name": "email",
          "description": "<p>Email used to sign this object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isValid",
          "description": "<p>True if the signature is valid and verified by GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "payload",
          "description": "<p>Payload for GPG signing object. Raw ODB object without the signature header.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signature",
          "description": "<p>ASCII-armored signature header from object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signer",
          "description": "<p>GitHub user corresponding to the email signing this commit.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "state",
          "description": "<p>The state of this signature. <code>VALID</code> if signature is valid and verified by\nGitHub, otherwise represents reason why signature is considered invalid.</p>",
          "type": "GitSignatureState!",
          "id": "gitsignaturestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#gitsignaturestate"
        },
        {
          "name": "wasSignedByGitHub",
          "description": "<p>True if the signature was made with GitHub's signing key.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "UnlabeledEvent",
      "kind": "objects",
      "id": "unlabeledevent",
      "href": "/graphql/reference/objects#unlabeledevent",
      "description": "<p>Represents an<code>unlabeled</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "label",
          "description": "<p>Identifies the label associated with the<code>unlabeled</code>event.</p>",
          "type": "Label!",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label"
        },
        {
          "name": "labelable",
          "description": "<p>Identifies the <code>Labelable</code> associated with the event.</p>",
          "type": "Labelable!",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable"
        }
      ]
    },
    {
      "name": "UnlockedEvent",
      "kind": "objects",
      "id": "unlockedevent",
      "href": "/graphql/reference/objects#unlockedevent",
      "description": "<p>Represents an<code>unlocked</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "lockable",
          "description": "<p>Object that was unlocked.</p>",
          "type": "Lockable!",
          "id": "lockable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#lockable"
        }
      ]
    },
    {
      "name": "UnmarkedAsDuplicateEvent",
      "kind": "objects",
      "id": "unmarkedasduplicateevent",
      "href": "/graphql/reference/objects#unmarkedasduplicateevent",
      "description": "<p>Represents an<code>unmarked_as_duplicate</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "canonical",
          "description": "<p>The authoritative issue or pull request which has been duplicated by another.</p>",
          "type": "IssueOrPullRequest",
          "id": "issueorpullrequest",
          "kind": "unions",
          "href": "/graphql/reference/unions#issueorpullrequest"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "duplicate",
          "description": "<p>The issue or pull request which has been marked as a duplicate of another.</p>",
          "type": "IssueOrPullRequest",
          "id": "issueorpullrequest",
          "kind": "unions",
          "href": "/graphql/reference/unions#issueorpullrequest"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>Canonical and duplicate belong to different repositories.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "UnpinnedEvent",
      "kind": "objects",
      "id": "unpinnedevent",
      "href": "/graphql/reference/objects#unpinnedevent",
      "description": "<p>Represents an<code>unpinned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "issue",
          "description": "<p>Identifies the issue associated with the event.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        }
      ]
    },
    {
      "name": "UnsubscribedEvent",
      "kind": "objects",
      "id": "unsubscribedevent",
      "href": "/graphql/reference/objects#unsubscribedevent",
      "description": "<p>Represents an<code>unsubscribed</code>event on a given <code>Subscribable</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "subscribable",
          "description": "<p>Object referenced by event.</p>",
          "type": "Subscribable!",
          "id": "subscribable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#subscribable"
        }
      ]
    },
    {
      "name": "User",
      "kind": "objects",
      "id": "user",
      "href": "/graphql/reference/objects#user",
      "description": "<p>A user is an individual's account on GitHub that owns repositories and can make new content.</p>",
      "implements": [
        {
          "name": "Actor",
          "id": "actor",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "PackageOwner",
          "id": "packageowner",
          "href": "/graphql/reference/interfaces#packageowner"
        },
        {
          "name": "ProfileOwner",
          "id": "profileowner",
          "href": "/graphql/reference/interfaces#profileowner"
        },
        {
          "name": "ProjectOwner",
          "id": "projectowner",
          "href": "/graphql/reference/interfaces#projectowner"
        },
        {
          "name": "ProjectV2Owner",
          "id": "projectv2owner",
          "href": "/graphql/reference/interfaces#projectv2owner"
        },
        {
          "name": "ProjectV2Recent",
          "id": "projectv2recent",
          "href": "/graphql/reference/interfaces#projectv2recent"
        },
        {
          "name": "RepositoryDiscussionAuthor",
          "id": "repositorydiscussionauthor",
          "href": "/graphql/reference/interfaces#repositorydiscussionauthor"
        },
        {
          "name": "RepositoryDiscussionCommentAuthor",
          "id": "repositorydiscussioncommentauthor",
          "href": "/graphql/reference/interfaces#repositorydiscussioncommentauthor"
        },
        {
          "name": "RepositoryOwner",
          "id": "repositoryowner",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "anyPinnableItems",
          "description": "<p>Determine if this repository owner has any items that can be pinned to their profile.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "type",
              "description": "<p>Filter to only a particular kind of pinnable item.</p>",
              "type": {
                "name": "PinnableItemType",
                "id": "pinnableitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the user's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "bio",
          "description": "<p>The user's public profile bio.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bioHTML",
          "description": "<p>The user's public profile bio as HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "canReceiveOrganizationEmailsWhenNotificationsRestricted",
          "description": "<p>Could this user receive email notifications, if the organization had notification restrictions enabled?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "login",
              "description": "<p>The login of the organization to check.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "commitComments",
          "description": "<p>A list of commit comments made by this user.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "company",
          "description": "<p>The user's public profile company.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "companyHTML",
          "description": "<p>The user's public profile company as HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "contributionsCollection",
          "description": "<p>The collection of contributions this user has made to different repositories.</p>",
          "type": "ContributionsCollection!",
          "id": "contributionscollection",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributionscollection",
          "arguments": [
            {
              "name": "from",
              "description": "<p>Only contributions made at this time or later will be counted. If omitted, defaults to a year ago.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#datetime"
              }
            },
            {
              "name": "organizationID",
              "description": "<p>The ID of the organization used to filter contributions.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            },
            {
              "name": "to",
              "description": "<p>Only contributions made before and up to (including) this time will be\ncounted. If omitted, defaults to the current time or one year from the\nprovided from argument.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#datetime"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "email",
          "description": "<p>The user's publicly visible profile email.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "followers",
          "description": "<p>A list of users the given user is followed by.</p>",
          "type": "FollowerConnection!",
          "id": "followerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#followerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "following",
          "description": "<p>A list of users the given user is following.</p>",
          "type": "FollowingConnection!",
          "id": "followingconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#followingconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "gist",
          "description": "<p>Find gist by repo name.</p>",
          "type": "Gist",
          "id": "gist",
          "kind": "objects",
          "href": "/graphql/reference/objects#gist",
          "arguments": [
            {
              "name": "name",
              "description": "<p>The gist name to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "gistComments",
          "description": "<p>A list of gist comments made by this user.</p>",
          "type": "GistCommentConnection!",
          "id": "gistcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "gists",
          "description": "<p>A list of the Gists the user has created.</p>",
          "type": "GistConnection!",
          "id": "gistconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for gists returned from the connection.</p>",
              "type": {
                "name": "GistOrder",
                "id": "gistorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#gistorder"
              }
            },
            {
              "name": "privacy",
              "description": "<p>Filters Gists according to privacy.</p>",
              "type": {
                "name": "GistPrivacy",
                "id": "gistprivacy",
                "kind": "enums",
                "href": "/graphql/reference/enums#gistprivacy"
              }
            }
          ]
        },
        {
          "name": "hovercard",
          "description": "<p>The hovercard information for this user in a given context.</p>",
          "type": "Hovercard!",
          "id": "hovercard",
          "kind": "objects",
          "href": "/graphql/reference/objects#hovercard",
          "arguments": [
            {
              "name": "primarySubjectId",
              "description": "<p>The ID of the subject to get the hovercard in the context of.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isBountyHunter",
          "description": "<p>Whether or not this user is a participant in the GitHub Security Bug Bounty.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isCampusExpert",
          "description": "<p>Whether or not this user is a participant in the GitHub Campus Experts Program.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isDeveloperProgramMember",
          "description": "<p>Whether or not this user is a GitHub Developer Program member.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isEmployee",
          "description": "<p>Whether or not this user is a GitHub employee.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isFollowingViewer",
          "description": "<p>Whether or not this user is following the viewer. Inverse of viewerIsFollowing.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isGitHubStar",
          "description": "<p>Whether or not this user is a member of the GitHub Stars Program.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isHireable",
          "description": "<p>Whether or not the user has marked themselves as for hire.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isSiteAdmin",
          "description": "<p>Whether or not this user is a site administrator.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isViewer",
          "description": "<p>Whether or not this user is the viewing user.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issueComments",
          "description": "<p>A list of issue comments made by this user.</p>",
          "type": "IssueCommentConnection!",
          "id": "issuecommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issue comments returned from the connection.</p>",
              "type": {
                "name": "IssueCommentOrder",
                "id": "issuecommentorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issuecommentorder"
              }
            }
          ]
        },
        {
          "name": "issues",
          "description": "<p>A list of issues associated with this user.</p>",
          "type": "IssueConnection!",
          "id": "issueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filtering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueFilters",
                "id": "issuefilters",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issuefilters"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the issues by.</p>",
              "type": {
                "name": "[IssueState!]",
                "id": "issuestate",
                "kind": "enums",
                "href": "/graphql/reference/enums#issuestate"
              }
            }
          ]
        },
        {
          "name": "itemShowcase",
          "description": "<p>Showcases a selection of repositories and gists that the profile owner has\neither curated or that have been selected automatically based on popularity.</p>",
          "type": "ProfileItemShowcase!",
          "id": "profileitemshowcase",
          "kind": "objects",
          "href": "/graphql/reference/objects#profileitemshowcase"
        },
        {
          "name": "location",
          "description": "<p>The user's public profile location.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "login",
          "description": "<p>The username used to login.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The user's public profile name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organization",
          "description": "<p>Find an organization by its login that the user belongs to.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization",
          "arguments": [
            {
              "name": "login",
              "description": "<p>The login of the organization to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "organizationVerifiedDomainEmails",
          "description": "<p>Verified email addresses that match verified domains for a specified organization the user is a member of.</p>",
          "type": "[String!]!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "arguments": [
            {
              "name": "login",
              "description": "<p>The login of the organization to match verified domains from.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "organizations",
          "description": "<p>A list of organizations the user belongs to.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the User's organizations.</p>",
              "type": {
                "name": "OrganizationOrder",
                "id": "organizationorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#organizationorder"
              }
            }
          ]
        },
        {
          "name": "packages",
          "description": "<p>A list of packages under the owner.</p>",
          "type": "PackageConnection!",
          "id": "packageconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "names",
              "description": "<p>Find packages by their names.</p>",
              "type": {
                "name": "[String]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering of the returned packages.</p>",
              "type": {
                "name": "PackageOrder",
                "id": "packageorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#packageorder"
              }
            },
            {
              "name": "packageType",
              "description": "<p>Filter registry package by type.</p>",
              "type": {
                "name": "PackageType",
                "id": "packagetype",
                "kind": "enums",
                "href": "/graphql/reference/enums#packagetype"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Find packages in a repository by ID.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            }
          ]
        },
        {
          "name": "pinnableItems",
          "description": "<p>A list of repositories and gists this profile owner can pin to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinnable items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItems",
          "description": "<p>A list of repositories and gists this profile owner has pinned to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinned items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItemsRemaining",
          "description": "<p>Returns how many more items this profile owner can pin to their profile.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "project",
          "description": "<p>Find project by number.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projectV2",
          "description": "<p>Find a project by number.</p>",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projects",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectConnection!",
          "id": "projectconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for projects returned from the connection.</p>",
              "type": {
                "name": "ProjectOrder",
                "id": "projectorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectorder"
              }
            },
            {
              "name": "search",
              "description": "<p>Query to search projects by, currently only searching by name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the projects by.</p>",
              "type": {
                "name": "[ProjectState!]",
                "id": "projectstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#projectstate"
              }
            }
          ]
        },
        {
          "name": "projectsResourcePath",
          "description": "<p>The HTTP path listing user's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsUrl",
          "description": "<p>The HTTP URL listing user's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsV2",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>How to order the returned projects.</p>",
              "type": {
                "name": "ProjectV2Order",
                "id": "projectv2order",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2order"
              }
            },
            {
              "name": "query",
              "description": "<p>A project to search for under the the owner.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "pronouns",
          "description": "<p>The user's profile pronouns.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "publicKeys",
          "description": "<p>A list of public keys associated with this user.</p>",
          "type": "PublicKeyConnection!",
          "id": "publickeyconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#publickeyconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "pullRequests",
          "description": "<p>A list of pull requests associated with this user.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "kind": "enums",
                "href": "/graphql/reference/enums#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "recentProjects",
          "description": "<p>Recent projects that this user has modified in the context of the owner.</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "repositories",
          "description": "<p>A list of repositories that the user owns.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "isFork",
              "description": "<p>If non-null, filters repositories according to whether they are forks of another repository.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "repositoriesContributedTo",
          "description": "<p>A list of repositories that the user recently contributed to.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "contributionTypes",
              "description": "<p>If non-null, include only the specified types of contributions. The\nGitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY].</p>",
              "type": {
                "name": "[RepositoryContributionType]",
                "id": "repositorycontributiontype",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositorycontributiontype"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "includeUserRepositories",
              "description": "<p>If true, include user repositories.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>Find Repository.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "arguments": [
            {
              "name": "followRenames",
              "defaultValue": true,
              "description": "<p>Follow repository renames. If disabled, a repository referenced by its old name will return an error.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "name",
              "description": "<p>Name of Repository to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "repositoryDiscussionComments",
          "description": "<p>Discussion comments this user has authored.</p>",
          "type": "DiscussionCommentConnection!",
          "id": "discussioncommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "onlyAnswers",
              "defaultValue": false,
              "description": "<p>Filter discussion comments to only those that were marked as the answer.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Filter discussion comments to only those in a specific repository.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            }
          ]
        },
        {
          "name": "repositoryDiscussions",
          "description": "<p>Discussions this user has started.</p>",
          "type": "DiscussionConnection!",
          "id": "discussionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "answered",
              "description": "<p>Filter discussions to only those that have been answered or not. Defaults to\nincluding both answered and unanswered discussions.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for discussions returned from the connection.</p>",
              "type": {
                "name": "DiscussionOrder",
                "id": "discussionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#discussionorder"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Filter discussions to only those in a specific repository.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the discussions by.</p>",
              "type": {
                "name": "[DiscussionState!]",
                "id": "discussionstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#discussionstate"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "savedReplies",
          "description": "<p>Replies this user has saved.</p>",
          "type": "SavedReplyConnection",
          "id": "savedreplyconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#savedreplyconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>The field to order saved replies by.</p>",
              "type": {
                "name": "SavedReplyOrder",
                "id": "savedreplyorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#savedreplyorder"
              }
            }
          ]
        },
        {
          "name": "socialAccounts",
          "description": "<p>The user's social media accounts, ordered as they appear on the user's profile.</p>",
          "type": "SocialAccountConnection!",
          "id": "socialaccountconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#socialaccountconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "starredRepositories",
          "description": "<p>Repositories the user has starred.</p>",
          "type": "StarredRepositoryConnection!",
          "id": "starredrepositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#starredrepositoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#starorder"
              }
            },
            {
              "name": "ownedByViewer",
              "description": "<p>Filters starred repositories to only return repositories owned by the viewer.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            }
          ]
        },
        {
          "name": "status",
          "description": "<p>The user's description of what they're currently doing.</p>",
          "type": "UserStatus",
          "id": "userstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatus"
        },
        {
          "name": "suspendedAt",
          "description": "<p>Identifies the date and time when the user was suspended.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "topRepositories",
          "description": "<p>Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder!",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            },
            {
              "name": "since",
              "description": "<p>How far back in time to fetch contributed repositories.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#datetime"
              }
            }
          ]
        },
        {
          "name": "twitterUsername",
          "description": "<p>The user's Twitter username.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanChangePinnedItems",
          "description": "<p>Can the viewer pin repositories and gists to the profile?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateProjects",
          "description": "<p>Can the current viewer create new projects on this owner.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanFollow",
          "description": "<p>Whether or not the viewer is able to follow the user.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerIsFollowing",
          "description": "<p>Whether or not this user is followed by the viewer. Inverse of isFollowingViewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "watching",
          "description": "<p>A list of repositories the given user is watching.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Affiliation options for repositories returned from the connection. If none\nspecified, the results will include repositories for which the current\nviewer is an owner or collaborator, or member.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "websiteUrl",
          "description": "<p>A URL pointing to the user's public website/blog.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "UserBlockedEvent",
      "kind": "objects",
      "id": "userblockedevent",
      "href": "/graphql/reference/objects#userblockedevent",
      "description": "<p>Represents a<code>user_blocked</code>event on a given user.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "blockDuration",
          "description": "<p>Number of days that the user was blocked for.</p>",
          "type": "UserBlockDuration!",
          "id": "userblockduration",
          "kind": "enums",
          "href": "/graphql/reference/enums#userblockduration"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "subject",
          "description": "<p>The user who was blocked.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "UserConnection",
      "kind": "objects",
      "id": "userconnection",
      "href": "/graphql/reference/objects#userconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserEdge]",
          "id": "useredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#useredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "UserContentEdit",
      "kind": "objects",
      "id": "usercontentedit",
      "href": "/graphql/reference/objects#usercontentedit",
      "description": "<p>An edit on user content.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "deletedAt",
          "description": "<p>Identifies the date and time when the object was deleted.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "deletedBy",
          "description": "<p>The actor who deleted this content.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "diff",
          "description": "<p>A summary of the changes for this edit.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "editedAt",
          "description": "<p>When this content was edited.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited this content.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "UserContentEditConnection",
      "kind": "objects",
      "id": "usercontenteditconnection",
      "href": "/graphql/reference/objects#usercontenteditconnection",
      "description": "<p>A list of edits to content.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserContentEditEdge]",
          "id": "usercontenteditedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[UserContentEdit]",
          "id": "usercontentedit",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontentedit"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "UserContentEditEdge",
      "kind": "objects",
      "id": "usercontenteditedge",
      "href": "/graphql/reference/objects#usercontenteditedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "UserContentEdit",
          "id": "usercontentedit",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontentedit"
        }
      ]
    },
    {
      "name": "UserEdge",
      "kind": "objects",
      "id": "useredge",
      "href": "/graphql/reference/objects#useredge",
      "description": "<p>Represents a user.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "UserEmailMetadata",
      "kind": "objects",
      "id": "useremailmetadata",
      "href": "/graphql/reference/objects#useremailmetadata",
      "description": "<p>Email attributes from External Identity.</p>",
      "fields": [
        {
          "name": "primary",
          "description": "<p>Boolean to identify primary emails.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "type",
          "description": "<p>Type of email.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "value",
          "description": "<p>Email id.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UserStatus",
      "kind": "objects",
      "id": "userstatus",
      "href": "/graphql/reference/objects#userstatus",
      "description": "<p>The user's description of what they're currently doing.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "emoji",
          "description": "<p>An emoji summarizing the user's status.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "emojiHTML",
          "description": "<p>The status emoji as HTML.</p>",
          "type": "HTML",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "expiresAt",
          "description": "<p>If set, the status will not be shown after this date.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "indicatesLimitedAvailability",
          "description": "<p>Whether this status indicates the user is not fully available on GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "message",
          "description": "<p>A brief message describing what the user is doing.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organization",
          "description": "<p>The organization whose members can see this status. If null, this status is publicly visible.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "user",
          "description": "<p>The user who has this status.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "UserStatusConnection",
      "kind": "objects",
      "id": "userstatusconnection",
      "href": "/graphql/reference/objects#userstatusconnection",
      "description": "<p>The connection type for UserStatus.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserStatusEdge]",
          "id": "userstatusedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatusedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[UserStatus]",
          "id": "userstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatus"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "UserStatusEdge",
      "kind": "objects",
      "id": "userstatusedge",
      "href": "/graphql/reference/objects#userstatusedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "UserStatus",
          "id": "userstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatus"
        }
      ]
    },
    {
      "name": "VerifiableDomain",
      "kind": "objects",
      "id": "verifiabledomain",
      "href": "/graphql/reference/objects#verifiabledomain",
      "description": "<p>A domain that can be verified or approved for an organization or an enterprise.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "dnsHostName",
          "description": "<p>The DNS host name that should be used for verification.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "domain",
          "description": "<p>The unicode encoded domain.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "hasFoundHostName",
          "description": "<p>Whether a TXT record for verification with the expected host name was found.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasFoundVerificationToken",
          "description": "<p>Whether a TXT record for verification with the expected verification token was found.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "isApproved",
          "description": "<p>Whether or not the domain is approved.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isRequiredForPolicyEnforcement",
          "description": "<p>Whether this domain is required to exist for an organization or enterprise policy to be enforced.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isVerified",
          "description": "<p>Whether or not the domain is verified.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "owner",
          "description": "<p>The owner of the domain.</p>",
          "type": "VerifiableDomainOwner!",
          "id": "verifiabledomainowner",
          "kind": "unions",
          "href": "/graphql/reference/unions#verifiabledomainowner"
        },
        {
          "name": "punycodeEncodedDomain",
          "description": "<p>The punycode encoded domain.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "tokenExpirationTime",
          "description": "<p>The time that the current verification token will expire.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "verificationToken",
          "description": "<p>The current verification token for the domain.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "VerifiableDomainConnection",
      "kind": "objects",
      "id": "verifiabledomainconnection",
      "href": "/graphql/reference/objects#verifiabledomainconnection",
      "description": "<p>The connection type for VerifiableDomain.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[VerifiableDomainEdge]",
          "id": "verifiabledomainedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#verifiabledomainedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[VerifiableDomain]",
          "id": "verifiabledomain",
          "kind": "objects",
          "href": "/graphql/reference/objects#verifiabledomain"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "VerifiableDomainEdge",
      "kind": "objects",
      "id": "verifiabledomainedge",
      "href": "/graphql/reference/objects#verifiabledomainedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "VerifiableDomain",
          "id": "verifiabledomain",
          "kind": "objects",
          "href": "/graphql/reference/objects#verifiabledomain"
        }
      ]
    },
    {
      "name": "ViewerHovercardContext",
      "kind": "objects",
      "id": "viewerhovercardcontext",
      "href": "/graphql/reference/objects#viewerhovercardcontext",
      "description": "<p>A hovercard context with a message describing how the viewer is related.</p>",
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "viewer",
          "description": "<p>Identifies the user who is related to this context.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Workflow",
      "kind": "objects",
      "id": "workflow",
      "href": "/graphql/reference/objects#workflow",
      "description": "<p>A workflow contains meta information about an Actions workflow file.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The name of the workflow.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this workflow.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "runs",
          "description": "<p>The runs of the workflow.</p>",
          "type": "WorkflowRunConnection!",
          "id": "workflowrunconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#workflowrunconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for the connection.</p>",
              "type": {
                "name": "WorkflowRunOrder",
                "id": "workflowrunorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#workflowrunorder"
              }
            }
          ]
        },
        {
          "name": "state",
          "description": "<p>The state of the workflow.</p>",
          "type": "WorkflowState!",
          "id": "workflowstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#workflowstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this workflow.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "WorkflowRun",
      "kind": "objects",
      "id": "workflowrun",
      "href": "/graphql/reference/objects#workflowrun",
      "description": "<p>A workflow run.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "checkSuite",
          "description": "<p>The check suite this workflow run belongs to.</p>",
          "type": "CheckSuite!",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deploymentReviews",
          "description": "<p>The log of deployment reviews.</p>",
          "type": "DeploymentReviewConnection!",
          "id": "deploymentreviewconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentreviewconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "event",
          "description": "<p>The event that triggered the workflow run.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "file",
          "description": "<p>The workflow file.</p>",
          "type": "WorkflowRunFile",
          "id": "workflowrunfile",
          "kind": "objects",
          "href": "/graphql/reference/objects#workflowrunfile"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pendingDeploymentRequests",
          "description": "<p>The pending deployment requests of all check runs in this workflow run.</p>",
          "type": "DeploymentRequestConnection!",
          "id": "deploymentrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this workflow run.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "runNumber",
          "description": "<p>A number that uniquely identifies this workflow run in its parent workflow.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this workflow run.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "workflow",
          "description": "<p>The workflow executed in this workflow run.</p>",
          "type": "Workflow!",
          "id": "workflow",
          "kind": "objects",
          "href": "/graphql/reference/objects#workflow"
        }
      ]
    },
    {
      "name": "WorkflowRunConnection",
      "kind": "objects",
      "id": "workflowrunconnection",
      "href": "/graphql/reference/objects#workflowrunconnection",
      "description": "<p>The connection type for WorkflowRun.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[WorkflowRunEdge]",
          "id": "workflowrunedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#workflowrunedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[WorkflowRun]",
          "id": "workflowrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#workflowrun"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "WorkflowRunEdge",
      "kind": "objects",
      "id": "workflowrunedge",
      "href": "/graphql/reference/objects#workflowrunedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "WorkflowRun",
          "id": "workflowrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#workflowrun"
        }
      ]
    },
    {
      "name": "WorkflowRunFile",
      "kind": "objects",
      "id": "workflowrunfile",
      "href": "/graphql/reference/objects#workflowrunfile",
      "description": "<p>An executed workflow file for a workflow run.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "path",
          "description": "<p>The path of the workflow file relative to its repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryFileUrl",
          "description": "<p>The direct link to the file in the repository which stores the workflow file.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryName",
          "description": "<p>The repository name and owner which stores the workflow file.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this workflow run file.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "run",
          "description": "<p>The parent workflow run execution for this file.</p>",
          "type": "WorkflowRun!",
          "id": "workflowrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#workflowrun"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this workflow run file.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanPushRepository",
          "description": "<p>If the viewer has permissions to push to the repository which stores the workflow.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReadRepository",
          "description": "<p>If the viewer has permissions to read the repository which stores the workflow.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    }
  ],
  "interfaces": [
    {
      "name": "Actor",
      "kind": "interfaces",
      "id": "actor",
      "href": "/graphql/reference/interfaces#actor",
      "description": "<p>Represents an object which can take actions on GitHub. Typically a User or Bot.</p>",
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the actor's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "login",
          "description": "<p>The username of the actor.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this actor.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this actor.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "AnnouncementBanner",
      "kind": "interfaces",
      "id": "announcementbanner",
      "href": "/graphql/reference/interfaces#announcementbanner",
      "description": "<p>Represents an announcement banner.</p>",
      "fields": [
        {
          "name": "announcement",
          "description": "<p>The text of the announcement.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "announcementExpiresAt",
          "description": "<p>The expiration date of the announcement, if any.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "announcementUserDismissible",
          "description": "<p>Whether the announcement can be dismissed by the user.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Assignable",
      "kind": "interfaces",
      "id": "assignable",
      "href": "/graphql/reference/interfaces#assignable",
      "description": "<p>An object that can have users assigned to it.</p>",
      "fields": [
        {
          "name": "assignees",
          "description": "<p>A list of Users assigned to this object.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "AuditEntry",
      "kind": "interfaces",
      "id": "auditentry",
      "href": "/graphql/reference/interfaces#auditentry",
      "description": "<p>An entry in the audit log.</p>",
      "fields": [
        {
          "name": "action",
          "description": "<p>The action name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actor",
          "description": "<p>The user who initiated the action.</p>",
          "type": "AuditEntryActor",
          "id": "auditentryactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#auditentryactor"
        },
        {
          "name": "actorIp",
          "description": "<p>The IP address of the actor.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorLocation",
          "description": "<p>A readable representation of the actor's location.</p>",
          "type": "ActorLocation",
          "id": "actorlocation",
          "kind": "objects",
          "href": "/graphql/reference/objects#actorlocation"
        },
        {
          "name": "actorLogin",
          "description": "<p>The username of the user who initiated the action.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorResourcePath",
          "description": "<p>The HTTP path for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "actorUrl",
          "description": "<p>The HTTP URL for the actor.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>The time the action was initiated.</p>",
          "type": "PreciseDateTime!",
          "id": "precisedatetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#precisedatetime"
        },
        {
          "name": "operationType",
          "description": "<p>The corresponding operation type for the action.</p>",
          "type": "OperationType",
          "id": "operationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#operationtype"
        },
        {
          "name": "user",
          "description": "<p>The user affected by the action.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "userLogin",
          "description": "<p>For actions involving two users, the actor is the initiator and the user is the affected user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userResourcePath",
          "description": "<p>The HTTP path for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userUrl",
          "description": "<p>The HTTP URL for the user.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Closable",
      "kind": "interfaces",
      "id": "closable",
      "href": "/graphql/reference/interfaces#closable",
      "description": "<p>An object that can be closed.</p>",
      "fields": [
        {
          "name": "closed",
          "description": "<p>Indicates if the object is closed (definition of closed may depend on type).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "viewerCanClose",
          "description": "<p>Indicates if the object can be closed by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReopen",
          "description": "<p>Indicates if the object can be reopened by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Comment",
      "kind": "interfaces",
      "id": "comment",
      "href": "/graphql/reference/interfaces#comment",
      "description": "<p>Represents a comment.</p>",
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Contribution",
      "kind": "interfaces",
      "id": "contribution",
      "href": "/graphql/reference/interfaces#contribution",
      "description": "<p>Represents a contribution a user made on GitHub, such as opening an issue.</p>",
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Deletable",
      "kind": "interfaces",
      "id": "deletable",
      "href": "/graphql/reference/interfaces#deletable",
      "description": "<p>Entities that can be deleted.</p>",
      "fields": [
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "EnterpriseAuditEntryData",
      "kind": "interfaces",
      "id": "enterpriseauditentrydata",
      "href": "/graphql/reference/interfaces#enterpriseauditentrydata",
      "description": "<p>Metadata for an audit entry containing enterprise account information.</p>",
      "fields": [
        {
          "name": "enterpriseResourcePath",
          "description": "<p>The HTTP path for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "enterpriseSlug",
          "description": "<p>The slug of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseUrl",
          "description": "<p>The HTTP URL for this enterprise.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "GitObject",
      "kind": "interfaces",
      "id": "gitobject",
      "href": "/graphql/reference/interfaces#gitobject",
      "description": "<p>Represents a Git object.</p>",
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the Git object belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "GitSignature",
      "kind": "interfaces",
      "id": "gitsignature",
      "href": "/graphql/reference/interfaces#gitsignature",
      "description": "<p>Information about a signature (GPG or S/MIME) on a Commit or Tag.</p>",
      "fields": [
        {
          "name": "email",
          "description": "<p>Email used to sign this object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isValid",
          "description": "<p>True if the signature is valid and verified by GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "payload",
          "description": "<p>Payload for GPG signing object. Raw ODB object without the signature header.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signature",
          "description": "<p>ASCII-armored signature header from object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signer",
          "description": "<p>GitHub user corresponding to the email signing this commit.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "state",
          "description": "<p>The state of this signature. <code>VALID</code> if signature is valid and verified by\nGitHub, otherwise represents reason why signature is considered invalid.</p>",
          "type": "GitSignatureState!",
          "id": "gitsignaturestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#gitsignaturestate"
        },
        {
          "name": "wasSignedByGitHub",
          "description": "<p>True if the signature was made with GitHub's signing key.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "HovercardContext",
      "kind": "interfaces",
      "id": "hovercardcontext",
      "href": "/graphql/reference/interfaces#hovercardcontext",
      "description": "<p>An individual line of a hovercard.</p>",
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "Labelable",
      "kind": "interfaces",
      "id": "labelable",
      "href": "/graphql/reference/interfaces#labelable",
      "description": "<p>An object that can have labels assigned to it.</p>",
      "fields": [
        {
          "name": "labels",
          "description": "<p>A list of labels associated with the object.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for labels returned from the connection.</p>",
              "type": {
                "name": "LabelOrder",
                "id": "labelorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#labelorder"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Lockable",
      "kind": "interfaces",
      "id": "lockable",
      "href": "/graphql/reference/interfaces#lockable",
      "description": "<p>An object that can be locked.</p>",
      "fields": [
        {
          "name": "activeLockReason",
          "description": "<p>Reason that the conversation was locked.</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "locked",
          "description": "<p><code>true</code> if the object is locked.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "MemberStatusable",
      "kind": "interfaces",
      "id": "memberstatusable",
      "href": "/graphql/reference/interfaces#memberstatusable",
      "description": "<p>Entities that have members who can set status messages.</p>",
      "fields": [
        {
          "name": "memberStatuses",
          "description": "<p>Get the status messages members of this entity have set that are either public or visible only to the organization.</p>",
          "type": "UserStatusConnection!",
          "id": "userstatusconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatusconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for user statuses returned from the connection.</p>",
              "type": {
                "name": "UserStatusOrder",
                "id": "userstatusorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#userstatusorder"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Migration",
      "kind": "interfaces",
      "id": "migration",
      "href": "/graphql/reference/interfaces#migration",
      "description": "<p>Represents a GitHub Enterprise Importer (GEI) migration.</p>",
      "fields": [
        {
          "name": "continueOnError",
          "description": "<p>The migration flag to continue on error.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "failureReason",
          "description": "<p>The reason the migration failed.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "migrationLogUrl",
          "description": "<p>The URL for the migration log (expires 1 day after migration completes).</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "migrationSource",
          "description": "<p>The migration source.</p>",
          "type": "MigrationSource!",
          "id": "migrationsource",
          "kind": "objects",
          "href": "/graphql/reference/objects#migrationsource"
        },
        {
          "name": "repositoryName",
          "description": "<p>The target repository name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "sourceUrl",
          "description": "<p>The migration source URL, for example <code>https://github.com</code> or <code>https://monalisa.ghe.com</code>.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>The migration state.</p>",
          "type": "MigrationState!",
          "id": "migrationstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#migrationstate"
        },
        {
          "name": "warningsCount",
          "description": "<p>The number of warnings encountered for this migration. To review the warnings,\ncheck the <a href=\"https://docs.github.com/en/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer\">Migration Log</a>.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "Minimizable",
      "kind": "interfaces",
      "id": "minimizable",
      "href": "/graphql/reference/interfaces#minimizable",
      "description": "<p>Entities that can be minimized.</p>",
      "fields": [
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized. One of <code>abuse</code>, <code>off-topic</code>,\n<code>outdated</code>, <code>resolved</code>, <code>duplicate</code> and <code>spam</code>. Note that the case and\nformatting of these values differs from the inputs to the <code>MinimizeComment</code> mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Node",
      "kind": "interfaces",
      "id": "node",
      "href": "/graphql/reference/interfaces#node",
      "description": "<p>An object with an ID.</p>",
      "fields": [
        {
          "name": "id",
          "description": "<p>ID of the object.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "OauthApplicationAuditEntryData",
      "kind": "interfaces",
      "id": "oauthapplicationauditentrydata",
      "href": "/graphql/reference/interfaces#oauthapplicationauditentrydata",
      "description": "<p>Metadata for an audit entry with action oauth_application.*.</p>",
      "fields": [
        {
          "name": "oauthApplicationName",
          "description": "<p>The name of the OAuth application.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oauthApplicationResourcePath",
          "description": "<p>The HTTP path for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "oauthApplicationUrl",
          "description": "<p>The HTTP URL for the OAuth application.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrganizationAuditEntryData",
      "kind": "interfaces",
      "id": "organizationauditentrydata",
      "href": "/graphql/reference/interfaces#organizationauditentrydata",
      "description": "<p>Metadata for an audit entry with action org.*.</p>",
      "fields": [
        {
          "name": "organization",
          "description": "<p>The Organization associated with the Audit Entry.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "organizationName",
          "description": "<p>The name of the Organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationResourcePath",
          "description": "<p>The HTTP path for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationUrl",
          "description": "<p>The HTTP URL for the organization.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "PackageOwner",
      "kind": "interfaces",
      "id": "packageowner",
      "href": "/graphql/reference/interfaces#packageowner",
      "description": "<p>Represents an owner of a package.</p>",
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "packages",
          "description": "<p>A list of packages under the owner.</p>",
          "type": "PackageConnection!",
          "id": "packageconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#packageconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "names",
              "description": "<p>Find packages by their names.</p>",
              "type": {
                "name": "[String]",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering of the returned packages.</p>",
              "type": {
                "name": "PackageOrder",
                "id": "packageorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#packageorder"
              }
            },
            {
              "name": "packageType",
              "description": "<p>Filter registry package by type.</p>",
              "type": {
                "name": "PackageType",
                "id": "packagetype",
                "kind": "enums",
                "href": "/graphql/reference/enums#packagetype"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Find packages in a repository by ID.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ProfileOwner",
      "kind": "interfaces",
      "id": "profileowner",
      "href": "/graphql/reference/interfaces#profileowner",
      "description": "<p>Represents any entity on GitHub that has a profile page.</p>",
      "fields": [
        {
          "name": "anyPinnableItems",
          "description": "<p>Determine if this repository owner has any items that can be pinned to their profile.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "type",
              "description": "<p>Filter to only a particular kind of pinnable item.</p>",
              "type": {
                "name": "PinnableItemType",
                "id": "pinnableitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "email",
          "description": "<p>The public profile email.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "itemShowcase",
          "description": "<p>Showcases a selection of repositories and gists that the profile owner has\neither curated or that have been selected automatically based on popularity.</p>",
          "type": "ProfileItemShowcase!",
          "id": "profileitemshowcase",
          "kind": "objects",
          "href": "/graphql/reference/objects#profileitemshowcase"
        },
        {
          "name": "location",
          "description": "<p>The public profile location.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "login",
          "description": "<p>The username used to login.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The public profile name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pinnableItems",
          "description": "<p>A list of repositories and gists this profile owner can pin to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinnable items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItems",
          "description": "<p>A list of repositories and gists this profile owner has pinned to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinned items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "kind": "enums",
                "href": "/graphql/reference/enums#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItemsRemaining",
          "description": "<p>Returns how many more items this profile owner can pin to their profile.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "viewerCanChangePinnedItems",
          "description": "<p>Can the viewer pin repositories and gists to the profile?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "websiteUrl",
          "description": "<p>The public profile website URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ProjectOwner",
      "kind": "interfaces",
      "id": "projectowner",
      "href": "/graphql/reference/interfaces#projectowner",
      "description": "<p>Represents an owner of a Project.</p>",
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "project",
          "description": "<p>Find project by number.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projects",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectConnection!",
          "id": "projectconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for projects returned from the connection.</p>",
              "type": {
                "name": "ProjectOrder",
                "id": "projectorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectorder"
              }
            },
            {
              "name": "search",
              "description": "<p>Query to search projects by, currently only searching by name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the projects by.</p>",
              "type": {
                "name": "[ProjectState!]",
                "id": "projectstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#projectstate"
              }
            }
          ]
        },
        {
          "name": "projectsResourcePath",
          "description": "<p>The HTTP path listing owners projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsUrl",
          "description": "<p>The HTTP URL listing owners projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanCreateProjects",
          "description": "<p>Can the current viewer create new projects on this owner.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "ProjectV2FieldCommon",
      "kind": "interfaces",
      "id": "projectv2fieldcommon",
      "href": "/graphql/reference/interfaces#projectv2fieldcommon",
      "description": "<p>Common fields across different project field types.</p>",
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "dataType",
          "description": "<p>The field's type.</p>",
          "type": "ProjectV2FieldType!",
          "id": "projectv2fieldtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2fieldtype"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "name",
          "description": "<p>The project field's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this field.</p>",
          "type": "ProjectV2!",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldValueCommon",
      "kind": "interfaces",
      "id": "projectv2itemfieldvaluecommon",
      "href": "/graphql/reference/interfaces#projectv2itemfieldvaluecommon",
      "description": "<p>Common fields across different project field value types.</p>",
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created the item.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "field",
          "description": "<p>The project field that contains this value.</p>",
          "type": "ProjectV2FieldConfiguration!",
          "id": "projectv2fieldconfiguration",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectv2fieldconfiguration"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "item",
          "description": "<p>The project item that contains this value.</p>",
          "type": "ProjectV2Item!",
          "id": "projectv2item",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2item"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ProjectV2Owner",
      "kind": "interfaces",
      "id": "projectv2owner",
      "href": "/graphql/reference/interfaces#projectv2owner",
      "description": "<p>Represents an owner of a project (beta).</p>",
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "projectV2",
          "description": "<p>Find a project by number.</p>",
          "type": "ProjectV2",
          "id": "projectv2",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "projectsV2",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>How to order the returned projects.</p>",
              "type": {
                "name": "ProjectV2Order",
                "id": "projectv2order",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#projectv2order"
              }
            },
            {
              "name": "query",
              "description": "<p>A project to search for under the the owner.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ProjectV2Recent",
      "kind": "interfaces",
      "id": "projectv2recent",
      "href": "/graphql/reference/interfaces#projectv2recent",
      "description": "<p>Recent projects for the owner.</p>",
      "fields": [
        {
          "name": "recentProjects",
          "description": "<p>Recent projects that this user has modified in the context of the owner.</p>",
          "type": "ProjectV2Connection!",
          "id": "projectv2connection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectv2connection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Reactable",
      "kind": "interfaces",
      "id": "reactable",
      "href": "/graphql/reference/interfaces#reactable",
      "description": "<p>Represents a subject that can be reacted on.</p>",
      "fields": [
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "kind": "enums",
                "href": "/graphql/reference/enums#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#reactionorder"
              }
            }
          ]
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "RepositoryAuditEntryData",
      "kind": "interfaces",
      "id": "repositoryauditentrydata",
      "href": "/graphql/reference/interfaces#repositoryauditentrydata",
      "description": "<p>Metadata for an audit entry with action repo.*.</p>",
      "fields": [
        {
          "name": "repository",
          "description": "<p>The repository associated with the action.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryResourcePath",
          "description": "<p>The HTTP path for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoryUrl",
          "description": "<p>The HTTP URL for the repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepositoryDiscussionAuthor",
      "kind": "interfaces",
      "id": "repositorydiscussionauthor",
      "href": "/graphql/reference/interfaces#repositorydiscussionauthor",
      "description": "<p>Represents an author of discussions in repositories.</p>",
      "fields": [
        {
          "name": "repositoryDiscussions",
          "description": "<p>Discussions this user has started.</p>",
          "type": "DiscussionConnection!",
          "id": "discussionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "answered",
              "description": "<p>Filter discussions to only those that have been answered or not. Defaults to\nincluding both answered and unanswered discussions.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for discussions returned from the connection.</p>",
              "type": {
                "name": "DiscussionOrder",
                "id": "discussionorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#discussionorder"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Filter discussions to only those in a specific repository.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the discussions by.</p>",
              "type": {
                "name": "[DiscussionState!]",
                "id": "discussionstate",
                "kind": "enums",
                "href": "/graphql/reference/enums#discussionstate"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "RepositoryDiscussionCommentAuthor",
      "kind": "interfaces",
      "id": "repositorydiscussioncommentauthor",
      "href": "/graphql/reference/interfaces#repositorydiscussioncommentauthor",
      "description": "<p>Represents an author of discussion comments in repositories.</p>",
      "fields": [
        {
          "name": "repositoryDiscussionComments",
          "description": "<p>Discussion comments this user has authored.</p>",
          "type": "DiscussionCommentConnection!",
          "id": "discussioncommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#discussioncommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "onlyAnswers",
              "defaultValue": false,
              "description": "<p>Filter discussion comments to only those that were marked as the answer.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "repositoryId",
              "description": "<p>Filter discussion comments to only those in a specific repository.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "RepositoryInfo",
      "kind": "interfaces",
      "id": "repositoryinfo",
      "href": "/graphql/reference/interfaces#repositoryinfo",
      "description": "<p>A subset of repository info.</p>",
      "fields": [
        {
          "name": "archivedAt",
          "description": "<p>Identifies the date and time when the repository was archived.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "description",
          "description": "<p>The description of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "descriptionHTML",
          "description": "<p>The description of the repository rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "forkCount",
          "description": "<p>Returns how many forks there are of this repository in the whole network.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "hasAnonymousAccessEnabled",
          "description": "<p>Indicates if the repository has anonymous Git read access feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasDiscussionsEnabled",
          "description": "<p>Indicates if the repository has the Discussions feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasIssuesEnabled",
          "description": "<p>Indicates if the repository has issues feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasProjectsEnabled",
          "description": "<p>Indicates if the repository has the Projects feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasWikiEnabled",
          "description": "<p>Indicates if the repository has wiki feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "homepageUrl",
          "description": "<p>The repository's URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "isArchived",
          "description": "<p>Indicates if the repository is unmaintained.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isFork",
          "description": "<p>Identifies if the repository is a fork.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isInOrganization",
          "description": "<p>Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isLocked",
          "description": "<p>Indicates if the repository has been locked or not.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMirror",
          "description": "<p>Identifies if the repository is a mirror.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPrivate",
          "description": "<p>Identifies if the repository is private or internal.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isTemplate",
          "description": "<p>Identifies if the repository is a template that can be used to generate new repositories.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "licenseInfo",
          "description": "<p>The license associated with the repository.</p>",
          "type": "License",
          "id": "license",
          "kind": "objects",
          "href": "/graphql/reference/objects#license"
        },
        {
          "name": "lockReason",
          "description": "<p>The reason the repository has been locked.</p>",
          "type": "RepositoryLockReason",
          "id": "repositorylockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorylockreason"
        },
        {
          "name": "mirrorUrl",
          "description": "<p>The repository's original mirror URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>The name of the repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameWithOwner",
          "description": "<p>The repository's name with owner.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "openGraphImageUrl",
          "description": "<p>The image used to represent this repository in Open Graph data.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "owner",
          "description": "<p>The User owner of the repository.</p>",
          "type": "RepositoryOwner!",
          "id": "repositoryowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "pushedAt",
          "description": "<p>Identifies the date and time when the repository was last pushed to.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this repository.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "shortDescriptionHTML",
          "description": "<p>A description of the repository, rendered to HTML without any links in it.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html",
          "arguments": [
            {
              "name": "limit",
              "defaultValue": "200",
              "description": "<p>How many characters to return.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this repository.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "usesCustomOpenGraphImage",
          "description": "<p>Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "visibility",
          "description": "<p>Indicates the repository's visibility level.</p>",
          "type": "RepositoryVisibility!",
          "id": "repositoryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositoryvisibility"
        }
      ]
    },
    {
      "name": "RepositoryNode",
      "kind": "interfaces",
      "id": "repositorynode",
      "href": "/graphql/reference/interfaces#repositorynode",
      "description": "<p>Represents a object that belongs to a repository.</p>",
      "fields": [
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "RepositoryOwner",
      "kind": "interfaces",
      "id": "repositoryowner",
      "href": "/graphql/reference/interfaces#repositoryowner",
      "description": "<p>Represents an owner of a Repository.</p>",
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the owner's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        },
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "login",
          "description": "<p>The username used to login.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositories",
          "description": "<p>A list of repositories that the user owns.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "isFork",
              "description": "<p>If non-null, filters repositories according to whether they are forks of another repository.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "kind": "enums",
                "href": "/graphql/reference/enums#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>Find Repository.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "arguments": [
            {
              "name": "followRenames",
              "defaultValue": true,
              "description": "<p>Follow repository renames. If disabled, a repository referenced by its old name will return an error.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#boolean"
              }
            },
            {
              "name": "name",
              "description": "<p>Name of Repository to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP URL for the owner.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for the owner.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RequirableByPullRequest",
      "kind": "interfaces",
      "id": "requirablebypullrequest",
      "href": "/graphql/reference/interfaces#requirablebypullrequest",
      "description": "<p>Represents a type that can be required by a pull request for merging.</p>",
      "fields": [
        {
          "name": "isRequired",
          "description": "<p>Whether this is required to pass before merging for a specific pull request.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "pullRequestId",
              "description": "<p>The id of the pull request this is required for.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#id"
              }
            },
            {
              "name": "pullRequestNumber",
              "description": "<p>The number of the pull request this is required for.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Starrable",
      "kind": "interfaces",
      "id": "starrable",
      "href": "/graphql/reference/interfaces#starrable",
      "description": "<p>Things that can be starred.</p>",
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "stargazerCount",
          "description": "<p>Returns a count of how many stargazers there are on this object.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "stargazers",
          "description": "<p>A list of users who have starred this starrable.</p>",
          "type": "StargazerConnection!",
          "id": "stargazerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "kind": "scalars",
                "href": "/graphql/reference/scalars#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "kind": "input-objects",
                "href": "/graphql/reference/input-objects#starorder"
              }
            }
          ]
        },
        {
          "name": "viewerHasStarred",
          "description": "<p>Returns a boolean indicating whether the viewing user has starred this starrable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Subscribable",
      "kind": "interfaces",
      "id": "subscribable",
      "href": "/graphql/reference/interfaces#subscribable",
      "description": "<p>Entities that can be subscribed to for web and email notifications.</p>",
      "fields": [
        {
          "name": "id",
          "description": "",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "TeamAuditEntryData",
      "kind": "interfaces",
      "id": "teamauditentrydata",
      "href": "/graphql/reference/interfaces#teamauditentrydata",
      "description": "<p>Metadata for an audit entry with action team.*.</p>",
      "fields": [
        {
          "name": "team",
          "description": "<p>The team associated with the action.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "teamName",
          "description": "<p>The name of the team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teamResourcePath",
          "description": "<p>The HTTP path for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamUrl",
          "description": "<p>The HTTP URL for this team.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "TopicAuditEntryData",
      "kind": "interfaces",
      "id": "topicauditentrydata",
      "href": "/graphql/reference/interfaces#topicauditentrydata",
      "description": "<p>Metadata for an audit entry with a topic.</p>",
      "fields": [
        {
          "name": "topic",
          "description": "<p>The name of the topic added to the repository.</p>",
          "type": "Topic",
          "id": "topic",
          "kind": "objects",
          "href": "/graphql/reference/objects#topic"
        },
        {
          "name": "topicName",
          "description": "<p>The name of the topic added to the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UniformResourceLocatable",
      "kind": "interfaces",
      "id": "uniformresourcelocatable",
      "href": "/graphql/reference/interfaces#uniformresourcelocatable",
      "description": "<p>Represents a type that can be retrieved by a URL.</p>",
      "fields": [
        {
          "name": "resourcePath",
          "description": "<p>The HTML path to this resource.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The URL to this resource.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Updatable",
      "kind": "interfaces",
      "id": "updatable",
      "href": "/graphql/reference/interfaces#updatable",
      "description": "<p>Entities that can be updated.</p>",
      "fields": [
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "UpdatableComment",
      "kind": "interfaces",
      "id": "updatablecomment",
      "href": "/graphql/reference/interfaces#updatablecomment",
      "description": "<p>Comments that can be updated.</p>",
      "fields": [
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        }
      ]
    },
    {
      "name": "Votable",
      "kind": "interfaces",
      "id": "votable",
      "href": "/graphql/reference/interfaces#votable",
      "description": "<p>A subject that may be upvoted.</p>",
      "fields": [
        {
          "name": "upvoteCount",
          "description": "<p>Number of upvotes that this subject has received.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "viewerCanUpvote",
          "description": "<p>Whether or not the current user can add or remove an upvote on this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerHasUpvoted",
          "description": "<p>Whether or not the current user has already upvoted this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    }
  ],
  "enums": [
    {
      "name": "ActorType",
      "kind": "enums",
      "id": "actortype",
      "href": "/graphql/reference/enums#actortype",
      "description": "<p>The actor's type.</p>",
      "values": [
        {
          "name": "TEAM",
          "description": "<p>Indicates a team actor.</p>"
        },
        {
          "name": "USER",
          "description": "<p>Indicates a user actor.</p>"
        }
      ]
    },
    {
      "name": "AuditLogOrderField",
      "kind": "enums",
      "id": "auditlogorderfield",
      "href": "/graphql/reference/enums#auditlogorderfield",
      "description": "<p>Properties by which Audit Log connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order audit log entries by timestamp.</p>"
        }
      ]
    },
    {
      "name": "CheckAnnotationLevel",
      "kind": "enums",
      "id": "checkannotationlevel",
      "href": "/graphql/reference/enums#checkannotationlevel",
      "description": "<p>Represents an annotation's information level.</p>",
      "values": [
        {
          "name": "FAILURE",
          "description": "<p>An annotation indicating an inescapable error.</p>"
        },
        {
          "name": "NOTICE",
          "description": "<p>An annotation indicating some information.</p>"
        },
        {
          "name": "WARNING",
          "description": "<p>An annotation indicating an ignorable error.</p>"
        }
      ]
    },
    {
      "name": "CheckConclusionState",
      "kind": "enums",
      "id": "checkconclusionstate",
      "href": "/graphql/reference/enums#checkconclusionstate",
      "description": "<p>The possible states for a check suite or run conclusion.</p>",
      "values": [
        {
          "name": "ACTION_REQUIRED",
          "description": "<p>The check suite or run requires action.</p>"
        },
        {
          "name": "CANCELLED",
          "description": "<p>The check suite or run has been cancelled.</p>"
        },
        {
          "name": "FAILURE",
          "description": "<p>The check suite or run has failed.</p>"
        },
        {
          "name": "NEUTRAL",
          "description": "<p>The check suite or run was neutral.</p>"
        },
        {
          "name": "SKIPPED",
          "description": "<p>The check suite or run was skipped.</p>"
        },
        {
          "name": "STALE",
          "description": "<p>The check suite or run was marked stale by GitHub. Only GitHub can use this conclusion.</p>"
        },
        {
          "name": "STARTUP_FAILURE",
          "description": "<p>The check suite or run has failed at startup.</p>"
        },
        {
          "name": "SUCCESS",
          "description": "<p>The check suite or run has succeeded.</p>"
        },
        {
          "name": "TIMED_OUT",
          "description": "<p>The check suite or run has timed out.</p>"
        }
      ]
    },
    {
      "name": "CheckRunState",
      "kind": "enums",
      "id": "checkrunstate",
      "href": "/graphql/reference/enums#checkrunstate",
      "description": "<p>The possible states of a check run in a status rollup.</p>",
      "values": [
        {
          "name": "ACTION_REQUIRED",
          "description": "<p>The check run requires action.</p>"
        },
        {
          "name": "CANCELLED",
          "description": "<p>The check run has been cancelled.</p>"
        },
        {
          "name": "COMPLETED",
          "description": "<p>The check run has been completed.</p>"
        },
        {
          "name": "FAILURE",
          "description": "<p>The check run has failed.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The check run is in progress.</p>"
        },
        {
          "name": "NEUTRAL",
          "description": "<p>The check run was neutral.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>The check run is in pending state.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The check run has been queued.</p>"
        },
        {
          "name": "SKIPPED",
          "description": "<p>The check run was skipped.</p>"
        },
        {
          "name": "STALE",
          "description": "<p>The check run was marked stale by GitHub. Only GitHub can use this conclusion.</p>"
        },
        {
          "name": "STARTUP_FAILURE",
          "description": "<p>The check run has failed at startup.</p>"
        },
        {
          "name": "SUCCESS",
          "description": "<p>The check run has succeeded.</p>"
        },
        {
          "name": "TIMED_OUT",
          "description": "<p>The check run has timed out.</p>"
        },
        {
          "name": "WAITING",
          "description": "<p>The check run is in waiting state.</p>"
        }
      ]
    },
    {
      "name": "CheckRunType",
      "kind": "enums",
      "id": "checkruntype",
      "href": "/graphql/reference/enums#checkruntype",
      "description": "<p>The possible types of check runs.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>Every check run available.</p>"
        },
        {
          "name": "LATEST",
          "description": "<p>The latest check run.</p>"
        }
      ]
    },
    {
      "name": "CheckStatusState",
      "kind": "enums",
      "id": "checkstatusstate",
      "href": "/graphql/reference/enums#checkstatusstate",
      "description": "<p>The possible states for a check suite or run status.</p>",
      "values": [
        {
          "name": "COMPLETED",
          "description": "<p>The check suite or run has been completed.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The check suite or run is in progress.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>The check suite or run is in pending state.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The check suite or run has been queued.</p>"
        },
        {
          "name": "REQUESTED",
          "description": "<p>The check suite or run has been requested.</p>"
        },
        {
          "name": "WAITING",
          "description": "<p>The check suite or run is in waiting state.</p>"
        }
      ]
    },
    {
      "name": "CollaboratorAffiliation",
      "kind": "enums",
      "id": "collaboratoraffiliation",
      "href": "/graphql/reference/enums#collaboratoraffiliation",
      "description": "<p>Collaborators affiliation level with a subject.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>All collaborators the authenticated user can see.</p>"
        },
        {
          "name": "DIRECT",
          "description": "<p>All collaborators with permissions to an organization-owned subject, regardless of organization membership status.</p>"
        },
        {
          "name": "OUTSIDE",
          "description": "<p>All outside collaborators of an organization-owned subject.</p>"
        }
      ]
    },
    {
      "name": "CommentAuthorAssociation",
      "kind": "enums",
      "id": "commentauthorassociation",
      "href": "/graphql/reference/enums#commentauthorassociation",
      "description": "<p>A comment author association with repository.</p>",
      "values": [
        {
          "name": "COLLABORATOR",
          "description": "<p>Author has been invited to collaborate on the repository.</p>"
        },
        {
          "name": "CONTRIBUTOR",
          "description": "<p>Author has previously committed to the repository.</p>"
        },
        {
          "name": "FIRST_TIMER",
          "description": "<p>Author has not previously committed to GitHub.</p>"
        },
        {
          "name": "FIRST_TIME_CONTRIBUTOR",
          "description": "<p>Author has not previously committed to the repository.</p>"
        },
        {
          "name": "MANNEQUIN",
          "description": "<p>Author is a placeholder for an unclaimed user.</p>"
        },
        {
          "name": "MEMBER",
          "description": "<p>Author is a member of the organization that owns the repository.</p>"
        },
        {
          "name": "NONE",
          "description": "<p>Author has no association with the repository.</p>"
        },
        {
          "name": "OWNER",
          "description": "<p>Author is the owner of the repository.</p>"
        }
      ]
    },
    {
      "name": "CommentCannotUpdateReason",
      "kind": "enums",
      "id": "commentcannotupdatereason",
      "href": "/graphql/reference/enums#commentcannotupdatereason",
      "description": "<p>The possible errors that will prevent a user from updating a comment.</p>",
      "values": [
        {
          "name": "ARCHIVED",
          "description": "<p>Unable to create comment because repository is archived.</p>"
        },
        {
          "name": "DENIED",
          "description": "<p>You cannot update this comment.</p>"
        },
        {
          "name": "INSUFFICIENT_ACCESS",
          "description": "<p>You must be the author or have write access to this repository to update this comment.</p>"
        },
        {
          "name": "LOCKED",
          "description": "<p>Unable to create comment because issue is locked.</p>"
        },
        {
          "name": "LOGIN_REQUIRED",
          "description": "<p>You must be logged in to update this comment.</p>"
        },
        {
          "name": "MAINTENANCE",
          "description": "<p>Repository is under maintenance.</p>"
        },
        {
          "name": "VERIFIED_EMAIL_REQUIRED",
          "description": "<p>At least one email address must be verified to update this comment.</p>"
        }
      ]
    },
    {
      "name": "CommitContributionOrderField",
      "kind": "enums",
      "id": "commitcontributionorderfield",
      "href": "/graphql/reference/enums#commitcontributionorderfield",
      "description": "<p>Properties by which commit contribution connections can be ordered.</p>",
      "values": [
        {
          "name": "COMMIT_COUNT",
          "description": "<p>Order commit contributions by how many commits they represent.</p>"
        },
        {
          "name": "OCCURRED_AT",
          "description": "<p>Order commit contributions by when they were made.</p>"
        }
      ]
    },
    {
      "name": "ComparisonStatus",
      "kind": "enums",
      "id": "comparisonstatus",
      "href": "/graphql/reference/enums#comparisonstatus",
      "description": "<p>The status of a git comparison between two refs.</p>",
      "values": [
        {
          "name": "AHEAD",
          "description": "<p>The head ref is ahead of the base ref.</p>"
        },
        {
          "name": "BEHIND",
          "description": "<p>The head ref is behind the base ref.</p>"
        },
        {
          "name": "DIVERGED",
          "description": "<p>The head ref is both ahead and behind of the base ref, indicating git history has diverged.</p>"
        },
        {
          "name": "IDENTICAL",
          "description": "<p>The head ref and base ref are identical.</p>"
        }
      ]
    },
    {
      "name": "ContributionLevel",
      "kind": "enums",
      "id": "contributionlevel",
      "href": "/graphql/reference/enums#contributionlevel",
      "description": "<p>Varying levels of contributions from none to many.</p>",
      "values": [
        {
          "name": "FIRST_QUARTILE",
          "description": "<p>Lowest 25% of days of contributions.</p>"
        },
        {
          "name": "FOURTH_QUARTILE",
          "description": "<p>Highest 25% of days of contributions. More contributions than the third quartile.</p>"
        },
        {
          "name": "NONE",
          "description": "<p>No contributions occurred.</p>"
        },
        {
          "name": "SECOND_QUARTILE",
          "description": "<p>Second lowest 25% of days of contributions. More contributions than the first quartile.</p>"
        },
        {
          "name": "THIRD_QUARTILE",
          "description": "<p>Second highest 25% of days of contributions. More contributions than second quartile, less than the fourth quartile.</p>"
        }
      ]
    },
    {
      "name": "DefaultRepositoryPermissionField",
      "kind": "enums",
      "id": "defaultrepositorypermissionfield",
      "href": "/graphql/reference/enums#defaultrepositorypermissionfield",
      "description": "<p>The possible base permissions for repositories.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>Can read, write, and administrate repos by default.</p>"
        },
        {
          "name": "NONE",
          "description": "<p>No access.</p>"
        },
        {
          "name": "READ",
          "description": "<p>Can read repos by default.</p>"
        },
        {
          "name": "WRITE",
          "description": "<p>Can read and write repos by default.</p>"
        }
      ]
    },
    {
      "name": "DeploymentOrderField",
      "kind": "enums",
      "id": "deploymentorderfield",
      "href": "/graphql/reference/enums#deploymentorderfield",
      "description": "<p>Properties by which deployment connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order collection by creation time.</p>"
        }
      ]
    },
    {
      "name": "DeploymentProtectionRuleType",
      "kind": "enums",
      "id": "deploymentprotectionruletype",
      "href": "/graphql/reference/enums#deploymentprotectionruletype",
      "description": "<p>The possible protection rule types.</p>",
      "values": [
        {
          "name": "REQUIRED_REVIEWERS",
          "description": "<p>Required reviewers.</p>"
        },
        {
          "name": "WAIT_TIMER",
          "description": "<p>Wait timer.</p>"
        }
      ]
    },
    {
      "name": "DeploymentReviewState",
      "kind": "enums",
      "id": "deploymentreviewstate",
      "href": "/graphql/reference/enums#deploymentreviewstate",
      "description": "<p>The possible states for a deployment review.</p>",
      "values": [
        {
          "name": "APPROVED",
          "description": "<p>The deployment was approved.</p>"
        },
        {
          "name": "REJECTED",
          "description": "<p>The deployment was rejected.</p>"
        }
      ]
    },
    {
      "name": "DeploymentState",
      "kind": "enums",
      "id": "deploymentstate",
      "href": "/graphql/reference/enums#deploymentstate",
      "description": "<p>The possible states in which a deployment can be.</p>",
      "values": [
        {
          "name": "ABANDONED",
          "description": "<p>The pending deployment was not updated after 30 minutes.</p>"
        },
        {
          "name": "ACTIVE",
          "description": "<p>The deployment is currently active.</p>"
        },
        {
          "name": "DESTROYED",
          "description": "<p>An inactive transient deployment.</p>"
        },
        {
          "name": "ERROR",
          "description": "<p>The deployment experienced an error.</p>"
        },
        {
          "name": "FAILURE",
          "description": "<p>The deployment has failed.</p>"
        },
        {
          "name": "INACTIVE",
          "description": "<p>The deployment is inactive.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The deployment is in progress.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>The deployment is pending.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The deployment has queued.</p>"
        },
        {
          "name": "SUCCESS",
          "description": "<p>The deployment was successful.</p>"
        },
        {
          "name": "WAITING",
          "description": "<p>The deployment is waiting.</p>"
        }
      ]
    },
    {
      "name": "DeploymentStatusState",
      "kind": "enums",
      "id": "deploymentstatusstate",
      "href": "/graphql/reference/enums#deploymentstatusstate",
      "description": "<p>The possible states for a deployment status.</p>",
      "values": [
        {
          "name": "ERROR",
          "description": "<p>The deployment experienced an error.</p>"
        },
        {
          "name": "FAILURE",
          "description": "<p>The deployment has failed.</p>"
        },
        {
          "name": "INACTIVE",
          "description": "<p>The deployment is inactive.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The deployment is in progress.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>The deployment is pending.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The deployment is queued.</p>"
        },
        {
          "name": "SUCCESS",
          "description": "<p>The deployment was successful.</p>"
        },
        {
          "name": "WAITING",
          "description": "<p>The deployment is waiting.</p>"
        }
      ]
    },
    {
      "name": "DiffSide",
      "kind": "enums",
      "id": "diffside",
      "href": "/graphql/reference/enums#diffside",
      "description": "<p>The possible sides of a diff.</p>",
      "values": [
        {
          "name": "LEFT",
          "description": "<p>The left side of the diff.</p>"
        },
        {
          "name": "RIGHT",
          "description": "<p>The right side of the diff.</p>"
        }
      ]
    },
    {
      "name": "DiscussionCloseReason",
      "kind": "enums",
      "id": "discussionclosereason",
      "href": "/graphql/reference/enums#discussionclosereason",
      "description": "<p>The possible reasons for closing a discussion.</p>",
      "values": [
        {
          "name": "DUPLICATE",
          "description": "<p>The discussion is a duplicate of another.</p>"
        },
        {
          "name": "OUTDATED",
          "description": "<p>The discussion is no longer relevant.</p>"
        },
        {
          "name": "RESOLVED",
          "description": "<p>The discussion has been resolved.</p>"
        }
      ]
    },
    {
      "name": "DiscussionOrderField",
      "kind": "enums",
      "id": "discussionorderfield",
      "href": "/graphql/reference/enums#discussionorderfield",
      "description": "<p>Properties by which discussion connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order discussions by creation time.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order discussions by most recent modification time.</p>"
        }
      ]
    },
    {
      "name": "DiscussionPollOptionOrderField",
      "kind": "enums",
      "id": "discussionpolloptionorderfield",
      "href": "/graphql/reference/enums#discussionpolloptionorderfield",
      "description": "<p>Properties by which discussion poll option connections can be ordered.</p>",
      "values": [
        {
          "name": "AUTHORED_ORDER",
          "description": "<p>Order poll options by the order that the poll author specified when creating the poll.</p>"
        },
        {
          "name": "VOTE_COUNT",
          "description": "<p>Order poll options by the number of votes it has.</p>"
        }
      ]
    },
    {
      "name": "DiscussionState",
      "kind": "enums",
      "id": "discussionstate",
      "href": "/graphql/reference/enums#discussionstate",
      "description": "<p>The possible states of a discussion.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>A discussion that has been closed.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>A discussion that is open.</p>"
        }
      ]
    },
    {
      "name": "DiscussionStateReason",
      "kind": "enums",
      "id": "discussionstatereason",
      "href": "/graphql/reference/enums#discussionstatereason",
      "description": "<p>The possible state reasons of a discussion.</p>",
      "values": [
        {
          "name": "DUPLICATE",
          "description": "<p>The discussion is a duplicate of another.</p>"
        },
        {
          "name": "OUTDATED",
          "description": "<p>The discussion is no longer relevant.</p>"
        },
        {
          "name": "REOPENED",
          "description": "<p>The discussion was reopened.</p>"
        },
        {
          "name": "RESOLVED",
          "description": "<p>The discussion has been resolved.</p>"
        }
      ]
    },
    {
      "name": "DismissReason",
      "kind": "enums",
      "id": "dismissreason",
      "href": "/graphql/reference/enums#dismissreason",
      "description": "<p>The possible reasons that a Dependabot alert was dismissed.</p>",
      "values": [
        {
          "name": "FIX_STARTED",
          "description": "<p>A fix has already been started.</p>"
        },
        {
          "name": "INACCURATE",
          "description": "<p>This alert is inaccurate or incorrect.</p>"
        },
        {
          "name": "NOT_USED",
          "description": "<p>Vulnerable code is not actually used.</p>"
        },
        {
          "name": "NO_BANDWIDTH",
          "description": "<p>No bandwidth to fix this.</p>"
        },
        {
          "name": "TOLERABLE_RISK",
          "description": "<p>Risk is tolerable to this project.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseAdministratorInvitationOrderField",
      "kind": "enums",
      "id": "enterpriseadministratorinvitationorderfield",
      "href": "/graphql/reference/enums#enterpriseadministratorinvitationorderfield",
      "description": "<p>Properties by which enterprise administrator invitation connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order enterprise administrator member invitations by creation time.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseAdministratorRole",
      "kind": "enums",
      "id": "enterpriseadministratorrole",
      "href": "/graphql/reference/enums#enterpriseadministratorrole",
      "description": "<p>The possible administrator roles in an enterprise account.</p>",
      "values": [
        {
          "name": "BILLING_MANAGER",
          "description": "<p>Represents a billing manager of the enterprise account.</p>"
        },
        {
          "name": "OWNER",
          "description": "<p>Represents an owner of the enterprise account.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseAllowPrivateRepositoryForkingPolicyValue",
      "kind": "enums",
      "id": "enterpriseallowprivaterepositoryforkingpolicyvalue",
      "href": "/graphql/reference/enums#enterpriseallowprivaterepositoryforkingpolicyvalue",
      "description": "<p>The possible values for the enterprise allow private repository forking policy value.</p>",
      "values": [
        {
          "name": "ENTERPRISE_ORGANIZATIONS",
          "description": "<p>Members can fork a repository to an organization within this enterprise.</p>"
        },
        {
          "name": "ENTERPRISE_ORGANIZATIONS_USER_ACCOUNTS",
          "description": "<p>Members can fork a repository to their enterprise-managed user account or an organization inside this enterprise.</p>"
        },
        {
          "name": "EVERYWHERE",
          "description": "<p>Members can fork a repository to their user account or an organization, either inside or outside of this enterprise.</p>"
        },
        {
          "name": "SAME_ORGANIZATION",
          "description": "<p>Members can fork a repository only within the same organization (intra-org).</p>"
        },
        {
          "name": "SAME_ORGANIZATION_USER_ACCOUNTS",
          "description": "<p>Members can fork a repository to their user account or within the same organization.</p>"
        },
        {
          "name": "USER_ACCOUNTS",
          "description": "<p>Members can fork a repository to their user account.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseDefaultRepositoryPermissionSettingValue",
      "kind": "enums",
      "id": "enterprisedefaultrepositorypermissionsettingvalue",
      "href": "/graphql/reference/enums#enterprisedefaultrepositorypermissionsettingvalue",
      "description": "<p>The possible values for the enterprise base repository permission setting.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>Organization members will be able to clone, pull, push, and add new collaborators to all organization repositories.</p>"
        },
        {
          "name": "NONE",
          "description": "<p>Organization members will only be able to clone and pull public repositories.</p>"
        },
        {
          "name": "NO_POLICY",
          "description": "<p>Organizations in the enterprise choose base repository permissions for their members.</p>"
        },
        {
          "name": "READ",
          "description": "<p>Organization members will be able to clone and pull all organization repositories.</p>"
        },
        {
          "name": "WRITE",
          "description": "<p>Organization members will be able to clone, pull, and push all organization repositories.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseEnabledDisabledSettingValue",
      "kind": "enums",
      "id": "enterpriseenableddisabledsettingvalue",
      "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue",
      "description": "<p>The possible values for an enabled/disabled enterprise setting.</p>",
      "values": [
        {
          "name": "DISABLED",
          "description": "<p>The setting is disabled for organizations in the enterprise.</p>"
        },
        {
          "name": "ENABLED",
          "description": "<p>The setting is enabled for organizations in the enterprise.</p>"
        },
        {
          "name": "NO_POLICY",
          "description": "<p>There is no policy set for organizations in the enterprise.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseEnabledSettingValue",
      "kind": "enums",
      "id": "enterpriseenabledsettingvalue",
      "href": "/graphql/reference/enums#enterpriseenabledsettingvalue",
      "description": "<p>The possible values for an enabled/no policy enterprise setting.</p>",
      "values": [
        {
          "name": "ENABLED",
          "description": "<p>The setting is enabled for organizations in the enterprise.</p>"
        },
        {
          "name": "NO_POLICY",
          "description": "<p>There is no policy set for organizations in the enterprise.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseMemberOrderField",
      "kind": "enums",
      "id": "enterprisememberorderfield",
      "href": "/graphql/reference/enums#enterprisememberorderfield",
      "description": "<p>Properties by which enterprise member connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order enterprise members by creation time.</p>"
        },
        {
          "name": "LOGIN",
          "description": "<p>Order enterprise members by login.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseMembersCanCreateRepositoriesSettingValue",
      "kind": "enums",
      "id": "enterprisememberscancreaterepositoriessettingvalue",
      "href": "/graphql/reference/enums#enterprisememberscancreaterepositoriessettingvalue",
      "description": "<p>The possible values for the enterprise members can create repositories setting.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>Members will be able to create public and private repositories.</p>"
        },
        {
          "name": "DISABLED",
          "description": "<p>Members will not be able to create public or private repositories.</p>"
        },
        {
          "name": "NO_POLICY",
          "description": "<p>Organization administrators choose whether to allow members to create repositories.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>Members will be able to create only private repositories.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>Members will be able to create only public repositories.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseMembersCanMakePurchasesSettingValue",
      "kind": "enums",
      "id": "enterprisememberscanmakepurchasessettingvalue",
      "href": "/graphql/reference/enums#enterprisememberscanmakepurchasessettingvalue",
      "description": "<p>The possible values for the members can make purchases setting.</p>",
      "values": [
        {
          "name": "DISABLED",
          "description": "<p>The setting is disabled for organizations in the enterprise.</p>"
        },
        {
          "name": "ENABLED",
          "description": "<p>The setting is enabled for organizations in the enterprise.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseServerInstallationOrderField",
      "kind": "enums",
      "id": "enterpriseserverinstallationorderfield",
      "href": "/graphql/reference/enums#enterpriseserverinstallationorderfield",
      "description": "<p>Properties by which Enterprise Server installation connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order Enterprise Server installations by creation time.</p>"
        },
        {
          "name": "CUSTOMER_NAME",
          "description": "<p>Order Enterprise Server installations by customer name.</p>"
        },
        {
          "name": "HOST_NAME",
          "description": "<p>Order Enterprise Server installations by host name.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountEmailOrderField",
      "kind": "enums",
      "id": "enterpriseserveruseraccountemailorderfield",
      "href": "/graphql/reference/enums#enterpriseserveruseraccountemailorderfield",
      "description": "<p>Properties by which Enterprise Server user account email connections can be ordered.</p>",
      "values": [
        {
          "name": "EMAIL",
          "description": "<p>Order emails by email.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountOrderField",
      "kind": "enums",
      "id": "enterpriseserveruseraccountorderfield",
      "href": "/graphql/reference/enums#enterpriseserveruseraccountorderfield",
      "description": "<p>Properties by which Enterprise Server user account connections can be ordered.</p>",
      "values": [
        {
          "name": "LOGIN",
          "description": "<p>Order user accounts by login.</p>"
        },
        {
          "name": "REMOTE_CREATED_AT",
          "description": "<p>Order user accounts by creation time on the Enterprise Server installation.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountsUploadOrderField",
      "kind": "enums",
      "id": "enterpriseserveruseraccountsuploadorderfield",
      "href": "/graphql/reference/enums#enterpriseserveruseraccountsuploadorderfield",
      "description": "<p>Properties by which Enterprise Server user accounts upload connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order user accounts uploads by creation time.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountsUploadSyncState",
      "kind": "enums",
      "id": "enterpriseserveruseraccountsuploadsyncstate",
      "href": "/graphql/reference/enums#enterpriseserveruseraccountsuploadsyncstate",
      "description": "<p>Synchronization state of the Enterprise Server user accounts upload.</p>",
      "values": [
        {
          "name": "FAILURE",
          "description": "<p>The synchronization of the upload failed.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>The synchronization of the upload is pending.</p>"
        },
        {
          "name": "SUCCESS",
          "description": "<p>The synchronization of the upload succeeded.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseUserAccountMembershipRole",
      "kind": "enums",
      "id": "enterpriseuseraccountmembershiprole",
      "href": "/graphql/reference/enums#enterpriseuseraccountmembershiprole",
      "description": "<p>The possible roles for enterprise membership.</p>",
      "values": [
        {
          "name": "MEMBER",
          "description": "<p>The user is a member of an organization in the enterprise.</p>"
        },
        {
          "name": "OWNER",
          "description": "<p>The user is an owner of an organization in the enterprise.</p>"
        }
      ]
    },
    {
      "name": "EnterpriseUserDeployment",
      "kind": "enums",
      "id": "enterpriseuserdeployment",
      "href": "/graphql/reference/enums#enterpriseuserdeployment",
      "description": "<p>The possible GitHub Enterprise deployments where this user can exist.</p>",
      "values": [
        {
          "name": "CLOUD",
          "description": "<p>The user is part of a GitHub Enterprise Cloud deployment.</p>"
        },
        {
          "name": "SERVER",
          "description": "<p>The user is part of a GitHub Enterprise Server deployment.</p>"
        }
      ]
    },
    {
      "name": "FileViewedState",
      "kind": "enums",
      "id": "fileviewedstate",
      "href": "/graphql/reference/enums#fileviewedstate",
      "description": "<p>The possible viewed states of a file .</p>",
      "values": [
        {
          "name": "DISMISSED",
          "description": "<p>The file has new changes since last viewed.</p>"
        },
        {
          "name": "UNVIEWED",
          "description": "<p>The file has not been marked as viewed.</p>"
        },
        {
          "name": "VIEWED",
          "description": "<p>The file has been marked as viewed.</p>"
        }
      ]
    },
    {
      "name": "GistOrderField",
      "kind": "enums",
      "id": "gistorderfield",
      "href": "/graphql/reference/enums#gistorderfield",
      "description": "<p>Properties by which gist connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order gists by creation time.</p>"
        },
        {
          "name": "PUSHED_AT",
          "description": "<p>Order gists by push time.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order gists by update time.</p>"
        }
      ]
    },
    {
      "name": "GistPrivacy",
      "kind": "enums",
      "id": "gistprivacy",
      "href": "/graphql/reference/enums#gistprivacy",
      "description": "<p>The privacy of a Gist.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>Gists that are public and secret.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>Public.</p>"
        },
        {
          "name": "SECRET",
          "description": "<p>Secret.</p>"
        }
      ]
    },
    {
      "name": "GitSignatureState",
      "kind": "enums",
      "id": "gitsignaturestate",
      "href": "/graphql/reference/enums#gitsignaturestate",
      "description": "<p>The state of a Git signature.</p>",
      "values": [
        {
          "name": "BAD_CERT",
          "description": "<p>The signing certificate or its chain could not be verified.</p>"
        },
        {
          "name": "BAD_EMAIL",
          "description": "<p>Invalid email used for signing.</p>"
        },
        {
          "name": "EXPIRED_KEY",
          "description": "<p>Signing key expired.</p>"
        },
        {
          "name": "GPGVERIFY_ERROR",
          "description": "<p>Internal error - the GPG verification service misbehaved.</p>"
        },
        {
          "name": "GPGVERIFY_UNAVAILABLE",
          "description": "<p>Internal error - the GPG verification service is unavailable at the moment.</p>"
        },
        {
          "name": "INVALID",
          "description": "<p>Invalid signature.</p>"
        },
        {
          "name": "MALFORMED_SIG",
          "description": "<p>Malformed signature.</p>"
        },
        {
          "name": "NOT_SIGNING_KEY",
          "description": "<p>The usage flags for the key that signed this don't allow signing.</p>"
        },
        {
          "name": "NO_USER",
          "description": "<p>Email used for signing not known to GitHub.</p>"
        },
        {
          "name": "OCSP_ERROR",
          "description": "<p>Valid signature, though certificate revocation check failed.</p>"
        },
        {
          "name": "OCSP_PENDING",
          "description": "<p>Valid signature, pending certificate revocation checking.</p>"
        },
        {
          "name": "OCSP_REVOKED",
          "description": "<p>One or more certificates in chain has been revoked.</p>"
        },
        {
          "name": "UNKNOWN_KEY",
          "description": "<p>Key used for signing not known to GitHub.</p>"
        },
        {
          "name": "UNKNOWN_SIG_TYPE",
          "description": "<p>Unknown signature type.</p>"
        },
        {
          "name": "UNSIGNED",
          "description": "<p>Unsigned.</p>"
        },
        {
          "name": "UNVERIFIED_EMAIL",
          "description": "<p>Email used for signing unverified on GitHub.</p>"
        },
        {
          "name": "VALID",
          "description": "<p>Valid signature and verified by GitHub.</p>"
        }
      ]
    },
    {
      "name": "IdentityProviderConfigurationState",
      "kind": "enums",
      "id": "identityproviderconfigurationstate",
      "href": "/graphql/reference/enums#identityproviderconfigurationstate",
      "description": "<p>The possible states in which authentication can be configured with an identity provider.</p>",
      "values": [
        {
          "name": "CONFIGURED",
          "description": "<p>Authentication with an identity provider is configured but not enforced.</p>"
        },
        {
          "name": "ENFORCED",
          "description": "<p>Authentication with an identity provider is configured and enforced.</p>"
        },
        {
          "name": "UNCONFIGURED",
          "description": "<p>Authentication with an identity provider is not configured.</p>"
        }
      ]
    },
    {
      "name": "IpAllowListEnabledSettingValue",
      "kind": "enums",
      "id": "ipallowlistenabledsettingvalue",
      "href": "/graphql/reference/enums#ipallowlistenabledsettingvalue",
      "description": "<p>The possible values for the IP allow list enabled setting.</p>",
      "values": [
        {
          "name": "DISABLED",
          "description": "<p>The setting is disabled for the owner.</p>"
        },
        {
          "name": "ENABLED",
          "description": "<p>The setting is enabled for the owner.</p>"
        }
      ]
    },
    {
      "name": "IpAllowListEntryOrderField",
      "kind": "enums",
      "id": "ipallowlistentryorderfield",
      "href": "/graphql/reference/enums#ipallowlistentryorderfield",
      "description": "<p>Properties by which IP allow list entry connections can be ordered.</p>",
      "values": [
        {
          "name": "ALLOW_LIST_VALUE",
          "description": "<p>Order IP allow list entries by the allow list value.</p>"
        },
        {
          "name": "CREATED_AT",
          "description": "<p>Order IP allow list entries by creation time.</p>"
        }
      ]
    },
    {
      "name": "IpAllowListForInstalledAppsEnabledSettingValue",
      "kind": "enums",
      "id": "ipallowlistforinstalledappsenabledsettingvalue",
      "href": "/graphql/reference/enums#ipallowlistforinstalledappsenabledsettingvalue",
      "description": "<p>The possible values for the IP allow list configuration for installed GitHub Apps setting.</p>",
      "values": [
        {
          "name": "DISABLED",
          "description": "<p>The setting is disabled for the owner.</p>"
        },
        {
          "name": "ENABLED",
          "description": "<p>The setting is enabled for the owner.</p>"
        }
      ]
    },
    {
      "name": "IssueClosedStateReason",
      "kind": "enums",
      "id": "issueclosedstatereason",
      "href": "/graphql/reference/enums#issueclosedstatereason",
      "description": "<p>The possible state reasons of a closed issue.</p>",
      "values": [
        {
          "name": "COMPLETED",
          "description": "<p>An issue that has been closed as completed.</p>"
        },
        {
          "name": "NOT_PLANNED",
          "description": "<p>An issue that has been closed as not planned.</p>"
        }
      ]
    },
    {
      "name": "IssueCommentOrderField",
      "kind": "enums",
      "id": "issuecommentorderfield",
      "href": "/graphql/reference/enums#issuecommentorderfield",
      "description": "<p>Properties by which issue comment connections can be ordered.</p>",
      "values": [
        {
          "name": "UPDATED_AT",
          "description": "<p>Order issue comments by update time.</p>"
        }
      ]
    },
    {
      "name": "IssueOrderField",
      "kind": "enums",
      "id": "issueorderfield",
      "href": "/graphql/reference/enums#issueorderfield",
      "description": "<p>Properties by which issue connections can be ordered.</p>",
      "values": [
        {
          "name": "COMMENTS",
          "description": "<p>Order issues by comment count.</p>"
        },
        {
          "name": "CREATED_AT",
          "description": "<p>Order issues by creation time.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order issues by update time.</p>"
        }
      ]
    },
    {
      "name": "IssueState",
      "kind": "enums",
      "id": "issuestate",
      "href": "/graphql/reference/enums#issuestate",
      "description": "<p>The possible states of an issue.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>An issue that has been closed.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>An issue that is still open.</p>"
        }
      ]
    },
    {
      "name": "IssueStateReason",
      "kind": "enums",
      "id": "issuestatereason",
      "href": "/graphql/reference/enums#issuestatereason",
      "description": "<p>The possible state reasons of an issue.</p>",
      "values": [
        {
          "name": "COMPLETED",
          "description": "<p>An issue that has been closed as completed.</p>"
        },
        {
          "name": "NOT_PLANNED",
          "description": "<p>An issue that has been closed as not planned.</p>"
        },
        {
          "name": "REOPENED",
          "description": "<p>An issue that has been reopened.</p>"
        }
      ]
    },
    {
      "name": "IssueTimelineItemsItemType",
      "kind": "enums",
      "id": "issuetimelineitemsitemtype",
      "href": "/graphql/reference/enums#issuetimelineitemsitemtype",
      "description": "<p>The possible item types found in a timeline.</p>",
      "values": [
        {
          "name": "ADDED_TO_PROJECT_EVENT",
          "description": "<p>Represents a<code>added_to_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "ASSIGNED_EVENT",
          "description": "<p>Represents an<code>assigned</code>event on any assignable object.</p>"
        },
        {
          "name": "CLOSED_EVENT",
          "description": "<p>Represents a<code>closed</code>event on any <code>Closable</code>.</p>"
        },
        {
          "name": "COMMENT_DELETED_EVENT",
          "description": "<p>Represents a<code>comment_deleted</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CONNECTED_EVENT",
          "description": "<p>Represents a<code>connected</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CONVERTED_NOTE_TO_ISSUE_EVENT",
          "description": "<p>Represents a<code>converted_note_to_issue</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CONVERTED_TO_DISCUSSION_EVENT",
          "description": "<p>Represents a<code>converted_to_discussion</code>event on a given issue.</p>"
        },
        {
          "name": "CROSS_REFERENCED_EVENT",
          "description": "<p>Represents a mention made by one issue or pull request to another.</p>"
        },
        {
          "name": "DEMILESTONED_EVENT",
          "description": "<p>Represents a<code>demilestoned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "DISCONNECTED_EVENT",
          "description": "<p>Represents a<code>disconnected</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "ISSUE_COMMENT",
          "description": "<p>Represents a comment on an Issue.</p>"
        },
        {
          "name": "LABELED_EVENT",
          "description": "<p>Represents a<code>labeled</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "LOCKED_EVENT",
          "description": "<p>Represents a<code>locked</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MARKED_AS_DUPLICATE_EVENT",
          "description": "<p>Represents a<code>marked_as_duplicate</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MENTIONED_EVENT",
          "description": "<p>Represents a<code>mentioned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MILESTONED_EVENT",
          "description": "<p>Represents a<code>milestoned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MOVED_COLUMNS_IN_PROJECT_EVENT",
          "description": "<p>Represents a<code>moved_columns_in_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "PINNED_EVENT",
          "description": "<p>Represents a<code>pinned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "REFERENCED_EVENT",
          "description": "<p>Represents a<code>referenced</code>event on a given <code>ReferencedSubject</code>.</p>"
        },
        {
          "name": "REMOVED_FROM_PROJECT_EVENT",
          "description": "<p>Represents a<code>removed_from_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "RENAMED_TITLE_EVENT",
          "description": "<p>Represents a<code>renamed</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "REOPENED_EVENT",
          "description": "<p>Represents a<code>reopened</code>event on any <code>Closable</code>.</p>"
        },
        {
          "name": "SUBSCRIBED_EVENT",
          "description": "<p>Represents a<code>subscribed</code>event on a given <code>Subscribable</code>.</p>"
        },
        {
          "name": "TRANSFERRED_EVENT",
          "description": "<p>Represents a<code>transferred</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNASSIGNED_EVENT",
          "description": "<p>Represents an<code>unassigned</code>event on any assignable object.</p>"
        },
        {
          "name": "UNLABELED_EVENT",
          "description": "<p>Represents an<code>unlabeled</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNLOCKED_EVENT",
          "description": "<p>Represents an<code>unlocked</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNMARKED_AS_DUPLICATE_EVENT",
          "description": "<p>Represents an<code>unmarked_as_duplicate</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNPINNED_EVENT",
          "description": "<p>Represents an<code>unpinned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNSUBSCRIBED_EVENT",
          "description": "<p>Represents an<code>unsubscribed</code>event on a given <code>Subscribable</code>.</p>"
        },
        {
          "name": "USER_BLOCKED_EVENT",
          "description": "<p>Represents a<code>user_blocked</code>event on a given user.</p>"
        }
      ]
    },
    {
      "name": "LabelOrderField",
      "kind": "enums",
      "id": "labelorderfield",
      "href": "/graphql/reference/enums#labelorderfield",
      "description": "<p>Properties by which label connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order labels by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order labels by name.</p>"
        }
      ]
    },
    {
      "name": "LanguageOrderField",
      "kind": "enums",
      "id": "languageorderfield",
      "href": "/graphql/reference/enums#languageorderfield",
      "description": "<p>Properties by which language connections can be ordered.</p>",
      "values": [
        {
          "name": "SIZE",
          "description": "<p>Order languages by the size of all files containing the language.</p>"
        }
      ]
    },
    {
      "name": "LockReason",
      "kind": "enums",
      "id": "lockreason",
      "href": "/graphql/reference/enums#lockreason",
      "description": "<p>The possible reasons that an issue or pull request was locked.</p>",
      "values": [
        {
          "name": "OFF_TOPIC",
          "description": "<p>The issue or pull request was locked because the conversation was off-topic.</p>"
        },
        {
          "name": "RESOLVED",
          "description": "<p>The issue or pull request was locked because the conversation was resolved.</p>"
        },
        {
          "name": "SPAM",
          "description": "<p>The issue or pull request was locked because the conversation was spam.</p>"
        },
        {
          "name": "TOO_HEATED",
          "description": "<p>The issue or pull request was locked because the conversation was too heated.</p>"
        }
      ]
    },
    {
      "name": "MannequinOrderField",
      "kind": "enums",
      "id": "mannequinorderfield",
      "href": "/graphql/reference/enums#mannequinorderfield",
      "description": "<p>Properties by which mannequins can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order mannequins why when they were created.</p>"
        },
        {
          "name": "LOGIN",
          "description": "<p>Order mannequins alphabetically by their source login.</p>"
        }
      ]
    },
    {
      "name": "MergeCommitMessage",
      "kind": "enums",
      "id": "mergecommitmessage",
      "href": "/graphql/reference/enums#mergecommitmessage",
      "description": "<p>The possible default commit messages for merges.</p>",
      "values": [
        {
          "name": "BLANK",
          "description": "<p>Default to a blank commit message.</p>"
        },
        {
          "name": "PR_BODY",
          "description": "<p>Default to the pull request's body.</p>"
        },
        {
          "name": "PR_TITLE",
          "description": "<p>Default to the pull request's title.</p>"
        }
      ]
    },
    {
      "name": "MergeCommitTitle",
      "kind": "enums",
      "id": "mergecommittitle",
      "href": "/graphql/reference/enums#mergecommittitle",
      "description": "<p>The possible default commit titles for merges.</p>",
      "values": [
        {
          "name": "MERGE_MESSAGE",
          "description": "<p>Default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).</p>"
        },
        {
          "name": "PR_TITLE",
          "description": "<p>Default to the pull request's title.</p>"
        }
      ]
    },
    {
      "name": "MergeStateStatus",
      "kind": "enums",
      "id": "mergestatestatus",
      "href": "/graphql/reference/enums#mergestatestatus",
      "description": "<p>Detailed status information about a pull request merge.</p>",
      "values": [
        {
          "name": "BEHIND",
          "description": "<p>The head ref is out of date.</p>"
        },
        {
          "name": "BLOCKED",
          "description": "<p>The merge is blocked.</p>"
        },
        {
          "name": "CLEAN",
          "description": "<p>Mergeable and passing commit status.</p>"
        },
        {
          "name": "DIRTY",
          "description": "<p>The merge commit cannot be cleanly created.</p>"
        },
        {
          "name": "DRAFT",
          "description": "<p>The merge is blocked due to the pull request being a draft.</p>"
        },
        {
          "name": "HAS_HOOKS",
          "description": "<p>Mergeable with passing commit status and pre-receive hooks.</p>"
        },
        {
          "name": "UNKNOWN",
          "description": "<p>The state cannot currently be determined.</p>"
        },
        {
          "name": "UNSTABLE",
          "description": "<p>Mergeable with non-passing commit status.</p>"
        }
      ]
    },
    {
      "name": "MergeableState",
      "kind": "enums",
      "id": "mergeablestate",
      "href": "/graphql/reference/enums#mergeablestate",
      "description": "<p>Whether or not a PullRequest can be merged.</p>",
      "values": [
        {
          "name": "CONFLICTING",
          "description": "<p>The pull request cannot be merged due to merge conflicts.</p>"
        },
        {
          "name": "MERGEABLE",
          "description": "<p>The pull request can be merged.</p>"
        },
        {
          "name": "UNKNOWN",
          "description": "<p>The mergeability of the pull request is still being calculated.</p>"
        }
      ]
    },
    {
      "name": "MigrationSourceType",
      "kind": "enums",
      "id": "migrationsourcetype",
      "href": "/graphql/reference/enums#migrationsourcetype",
      "description": "<p>Represents the different GitHub Enterprise Importer (GEI) migration sources.</p>",
      "values": [
        {
          "name": "AZURE_DEVOPS",
          "description": "<p>An Azure DevOps migration source.</p>"
        },
        {
          "name": "BITBUCKET_SERVER",
          "description": "<p>A Bitbucket Server migration source.</p>"
        },
        {
          "name": "GITHUB_ARCHIVE",
          "description": "<p>A GitHub Migration API source.</p>"
        }
      ]
    },
    {
      "name": "MigrationState",
      "kind": "enums",
      "id": "migrationstate",
      "href": "/graphql/reference/enums#migrationstate",
      "description": "<p>The GitHub Enterprise Importer (GEI) migration state.</p>",
      "values": [
        {
          "name": "FAILED",
          "description": "<p>The migration has failed.</p>"
        },
        {
          "name": "FAILED_VALIDATION",
          "description": "<p>The migration has invalid credentials.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The migration is in progress.</p>"
        },
        {
          "name": "NOT_STARTED",
          "description": "<p>The migration has not started.</p>"
        },
        {
          "name": "PENDING_VALIDATION",
          "description": "<p>The migration needs to have its credentials validated.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The migration has been queued.</p>"
        },
        {
          "name": "SUCCEEDED",
          "description": "<p>The migration has succeeded.</p>"
        }
      ]
    },
    {
      "name": "MilestoneOrderField",
      "kind": "enums",
      "id": "milestoneorderfield",
      "href": "/graphql/reference/enums#milestoneorderfield",
      "description": "<p>Properties by which milestone connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order milestones by when they were created.</p>"
        },
        {
          "name": "DUE_DATE",
          "description": "<p>Order milestones by when they are due.</p>"
        },
        {
          "name": "NUMBER",
          "description": "<p>Order milestones by their number.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order milestones by when they were last updated.</p>"
        }
      ]
    },
    {
      "name": "MilestoneState",
      "kind": "enums",
      "id": "milestonestate",
      "href": "/graphql/reference/enums#milestonestate",
      "description": "<p>The possible states of a milestone.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>A milestone that has been closed.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>A milestone that is still open.</p>"
        }
      ]
    },
    {
      "name": "NotificationRestrictionSettingValue",
      "kind": "enums",
      "id": "notificationrestrictionsettingvalue",
      "href": "/graphql/reference/enums#notificationrestrictionsettingvalue",
      "description": "<p>The possible values for the notification restriction setting.</p>",
      "values": [
        {
          "name": "DISABLED",
          "description": "<p>The setting is disabled for the owner.</p>"
        },
        {
          "name": "ENABLED",
          "description": "<p>The setting is enabled for the owner.</p>"
        }
      ]
    },
    {
      "name": "OauthApplicationCreateAuditEntryState",
      "kind": "enums",
      "id": "oauthapplicationcreateauditentrystate",
      "href": "/graphql/reference/enums#oauthapplicationcreateauditentrystate",
      "description": "<p>The state of an OAuth application when it was created.</p>",
      "values": [
        {
          "name": "ACTIVE",
          "description": "<p>The OAuth application was active and allowed to have OAuth Accesses.</p>"
        },
        {
          "name": "PENDING_DELETION",
          "description": "<p>The OAuth application was in the process of being deleted.</p>"
        },
        {
          "name": "SUSPENDED",
          "description": "<p>The OAuth application was suspended from generating OAuth Accesses due to abuse or security concerns.</p>"
        }
      ]
    },
    {
      "name": "OperationType",
      "kind": "enums",
      "id": "operationtype",
      "href": "/graphql/reference/enums#operationtype",
      "description": "<p>The corresponding operation type for the action.</p>",
      "values": [
        {
          "name": "ACCESS",
          "description": "<p>An existing resource was accessed.</p>"
        },
        {
          "name": "AUTHENTICATION",
          "description": "<p>A resource performed an authentication event.</p>"
        },
        {
          "name": "CREATE",
          "description": "<p>A new resource was created.</p>"
        },
        {
          "name": "MODIFY",
          "description": "<p>An existing resource was modified.</p>"
        },
        {
          "name": "REMOVE",
          "description": "<p>An existing resource was removed.</p>"
        },
        {
          "name": "RESTORE",
          "description": "<p>An existing resource was restored.</p>"
        },
        {
          "name": "TRANSFER",
          "description": "<p>An existing resource was transferred between multiple resources.</p>"
        }
      ]
    },
    {
      "name": "OrderDirection",
      "kind": "enums",
      "id": "orderdirection",
      "href": "/graphql/reference/enums#orderdirection",
      "description": "<p>Possible directions in which to order a list of items when provided an <code>orderBy</code> argument.</p>",
      "values": [
        {
          "name": "ASC",
          "description": "<p>Specifies an ascending order for a given <code>orderBy</code> argument.</p>"
        },
        {
          "name": "DESC",
          "description": "<p>Specifies a descending order for a given <code>orderBy</code> argument.</p>"
        }
      ]
    },
    {
      "name": "OrgAddMemberAuditEntryPermission",
      "kind": "enums",
      "id": "orgaddmemberauditentrypermission",
      "href": "/graphql/reference/enums#orgaddmemberauditentrypermission",
      "description": "<p>The permissions available to members on an Organization.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>Can read, clone, push, and add collaborators to repositories.</p>"
        },
        {
          "name": "READ",
          "description": "<p>Can read and clone repositories.</p>"
        }
      ]
    },
    {
      "name": "OrgCreateAuditEntryBillingPlan",
      "kind": "enums",
      "id": "orgcreateauditentrybillingplan",
      "href": "/graphql/reference/enums#orgcreateauditentrybillingplan",
      "description": "<p>The billing plans available for organizations.</p>",
      "values": [
        {
          "name": "BUSINESS",
          "description": "<p>Team Plan.</p>"
        },
        {
          "name": "BUSINESS_PLUS",
          "description": "<p>Enterprise Cloud Plan.</p>"
        },
        {
          "name": "FREE",
          "description": "<p>Free Plan.</p>"
        },
        {
          "name": "TIERED_PER_SEAT",
          "description": "<p>Tiered Per Seat Plan.</p>"
        },
        {
          "name": "UNLIMITED",
          "description": "<p>Legacy Unlimited Plan.</p>"
        }
      ]
    },
    {
      "name": "OrgEnterpriseOwnerOrderField",
      "kind": "enums",
      "id": "orgenterpriseownerorderfield",
      "href": "/graphql/reference/enums#orgenterpriseownerorderfield",
      "description": "<p>Properties by which enterprise owners can be ordered.</p>",
      "values": [
        {
          "name": "LOGIN",
          "description": "<p>Order enterprise owners by login.</p>"
        }
      ]
    },
    {
      "name": "OrgRemoveBillingManagerAuditEntryReason",
      "kind": "enums",
      "id": "orgremovebillingmanagerauditentryreason",
      "href": "/graphql/reference/enums#orgremovebillingmanagerauditentryreason",
      "description": "<p>The reason a billing manager was removed from an Organization.</p>",
      "values": [
        {
          "name": "SAML_EXTERNAL_IDENTITY_MISSING",
          "description": "<p>SAML external identity missing.</p>"
        },
        {
          "name": "SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY",
          "description": "<p>SAML SSO enforcement requires an external identity.</p>"
        },
        {
          "name": "TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE",
          "description": "<p>The organization required 2FA of its billing managers and this user did not have 2FA enabled.</p>"
        }
      ]
    },
    {
      "name": "OrgRemoveMemberAuditEntryMembershipType",
      "kind": "enums",
      "id": "orgremovememberauditentrymembershiptype",
      "href": "/graphql/reference/enums#orgremovememberauditentrymembershiptype",
      "description": "<p>The type of membership a user has with an Organization.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>Organization administrators have full access and can change several settings,\nincluding the names of repositories that belong to the Organization and Owners\nteam membership. In addition, organization admins can delete the organization\nand all of its repositories.</p>"
        },
        {
          "name": "BILLING_MANAGER",
          "description": "<p>A billing manager is a user who manages the billing settings for the Organization, such as updating payment information.</p>"
        },
        {
          "name": "DIRECT_MEMBER",
          "description": "<p>A direct member is a user that is a member of the Organization.</p>"
        },
        {
          "name": "OUTSIDE_COLLABORATOR",
          "description": "<p>An outside collaborator is a person who isn't explicitly a member of the\nOrganization, but who has Read, Write, or Admin permissions to one or more\nrepositories in the organization.</p>"
        },
        {
          "name": "SUSPENDED",
          "description": "<p>A suspended member.</p>"
        },
        {
          "name": "UNAFFILIATED",
          "description": "<p>An unaffiliated collaborator is a person who is not a member of the\nOrganization and does not have access to any repositories in the Organization.</p>"
        }
      ]
    },
    {
      "name": "OrgRemoveMemberAuditEntryReason",
      "kind": "enums",
      "id": "orgremovememberauditentryreason",
      "href": "/graphql/reference/enums#orgremovememberauditentryreason",
      "description": "<p>The reason a member was removed from an Organization.</p>",
      "values": [
        {
          "name": "SAML_EXTERNAL_IDENTITY_MISSING",
          "description": "<p>SAML external identity missing.</p>"
        },
        {
          "name": "SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY",
          "description": "<p>SAML SSO enforcement requires an external identity.</p>"
        },
        {
          "name": "TWO_FACTOR_ACCOUNT_RECOVERY",
          "description": "<p>User was removed from organization during account recovery.</p>"
        },
        {
          "name": "TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE",
          "description": "<p>The organization required 2FA of its billing managers and this user did not have 2FA enabled.</p>"
        },
        {
          "name": "USER_ACCOUNT_DELETED",
          "description": "<p>User account has been deleted.</p>"
        }
      ]
    },
    {
      "name": "OrgRemoveOutsideCollaboratorAuditEntryMembershipType",
      "kind": "enums",
      "id": "orgremoveoutsidecollaboratorauditentrymembershiptype",
      "href": "/graphql/reference/enums#orgremoveoutsidecollaboratorauditentrymembershiptype",
      "description": "<p>The type of membership a user has with an Organization.</p>",
      "values": [
        {
          "name": "BILLING_MANAGER",
          "description": "<p>A billing manager is a user who manages the billing settings for the Organization, such as updating payment information.</p>"
        },
        {
          "name": "OUTSIDE_COLLABORATOR",
          "description": "<p>An outside collaborator is a person who isn't explicitly a member of the\nOrganization, but who has Read, Write, or Admin permissions to one or more\nrepositories in the organization.</p>"
        },
        {
          "name": "UNAFFILIATED",
          "description": "<p>An unaffiliated collaborator is a person who is not a member of the\nOrganization and does not have access to any repositories in the organization.</p>"
        }
      ]
    },
    {
      "name": "OrgRemoveOutsideCollaboratorAuditEntryReason",
      "kind": "enums",
      "id": "orgremoveoutsidecollaboratorauditentryreason",
      "href": "/graphql/reference/enums#orgremoveoutsidecollaboratorauditentryreason",
      "description": "<p>The reason an outside collaborator was removed from an Organization.</p>",
      "values": [
        {
          "name": "SAML_EXTERNAL_IDENTITY_MISSING",
          "description": "<p>SAML external identity missing.</p>"
        },
        {
          "name": "TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE",
          "description": "<p>The organization required 2FA of its billing managers and this user did not have 2FA enabled.</p>"
        }
      ]
    },
    {
      "name": "OrgUpdateDefaultRepositoryPermissionAuditEntryPermission",
      "kind": "enums",
      "id": "orgupdatedefaultrepositorypermissionauditentrypermission",
      "href": "/graphql/reference/enums#orgupdatedefaultrepositorypermissionauditentrypermission",
      "description": "<p>The default permission a repository can have in an Organization.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>Can read, clone, push, and add collaborators to repositories.</p>"
        },
        {
          "name": "NONE",
          "description": "<p>No default permission value.</p>"
        },
        {
          "name": "READ",
          "description": "<p>Can read and clone repositories.</p>"
        },
        {
          "name": "WRITE",
          "description": "<p>Can read, clone and push to repositories.</p>"
        }
      ]
    },
    {
      "name": "OrgUpdateMemberAuditEntryPermission",
      "kind": "enums",
      "id": "orgupdatememberauditentrypermission",
      "href": "/graphql/reference/enums#orgupdatememberauditentrypermission",
      "description": "<p>The permissions available to members on an Organization.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>Can read, clone, push, and add collaborators to repositories.</p>"
        },
        {
          "name": "READ",
          "description": "<p>Can read and clone repositories.</p>"
        }
      ]
    },
    {
      "name": "OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility",
      "kind": "enums",
      "id": "orgupdatememberrepositorycreationpermissionauditentryvisibility",
      "href": "/graphql/reference/enums#orgupdatememberrepositorycreationpermissionauditentryvisibility",
      "description": "<p>The permissions available for repository creation on an Organization.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>All organization members are restricted from creating any repositories.</p>"
        },
        {
          "name": "INTERNAL",
          "description": "<p>All organization members are restricted from creating internal repositories.</p>"
        },
        {
          "name": "NONE",
          "description": "<p>All organization members are allowed to create any repositories.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>All organization members are restricted from creating private repositories.</p>"
        },
        {
          "name": "PRIVATE_INTERNAL",
          "description": "<p>All organization members are restricted from creating private or internal repositories.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>All organization members are restricted from creating public repositories.</p>"
        },
        {
          "name": "PUBLIC_INTERNAL",
          "description": "<p>All organization members are restricted from creating public or internal repositories.</p>"
        },
        {
          "name": "PUBLIC_PRIVATE",
          "description": "<p>All organization members are restricted from creating public or private repositories.</p>"
        }
      ]
    },
    {
      "name": "OrganizationInvitationRole",
      "kind": "enums",
      "id": "organizationinvitationrole",
      "href": "/graphql/reference/enums#organizationinvitationrole",
      "description": "<p>The possible organization invitation roles.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>The user is invited to be an admin of the organization.</p>"
        },
        {
          "name": "BILLING_MANAGER",
          "description": "<p>The user is invited to be a billing manager of the organization.</p>"
        },
        {
          "name": "DIRECT_MEMBER",
          "description": "<p>The user is invited to be a direct member of the organization.</p>"
        },
        {
          "name": "REINSTATE",
          "description": "<p>The user's previous role will be reinstated.</p>"
        }
      ]
    },
    {
      "name": "OrganizationInvitationSource",
      "kind": "enums",
      "id": "organizationinvitationsource",
      "href": "/graphql/reference/enums#organizationinvitationsource",
      "description": "<p>The possible organization invitation sources.</p>",
      "values": [
        {
          "name": "MEMBER",
          "description": "<p>The invitation was created from the web interface or from API.</p>"
        },
        {
          "name": "SCIM",
          "description": "<p>The invitation was created from SCIM.</p>"
        },
        {
          "name": "UNKNOWN",
          "description": "<p>The invitation was sent before this feature was added.</p>"
        }
      ]
    },
    {
      "name": "OrganizationInvitationType",
      "kind": "enums",
      "id": "organizationinvitationtype",
      "href": "/graphql/reference/enums#organizationinvitationtype",
      "description": "<p>The possible organization invitation types.</p>",
      "values": [
        {
          "name": "EMAIL",
          "description": "<p>The invitation was to an email address.</p>"
        },
        {
          "name": "USER",
          "description": "<p>The invitation was to an existing user.</p>"
        }
      ]
    },
    {
      "name": "OrganizationMemberRole",
      "kind": "enums",
      "id": "organizationmemberrole",
      "href": "/graphql/reference/enums#organizationmemberrole",
      "description": "<p>The possible roles within an organization for its members.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>The user is an administrator of the organization.</p>"
        },
        {
          "name": "MEMBER",
          "description": "<p>The user is a member of the organization.</p>"
        }
      ]
    },
    {
      "name": "OrganizationMembersCanCreateRepositoriesSettingValue",
      "kind": "enums",
      "id": "organizationmemberscancreaterepositoriessettingvalue",
      "href": "/graphql/reference/enums#organizationmemberscancreaterepositoriessettingvalue",
      "description": "<p>The possible values for the members can create repositories setting on an organization.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>Members will be able to create public and private repositories.</p>"
        },
        {
          "name": "DISABLED",
          "description": "<p>Members will not be able to create public or private repositories.</p>"
        },
        {
          "name": "INTERNAL",
          "description": "<p>Members will be able to create only internal repositories.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>Members will be able to create only private repositories.</p>"
        }
      ]
    },
    {
      "name": "OrganizationMigrationState",
      "kind": "enums",
      "id": "organizationmigrationstate",
      "href": "/graphql/reference/enums#organizationmigrationstate",
      "description": "<p>The Octoshift Organization migration state.</p>",
      "values": [
        {
          "name": "FAILED",
          "description": "<p>The Octoshift migration has failed.</p>"
        },
        {
          "name": "FAILED_VALIDATION",
          "description": "<p>The Octoshift migration has invalid credentials.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The Octoshift migration is in progress.</p>"
        },
        {
          "name": "NOT_STARTED",
          "description": "<p>The Octoshift migration has not started.</p>"
        },
        {
          "name": "PENDING_VALIDATION",
          "description": "<p>The Octoshift migration needs to have its credentials validated.</p>"
        },
        {
          "name": "POST_REPO_MIGRATION",
          "description": "<p>The Octoshift migration is performing post repository migrations.</p>"
        },
        {
          "name": "PRE_REPO_MIGRATION",
          "description": "<p>The Octoshift migration is performing pre repository migrations.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The Octoshift migration has been queued.</p>"
        },
        {
          "name": "REPO_MIGRATION",
          "description": "<p>The Octoshift org migration is performing repository migrations.</p>"
        },
        {
          "name": "SUCCEEDED",
          "description": "<p>The Octoshift migration has succeeded.</p>"
        }
      ]
    },
    {
      "name": "OrganizationOrderField",
      "kind": "enums",
      "id": "organizationorderfield",
      "href": "/graphql/reference/enums#organizationorderfield",
      "description": "<p>Properties by which organization connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order organizations by creation time.</p>"
        },
        {
          "name": "LOGIN",
          "description": "<p>Order organizations by login.</p>"
        }
      ]
    },
    {
      "name": "PackageFileOrderField",
      "kind": "enums",
      "id": "packagefileorderfield",
      "href": "/graphql/reference/enums#packagefileorderfield",
      "description": "<p>Properties by which package file connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order package files by creation time.</p>"
        }
      ]
    },
    {
      "name": "PackageOrderField",
      "kind": "enums",
      "id": "packageorderfield",
      "href": "/graphql/reference/enums#packageorderfield",
      "description": "<p>Properties by which package connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order packages by creation time.</p>"
        }
      ]
    },
    {
      "name": "PackageType",
      "kind": "enums",
      "id": "packagetype",
      "href": "/graphql/reference/enums#packagetype",
      "description": "<p>The possible types of a package.</p>",
      "values": [
        {
          "name": "DEBIAN",
          "description": "<p>A debian package.</p>"
        },
        {
          "name": "DOCKER",
          "description": "<p>A docker image.</p>"
        },
        {
          "name": "MAVEN",
          "description": "<p>A maven package.</p>"
        },
        {
          "name": "NPM",
          "description": "<p>An npm package.</p>"
        },
        {
          "name": "NUGET",
          "description": "<p>A nuget package.</p>"
        },
        {
          "name": "PYPI",
          "description": "<p>A python package.</p>"
        },
        {
          "name": "RUBYGEMS",
          "description": "<p>A rubygems package.</p>"
        }
      ]
    },
    {
      "name": "PackageVersionOrderField",
      "kind": "enums",
      "id": "packageversionorderfield",
      "href": "/graphql/reference/enums#packageversionorderfield",
      "description": "<p>Properties by which package version connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order package versions by creation time.</p>"
        }
      ]
    },
    {
      "name": "PatchStatus",
      "kind": "enums",
      "id": "patchstatus",
      "href": "/graphql/reference/enums#patchstatus",
      "description": "<p>The possible types of patch statuses.</p>",
      "values": [
        {
          "name": "ADDED",
          "description": "<p>The file was added. Git status 'A'.</p>"
        },
        {
          "name": "CHANGED",
          "description": "<p>The file's type was changed. Git status 'T'.</p>"
        },
        {
          "name": "COPIED",
          "description": "<p>The file was copied. Git status 'C'.</p>"
        },
        {
          "name": "DELETED",
          "description": "<p>The file was deleted. Git status 'D'.</p>"
        },
        {
          "name": "MODIFIED",
          "description": "<p>The file's contents were changed. Git status 'M'.</p>"
        },
        {
          "name": "RENAMED",
          "description": "<p>The file was renamed. Git status 'R'.</p>"
        }
      ]
    },
    {
      "name": "PinnableItemType",
      "kind": "enums",
      "id": "pinnableitemtype",
      "href": "/graphql/reference/enums#pinnableitemtype",
      "description": "<p>Represents items that can be pinned to a profile page or dashboard.</p>",
      "values": [
        {
          "name": "GIST",
          "description": "<p>A gist.</p>"
        },
        {
          "name": "ISSUE",
          "description": "<p>An issue.</p>"
        },
        {
          "name": "ORGANIZATION",
          "description": "<p>An organization.</p>"
        },
        {
          "name": "PROJECT",
          "description": "<p>A project.</p>"
        },
        {
          "name": "PULL_REQUEST",
          "description": "<p>A pull request.</p>"
        },
        {
          "name": "REPOSITORY",
          "description": "<p>A repository.</p>"
        },
        {
          "name": "TEAM",
          "description": "<p>A team.</p>"
        },
        {
          "name": "USER",
          "description": "<p>A user.</p>"
        }
      ]
    },
    {
      "name": "PinnedDiscussionGradient",
      "kind": "enums",
      "id": "pinneddiscussiongradient",
      "href": "/graphql/reference/enums#pinneddiscussiongradient",
      "description": "<p>Preconfigured gradients that may be used to style discussions pinned within a repository.</p>",
      "values": [
        {
          "name": "BLUE_MINT",
          "description": "<p>A gradient of blue to mint.</p>"
        },
        {
          "name": "BLUE_PURPLE",
          "description": "<p>A gradient of blue to purple.</p>"
        },
        {
          "name": "PINK_BLUE",
          "description": "<p>A gradient of pink to blue.</p>"
        },
        {
          "name": "PURPLE_CORAL",
          "description": "<p>A gradient of purple to coral.</p>"
        },
        {
          "name": "RED_ORANGE",
          "description": "<p>A gradient of red to orange.</p>"
        }
      ]
    },
    {
      "name": "PinnedDiscussionPattern",
      "kind": "enums",
      "id": "pinneddiscussionpattern",
      "href": "/graphql/reference/enums#pinneddiscussionpattern",
      "description": "<p>Preconfigured background patterns that may be used to style discussions pinned within a repository.</p>",
      "values": [
        {
          "name": "CHEVRON_UP",
          "description": "<p>An upward-facing chevron pattern.</p>"
        },
        {
          "name": "DOT",
          "description": "<p>A hollow dot pattern.</p>"
        },
        {
          "name": "DOT_FILL",
          "description": "<p>A solid dot pattern.</p>"
        },
        {
          "name": "HEART_FILL",
          "description": "<p>A heart pattern.</p>"
        },
        {
          "name": "PLUS",
          "description": "<p>A plus sign pattern.</p>"
        },
        {
          "name": "ZAP",
          "description": "<p>A lightning bolt pattern.</p>"
        }
      ]
    },
    {
      "name": "ProjectCardArchivedState",
      "kind": "enums",
      "id": "projectcardarchivedstate",
      "href": "/graphql/reference/enums#projectcardarchivedstate",
      "description": "<p>The possible archived states of a project card.</p>",
      "values": [
        {
          "name": "ARCHIVED",
          "description": "<p>A project card that is archived.</p>"
        },
        {
          "name": "NOT_ARCHIVED",
          "description": "<p>A project card that is not archived.</p>"
        }
      ]
    },
    {
      "name": "ProjectCardState",
      "kind": "enums",
      "id": "projectcardstate",
      "href": "/graphql/reference/enums#projectcardstate",
      "description": "<p>Various content states of a ProjectCard.</p>",
      "values": [
        {
          "name": "CONTENT_ONLY",
          "description": "<p>The card has content only.</p>"
        },
        {
          "name": "NOTE_ONLY",
          "description": "<p>The card has a note only.</p>"
        },
        {
          "name": "REDACTED",
          "description": "<p>The card is redacted.</p>"
        }
      ]
    },
    {
      "name": "ProjectColumnPurpose",
      "kind": "enums",
      "id": "projectcolumnpurpose",
      "href": "/graphql/reference/enums#projectcolumnpurpose",
      "description": "<p>The semantic purpose of the column - todo, in progress, or done.</p>",
      "values": [
        {
          "name": "DONE",
          "description": "<p>The column contains cards which are complete.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The column contains cards which are currently being worked on.</p>"
        },
        {
          "name": "TODO",
          "description": "<p>The column contains cards still to be worked on.</p>"
        }
      ]
    },
    {
      "name": "ProjectOrderField",
      "kind": "enums",
      "id": "projectorderfield",
      "href": "/graphql/reference/enums#projectorderfield",
      "description": "<p>Properties by which project connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order projects by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order projects by name.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order projects by update time.</p>"
        }
      ]
    },
    {
      "name": "ProjectState",
      "kind": "enums",
      "id": "projectstate",
      "href": "/graphql/reference/enums#projectstate",
      "description": "<p>State of the project; either<code>open</code>or 'closed'.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>The project is closed.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>The project is open.</p>"
        }
      ]
    },
    {
      "name": "ProjectTemplate",
      "kind": "enums",
      "id": "projecttemplate",
      "href": "/graphql/reference/enums#projecttemplate",
      "description": "<p>GitHub-provided templates for Projects.</p>",
      "values": [
        {
          "name": "AUTOMATED_KANBAN_V2",
          "description": "<p>Create a board with v2 triggers to automatically move cards across To do, In progress and Done columns.</p>"
        },
        {
          "name": "AUTOMATED_REVIEWS_KANBAN",
          "description": "<p>Create a board with triggers to automatically move cards across columns with review automation.</p>"
        },
        {
          "name": "BASIC_KANBAN",
          "description": "<p>Create a board with columns for To do, In progress and Done.</p>"
        },
        {
          "name": "BUG_TRIAGE",
          "description": "<p>Create a board to triage and prioritize bugs with To do, priority, and Done columns.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2CustomFieldType",
      "kind": "enums",
      "id": "projectv2customfieldtype",
      "href": "/graphql/reference/enums#projectv2customfieldtype",
      "description": "<p>The type of a project field.</p>",
      "values": [
        {
          "name": "DATE",
          "description": "<p>Date.</p>"
        },
        {
          "name": "NUMBER",
          "description": "<p>Number.</p>"
        },
        {
          "name": "SINGLE_SELECT",
          "description": "<p>Single Select.</p>"
        },
        {
          "name": "TEXT",
          "description": "<p>Text.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2FieldOrderField",
      "kind": "enums",
      "id": "projectv2fieldorderfield",
      "href": "/graphql/reference/enums#projectv2fieldorderfield",
      "description": "<p>Properties by which project v2 field connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order project v2 fields by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order project v2 fields by name.</p>"
        },
        {
          "name": "POSITION",
          "description": "<p>Order project v2 fields by position.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2FieldType",
      "kind": "enums",
      "id": "projectv2fieldtype",
      "href": "/graphql/reference/enums#projectv2fieldtype",
      "description": "<p>The type of a project field.</p>",
      "values": [
        {
          "name": "ASSIGNEES",
          "description": "<p>Assignees.</p>"
        },
        {
          "name": "DATE",
          "description": "<p>Date.</p>"
        },
        {
          "name": "ITERATION",
          "description": "<p>Iteration.</p>"
        },
        {
          "name": "LABELS",
          "description": "<p>Labels.</p>"
        },
        {
          "name": "LINKED_PULL_REQUESTS",
          "description": "<p>Linked Pull Requests.</p>"
        },
        {
          "name": "MILESTONE",
          "description": "<p>Milestone.</p>"
        },
        {
          "name": "NUMBER",
          "description": "<p>Number.</p>"
        },
        {
          "name": "REPOSITORY",
          "description": "<p>Repository.</p>"
        },
        {
          "name": "REVIEWERS",
          "description": "<p>Reviewers.</p>"
        },
        {
          "name": "SINGLE_SELECT",
          "description": "<p>Single Select.</p>"
        },
        {
          "name": "TEXT",
          "description": "<p>Text.</p>"
        },
        {
          "name": "TITLE",
          "description": "<p>Title.</p>"
        },
        {
          "name": "TRACKED_BY",
          "description": "<p>Tracked by.</p>"
        },
        {
          "name": "TRACKS",
          "description": "<p>Tracks.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldValueOrderField",
      "kind": "enums",
      "id": "projectv2itemfieldvalueorderfield",
      "href": "/graphql/reference/enums#projectv2itemfieldvalueorderfield",
      "description": "<p>Properties by which project v2 item field value connections can be ordered.</p>",
      "values": [
        {
          "name": "POSITION",
          "description": "<p>Order project v2 item field values by the their position in the project.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2ItemOrderField",
      "kind": "enums",
      "id": "projectv2itemorderfield",
      "href": "/graphql/reference/enums#projectv2itemorderfield",
      "description": "<p>Properties by which project v2 item connections can be ordered.</p>",
      "values": [
        {
          "name": "POSITION",
          "description": "<p>Order project v2 items by the their position in the project.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2ItemType",
      "kind": "enums",
      "id": "projectv2itemtype",
      "href": "/graphql/reference/enums#projectv2itemtype",
      "description": "<p>The type of a project item.</p>",
      "values": [
        {
          "name": "DRAFT_ISSUE",
          "description": "<p>Draft Issue.</p>"
        },
        {
          "name": "ISSUE",
          "description": "<p>Issue.</p>"
        },
        {
          "name": "PULL_REQUEST",
          "description": "<p>Pull Request.</p>"
        },
        {
          "name": "REDACTED",
          "description": "<p>Redacted Item.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2OrderField",
      "kind": "enums",
      "id": "projectv2orderfield",
      "href": "/graphql/reference/enums#projectv2orderfield",
      "description": "<p>Properties by which projects can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>The project's date and time of creation.</p>"
        },
        {
          "name": "NUMBER",
          "description": "<p>The project's number.</p>"
        },
        {
          "name": "TITLE",
          "description": "<p>The project's title.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>The project's date and time of update.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2Roles",
      "kind": "enums",
      "id": "projectv2roles",
      "href": "/graphql/reference/enums#projectv2roles",
      "description": "<p>The possible roles of a collaborator on a project.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>The collaborator can view, edit, and maange the settings of the project.</p>"
        },
        {
          "name": "NONE",
          "description": "<p>The collaborator has no direct access to the project.</p>"
        },
        {
          "name": "READER",
          "description": "<p>The collaborator can view the project.</p>"
        },
        {
          "name": "WRITER",
          "description": "<p>The collaborator can view and edit the project.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2SingleSelectFieldOptionColor",
      "kind": "enums",
      "id": "projectv2singleselectfieldoptioncolor",
      "href": "/graphql/reference/enums#projectv2singleselectfieldoptioncolor",
      "description": "<p>The display color of a single-select field option.</p>",
      "values": [
        {
          "name": "BLUE",
          "description": "<p>BLUE.</p>"
        },
        {
          "name": "GRAY",
          "description": "<p>GRAY.</p>"
        },
        {
          "name": "GREEN",
          "description": "<p>GREEN.</p>"
        },
        {
          "name": "ORANGE",
          "description": "<p>ORANGE.</p>"
        },
        {
          "name": "PINK",
          "description": "<p>PINK.</p>"
        },
        {
          "name": "PURPLE",
          "description": "<p>PURPLE.</p>"
        },
        {
          "name": "RED",
          "description": "<p>RED.</p>"
        },
        {
          "name": "YELLOW",
          "description": "<p>YELLOW.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2ViewLayout",
      "kind": "enums",
      "id": "projectv2viewlayout",
      "href": "/graphql/reference/enums#projectv2viewlayout",
      "description": "<p>The layout of a project v2 view.</p>",
      "values": [
        {
          "name": "BOARD_LAYOUT",
          "description": "<p>Board layout.</p>"
        },
        {
          "name": "ROADMAP_LAYOUT",
          "description": "<p>Roadmap layout.</p>"
        },
        {
          "name": "TABLE_LAYOUT",
          "description": "<p>Table layout.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2ViewOrderField",
      "kind": "enums",
      "id": "projectv2vieworderfield",
      "href": "/graphql/reference/enums#projectv2vieworderfield",
      "description": "<p>Properties by which project v2 view connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order project v2 views by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order project v2 views by name.</p>"
        },
        {
          "name": "POSITION",
          "description": "<p>Order project v2 views by position.</p>"
        }
      ]
    },
    {
      "name": "ProjectV2WorkflowsOrderField",
      "kind": "enums",
      "id": "projectv2workflowsorderfield",
      "href": "/graphql/reference/enums#projectv2workflowsorderfield",
      "description": "<p>Properties by which project workflows can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>The workflows' date and time of creation.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>The workflows' name.</p>"
        },
        {
          "name": "NUMBER",
          "description": "<p>The workflows' number.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>The workflows' date and time of update.</p>"
        }
      ]
    },
    {
      "name": "PullRequestMergeMethod",
      "kind": "enums",
      "id": "pullrequestmergemethod",
      "href": "/graphql/reference/enums#pullrequestmergemethod",
      "description": "<p>Represents available types of methods to use when merging a pull request.</p>",
      "values": [
        {
          "name": "MERGE",
          "description": "<p>Add all commits from the head branch to the base branch with a merge commit.</p>"
        },
        {
          "name": "REBASE",
          "description": "<p>Add all commits from the head branch onto the base branch individually.</p>"
        },
        {
          "name": "SQUASH",
          "description": "<p>Combine all commits from the head branch into a single commit in the base branch.</p>"
        }
      ]
    },
    {
      "name": "PullRequestOrderField",
      "kind": "enums",
      "id": "pullrequestorderfield",
      "href": "/graphql/reference/enums#pullrequestorderfield",
      "description": "<p>Properties by which pull_requests connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order pull_requests by creation time.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order pull_requests by update time.</p>"
        }
      ]
    },
    {
      "name": "PullRequestReviewCommentState",
      "kind": "enums",
      "id": "pullrequestreviewcommentstate",
      "href": "/graphql/reference/enums#pullrequestreviewcommentstate",
      "description": "<p>The possible states of a pull request review comment.</p>",
      "values": [
        {
          "name": "PENDING",
          "description": "<p>A comment that is part of a pending review.</p>"
        },
        {
          "name": "SUBMITTED",
          "description": "<p>A comment that is part of a submitted review.</p>"
        }
      ]
    },
    {
      "name": "PullRequestReviewDecision",
      "kind": "enums",
      "id": "pullrequestreviewdecision",
      "href": "/graphql/reference/enums#pullrequestreviewdecision",
      "description": "<p>The review status of a pull request.</p>",
      "values": [
        {
          "name": "APPROVED",
          "description": "<p>The pull request has received an approving review.</p>"
        },
        {
          "name": "CHANGES_REQUESTED",
          "description": "<p>Changes have been requested on the pull request.</p>"
        },
        {
          "name": "REVIEW_REQUIRED",
          "description": "<p>A review is required before the pull request can be merged.</p>"
        }
      ]
    },
    {
      "name": "PullRequestReviewEvent",
      "kind": "enums",
      "id": "pullrequestreviewevent",
      "href": "/graphql/reference/enums#pullrequestreviewevent",
      "description": "<p>The possible events to perform on a pull request review.</p>",
      "values": [
        {
          "name": "APPROVE",
          "description": "<p>Submit feedback and approve merging these changes.</p>"
        },
        {
          "name": "COMMENT",
          "description": "<p>Submit general feedback without explicit approval.</p>"
        },
        {
          "name": "DISMISS",
          "description": "<p>Dismiss review so it now longer effects merging.</p>"
        },
        {
          "name": "REQUEST_CHANGES",
          "description": "<p>Submit feedback that must be addressed before merging.</p>"
        }
      ]
    },
    {
      "name": "PullRequestReviewState",
      "kind": "enums",
      "id": "pullrequestreviewstate",
      "href": "/graphql/reference/enums#pullrequestreviewstate",
      "description": "<p>The possible states of a pull request review.</p>",
      "values": [
        {
          "name": "APPROVED",
          "description": "<p>A review allowing the pull request to merge.</p>"
        },
        {
          "name": "CHANGES_REQUESTED",
          "description": "<p>A review blocking the pull request from merging.</p>"
        },
        {
          "name": "COMMENTED",
          "description": "<p>An informational review.</p>"
        },
        {
          "name": "DISMISSED",
          "description": "<p>A review that has been dismissed.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>A review that has not yet been submitted.</p>"
        }
      ]
    },
    {
      "name": "PullRequestReviewThreadSubjectType",
      "kind": "enums",
      "id": "pullrequestreviewthreadsubjecttype",
      "href": "/graphql/reference/enums#pullrequestreviewthreadsubjecttype",
      "description": "<p>The possible subject types of a pull request review comment.</p>",
      "values": [
        {
          "name": "FILE",
          "description": "<p>A comment that has been made against the file of a pull request.</p>"
        },
        {
          "name": "LINE",
          "description": "<p>A comment that has been made against the line of a pull request.</p>"
        }
      ]
    },
    {
      "name": "PullRequestState",
      "kind": "enums",
      "id": "pullrequeststate",
      "href": "/graphql/reference/enums#pullrequeststate",
      "description": "<p>The possible states of a pull request.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>A pull request that has been closed without being merged.</p>"
        },
        {
          "name": "MERGED",
          "description": "<p>A pull request that has been closed by being merged.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>A pull request that is still open.</p>"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItemsItemType",
      "kind": "enums",
      "id": "pullrequesttimelineitemsitemtype",
      "href": "/graphql/reference/enums#pullrequesttimelineitemsitemtype",
      "description": "<p>The possible item types found in a timeline.</p>",
      "values": [
        {
          "name": "ADDED_TO_PROJECT_EVENT",
          "description": "<p>Represents a<code>added_to_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "ASSIGNED_EVENT",
          "description": "<p>Represents an<code>assigned</code>event on any assignable object.</p>"
        },
        {
          "name": "AUTOMATIC_BASE_CHANGE_FAILED_EVENT",
          "description": "<p>Represents a<code>automatic_base_change_failed</code>event on a given pull request.</p>"
        },
        {
          "name": "AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT",
          "description": "<p>Represents a<code>automatic_base_change_succeeded</code>event on a given pull request.</p>"
        },
        {
          "name": "AUTO_MERGE_DISABLED_EVENT",
          "description": "<p>Represents a<code>auto_merge_disabled</code>event on a given pull request.</p>"
        },
        {
          "name": "AUTO_MERGE_ENABLED_EVENT",
          "description": "<p>Represents a<code>auto_merge_enabled</code>event on a given pull request.</p>"
        },
        {
          "name": "AUTO_REBASE_ENABLED_EVENT",
          "description": "<p>Represents a<code>auto_rebase_enabled</code>event on a given pull request.</p>"
        },
        {
          "name": "AUTO_SQUASH_ENABLED_EVENT",
          "description": "<p>Represents a<code>auto_squash_enabled</code>event on a given pull request.</p>"
        },
        {
          "name": "BASE_REF_CHANGED_EVENT",
          "description": "<p>Represents a<code>base_ref_changed</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "BASE_REF_DELETED_EVENT",
          "description": "<p>Represents a<code>base_ref_deleted</code>event on a given pull request.</p>"
        },
        {
          "name": "BASE_REF_FORCE_PUSHED_EVENT",
          "description": "<p>Represents a<code>base_ref_force_pushed</code>event on a given pull request.</p>"
        },
        {
          "name": "CLOSED_EVENT",
          "description": "<p>Represents a<code>closed</code>event on any <code>Closable</code>.</p>"
        },
        {
          "name": "COMMENT_DELETED_EVENT",
          "description": "<p>Represents a<code>comment_deleted</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CONNECTED_EVENT",
          "description": "<p>Represents a<code>connected</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CONVERTED_NOTE_TO_ISSUE_EVENT",
          "description": "<p>Represents a<code>converted_note_to_issue</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CONVERTED_TO_DISCUSSION_EVENT",
          "description": "<p>Represents a<code>converted_to_discussion</code>event on a given issue.</p>"
        },
        {
          "name": "CONVERT_TO_DRAFT_EVENT",
          "description": "<p>Represents a<code>convert_to_draft</code>event on a given pull request.</p>"
        },
        {
          "name": "CROSS_REFERENCED_EVENT",
          "description": "<p>Represents a mention made by one issue or pull request to another.</p>"
        },
        {
          "name": "DEMILESTONED_EVENT",
          "description": "<p>Represents a<code>demilestoned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "DEPLOYED_EVENT",
          "description": "<p>Represents a<code>deployed</code>event on a given pull request.</p>"
        },
        {
          "name": "DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT",
          "description": "<p>Represents a<code>deployment_environment_changed</code>event on a given pull request.</p>"
        },
        {
          "name": "DISCONNECTED_EVENT",
          "description": "<p>Represents a<code>disconnected</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "HEAD_REF_DELETED_EVENT",
          "description": "<p>Represents a<code>head_ref_deleted</code>event on a given pull request.</p>"
        },
        {
          "name": "HEAD_REF_FORCE_PUSHED_EVENT",
          "description": "<p>Represents a<code>head_ref_force_pushed</code>event on a given pull request.</p>"
        },
        {
          "name": "HEAD_REF_RESTORED_EVENT",
          "description": "<p>Represents a<code>head_ref_restored</code>event on a given pull request.</p>"
        },
        {
          "name": "ISSUE_COMMENT",
          "description": "<p>Represents a comment on an Issue.</p>"
        },
        {
          "name": "LABELED_EVENT",
          "description": "<p>Represents a<code>labeled</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "LOCKED_EVENT",
          "description": "<p>Represents a<code>locked</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MARKED_AS_DUPLICATE_EVENT",
          "description": "<p>Represents a<code>marked_as_duplicate</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MENTIONED_EVENT",
          "description": "<p>Represents a<code>mentioned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MERGED_EVENT",
          "description": "<p>Represents a<code>merged</code>event on a given pull request.</p>"
        },
        {
          "name": "MILESTONED_EVENT",
          "description": "<p>Represents a<code>milestoned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MOVED_COLUMNS_IN_PROJECT_EVENT",
          "description": "<p>Represents a<code>moved_columns_in_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "PINNED_EVENT",
          "description": "<p>Represents a<code>pinned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_COMMIT",
          "description": "<p>Represents a Git commit part of a pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_COMMIT_COMMENT_THREAD",
          "description": "<p>Represents a commit comment thread part of a pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_REVIEW",
          "description": "<p>A review object for a given pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_REVIEW_THREAD",
          "description": "<p>A threaded list of comments for a given pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_REVISION_MARKER",
          "description": "<p>Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.</p>"
        },
        {
          "name": "READY_FOR_REVIEW_EVENT",
          "description": "<p>Represents a<code>ready_for_review</code>event on a given pull request.</p>"
        },
        {
          "name": "REFERENCED_EVENT",
          "description": "<p>Represents a<code>referenced</code>event on a given <code>ReferencedSubject</code>.</p>"
        },
        {
          "name": "REMOVED_FROM_PROJECT_EVENT",
          "description": "<p>Represents a<code>removed_from_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "RENAMED_TITLE_EVENT",
          "description": "<p>Represents a<code>renamed</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "REOPENED_EVENT",
          "description": "<p>Represents a<code>reopened</code>event on any <code>Closable</code>.</p>"
        },
        {
          "name": "REVIEW_DISMISSED_EVENT",
          "description": "<p>Represents a<code>review_dismissed</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "REVIEW_REQUESTED_EVENT",
          "description": "<p>Represents an<code>review_requested</code>event on a given pull request.</p>"
        },
        {
          "name": "REVIEW_REQUEST_REMOVED_EVENT",
          "description": "<p>Represents an<code>review_request_removed</code>event on a given pull request.</p>"
        },
        {
          "name": "SUBSCRIBED_EVENT",
          "description": "<p>Represents a<code>subscribed</code>event on a given <code>Subscribable</code>.</p>"
        },
        {
          "name": "TRANSFERRED_EVENT",
          "description": "<p>Represents a<code>transferred</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNASSIGNED_EVENT",
          "description": "<p>Represents an<code>unassigned</code>event on any assignable object.</p>"
        },
        {
          "name": "UNLABELED_EVENT",
          "description": "<p>Represents an<code>unlabeled</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNLOCKED_EVENT",
          "description": "<p>Represents an<code>unlocked</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNMARKED_AS_DUPLICATE_EVENT",
          "description": "<p>Represents an<code>unmarked_as_duplicate</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNPINNED_EVENT",
          "description": "<p>Represents an<code>unpinned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNSUBSCRIBED_EVENT",
          "description": "<p>Represents an<code>unsubscribed</code>event on a given <code>Subscribable</code>.</p>"
        },
        {
          "name": "USER_BLOCKED_EVENT",
          "description": "<p>Represents a<code>user_blocked</code>event on a given user.</p>"
        }
      ]
    },
    {
      "name": "PullRequestUpdateState",
      "kind": "enums",
      "id": "pullrequestupdatestate",
      "href": "/graphql/reference/enums#pullrequestupdatestate",
      "description": "<p>The possible target states when updating a pull request.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>A pull request that has been closed without being merged.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>A pull request that is still open.</p>"
        }
      ]
    },
    {
      "name": "ReactionContent",
      "kind": "enums",
      "id": "reactioncontent",
      "href": "/graphql/reference/enums#reactioncontent",
      "description": "<p>Emojis that can be attached to Issues, Pull Requests and Comments.</p>",
      "values": [
        {
          "name": "CONFUSED",
          "description": "<p>Represents the <code>:confused:</code> emoji.</p>"
        },
        {
          "name": "EYES",
          "description": "<p>Represents the <code>:eyes:</code> emoji.</p>"
        },
        {
          "name": "HEART",
          "description": "<p>Represents the <code>:heart:</code> emoji.</p>"
        },
        {
          "name": "HOORAY",
          "description": "<p>Represents the <code>:hooray:</code> emoji.</p>"
        },
        {
          "name": "LAUGH",
          "description": "<p>Represents the <code>:laugh:</code> emoji.</p>"
        },
        {
          "name": "ROCKET",
          "description": "<p>Represents the <code>:rocket:</code> emoji.</p>"
        },
        {
          "name": "THUMBS_DOWN",
          "description": "<p>Represents the <code>:-1:</code> emoji.</p>"
        },
        {
          "name": "THUMBS_UP",
          "description": "<p>Represents the <code>:+1:</code> emoji.</p>"
        }
      ]
    },
    {
      "name": "ReactionOrderField",
      "kind": "enums",
      "id": "reactionorderfield",
      "href": "/graphql/reference/enums#reactionorderfield",
      "description": "<p>A list of fields that reactions can be ordered by.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Allows ordering a list of reactions by when they were created.</p>"
        }
      ]
    },
    {
      "name": "RefOrderField",
      "kind": "enums",
      "id": "reforderfield",
      "href": "/graphql/reference/enums#reforderfield",
      "description": "<p>Properties by which ref connections can be ordered.</p>",
      "values": [
        {
          "name": "ALPHABETICAL",
          "description": "<p>Order refs by their alphanumeric name.</p>"
        },
        {
          "name": "TAG_COMMIT_DATE",
          "description": "<p>Order refs by underlying commit date if the ref prefix is refs/tags/.</p>"
        }
      ]
    },
    {
      "name": "ReleaseOrderField",
      "kind": "enums",
      "id": "releaseorderfield",
      "href": "/graphql/reference/enums#releaseorderfield",
      "description": "<p>Properties by which release connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order releases by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order releases alphabetically by name.</p>"
        }
      ]
    },
    {
      "name": "RepoAccessAuditEntryVisibility",
      "kind": "enums",
      "id": "repoaccessauditentryvisibility",
      "href": "/graphql/reference/enums#repoaccessauditentryvisibility",
      "description": "<p>The privacy of a repository.</p>",
      "values": [
        {
          "name": "INTERNAL",
          "description": "<p>The repository is visible only to users in the same business.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>The repository is visible only to those with explicit access.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>The repository is visible to everyone.</p>"
        }
      ]
    },
    {
      "name": "RepoAddMemberAuditEntryVisibility",
      "kind": "enums",
      "id": "repoaddmemberauditentryvisibility",
      "href": "/graphql/reference/enums#repoaddmemberauditentryvisibility",
      "description": "<p>The privacy of a repository.</p>",
      "values": [
        {
          "name": "INTERNAL",
          "description": "<p>The repository is visible only to users in the same business.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>The repository is visible only to those with explicit access.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>The repository is visible to everyone.</p>"
        }
      ]
    },
    {
      "name": "RepoArchivedAuditEntryVisibility",
      "kind": "enums",
      "id": "repoarchivedauditentryvisibility",
      "href": "/graphql/reference/enums#repoarchivedauditentryvisibility",
      "description": "<p>The privacy of a repository.</p>",
      "values": [
        {
          "name": "INTERNAL",
          "description": "<p>The repository is visible only to users in the same business.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>The repository is visible only to those with explicit access.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>The repository is visible to everyone.</p>"
        }
      ]
    },
    {
      "name": "RepoChangeMergeSettingAuditEntryMergeType",
      "kind": "enums",
      "id": "repochangemergesettingauditentrymergetype",
      "href": "/graphql/reference/enums#repochangemergesettingauditentrymergetype",
      "description": "<p>The merge options available for pull requests to this repository.</p>",
      "values": [
        {
          "name": "MERGE",
          "description": "<p>The pull request is added to the base branch in a merge commit.</p>"
        },
        {
          "name": "REBASE",
          "description": "<p>Commits from the pull request are added onto the base branch individually without a merge commit.</p>"
        },
        {
          "name": "SQUASH",
          "description": "<p>The pull request's commits are squashed into a single commit before they are merged to the base branch.</p>"
        }
      ]
    },
    {
      "name": "RepoCreateAuditEntryVisibility",
      "kind": "enums",
      "id": "repocreateauditentryvisibility",
      "href": "/graphql/reference/enums#repocreateauditentryvisibility",
      "description": "<p>The privacy of a repository.</p>",
      "values": [
        {
          "name": "INTERNAL",
          "description": "<p>The repository is visible only to users in the same business.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>The repository is visible only to those with explicit access.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>The repository is visible to everyone.</p>"
        }
      ]
    },
    {
      "name": "RepoDestroyAuditEntryVisibility",
      "kind": "enums",
      "id": "repodestroyauditentryvisibility",
      "href": "/graphql/reference/enums#repodestroyauditentryvisibility",
      "description": "<p>The privacy of a repository.</p>",
      "values": [
        {
          "name": "INTERNAL",
          "description": "<p>The repository is visible only to users in the same business.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>The repository is visible only to those with explicit access.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>The repository is visible to everyone.</p>"
        }
      ]
    },
    {
      "name": "RepoRemoveMemberAuditEntryVisibility",
      "kind": "enums",
      "id": "reporemovememberauditentryvisibility",
      "href": "/graphql/reference/enums#reporemovememberauditentryvisibility",
      "description": "<p>The privacy of a repository.</p>",
      "values": [
        {
          "name": "INTERNAL",
          "description": "<p>The repository is visible only to users in the same business.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>The repository is visible only to those with explicit access.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>The repository is visible to everyone.</p>"
        }
      ]
    },
    {
      "name": "ReportedContentClassifiers",
      "kind": "enums",
      "id": "reportedcontentclassifiers",
      "href": "/graphql/reference/enums#reportedcontentclassifiers",
      "description": "<p>The reasons a piece of content can be reported or minimized.</p>",
      "values": [
        {
          "name": "DUPLICATE",
          "description": "<p>A duplicated piece of content.</p>"
        },
        {
          "name": "OFF_TOPIC",
          "description": "<p>An irrelevant piece of content.</p>"
        },
        {
          "name": "OUTDATED",
          "description": "<p>An outdated piece of content.</p>"
        },
        {
          "name": "RESOLVED",
          "description": "<p>The content has been resolved.</p>"
        }
      ]
    },
    {
      "name": "RepositoryAffiliation",
      "kind": "enums",
      "id": "repositoryaffiliation",
      "href": "/graphql/reference/enums#repositoryaffiliation",
      "description": "<p>The affiliation of a user to a repository.</p>",
      "values": [
        {
          "name": "COLLABORATOR",
          "description": "<p>Repositories that the user has been added to as a collaborator.</p>"
        },
        {
          "name": "ORGANIZATION_MEMBER",
          "description": "<p>Repositories that the user has access to through being a member of an\norganization. This includes every repository on every team that the user is on.</p>"
        },
        {
          "name": "OWNER",
          "description": "<p>Repositories that are owned by the authenticated user.</p>"
        }
      ]
    },
    {
      "name": "RepositoryContributionType",
      "kind": "enums",
      "id": "repositorycontributiontype",
      "href": "/graphql/reference/enums#repositorycontributiontype",
      "description": "<p>The reason a repository is listed as 'contributed'.</p>",
      "values": [
        {
          "name": "COMMIT",
          "description": "<p>Created a commit.</p>"
        },
        {
          "name": "ISSUE",
          "description": "<p>Created an issue.</p>"
        },
        {
          "name": "PULL_REQUEST",
          "description": "<p>Created a pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_REVIEW",
          "description": "<p>Reviewed a pull request.</p>"
        },
        {
          "name": "REPOSITORY",
          "description": "<p>Created the repository.</p>"
        }
      ]
    },
    {
      "name": "RepositoryInvitationOrderField",
      "kind": "enums",
      "id": "repositoryinvitationorderfield",
      "href": "/graphql/reference/enums#repositoryinvitationorderfield",
      "description": "<p>Properties by which repository invitation connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order repository invitations by creation time.</p>"
        }
      ]
    },
    {
      "name": "RepositoryLockReason",
      "kind": "enums",
      "id": "repositorylockreason",
      "href": "/graphql/reference/enums#repositorylockreason",
      "description": "<p>The possible reasons a given repository could be in a locked state.</p>",
      "values": [
        {
          "name": "BILLING",
          "description": "<p>The repository is locked due to a billing related reason.</p>"
        },
        {
          "name": "MIGRATING",
          "description": "<p>The repository is locked due to a migration.</p>"
        },
        {
          "name": "MOVING",
          "description": "<p>The repository is locked due to a move.</p>"
        },
        {
          "name": "RENAME",
          "description": "<p>The repository is locked due to a rename.</p>"
        },
        {
          "name": "TRADE_RESTRICTION",
          "description": "<p>The repository is locked due to a trade controls related reason.</p>"
        },
        {
          "name": "TRANSFERRING_OWNERSHIP",
          "description": "<p>The repository is locked due to an ownership transfer.</p>"
        }
      ]
    },
    {
      "name": "RepositoryMigrationOrderDirection",
      "kind": "enums",
      "id": "repositorymigrationorderdirection",
      "href": "/graphql/reference/enums#repositorymigrationorderdirection",
      "description": "<p>Possible directions in which to order a list of repository migrations when provided an <code>orderBy</code> argument.</p>",
      "values": [
        {
          "name": "ASC",
          "description": "<p>Specifies an ascending order for a given <code>orderBy</code> argument.</p>"
        },
        {
          "name": "DESC",
          "description": "<p>Specifies a descending order for a given <code>orderBy</code> argument.</p>"
        }
      ]
    },
    {
      "name": "RepositoryMigrationOrderField",
      "kind": "enums",
      "id": "repositorymigrationorderfield",
      "href": "/graphql/reference/enums#repositorymigrationorderfield",
      "description": "<p>Properties by which repository migrations can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order mannequins why when they were created.</p>"
        }
      ]
    },
    {
      "name": "RepositoryOrderField",
      "kind": "enums",
      "id": "repositoryorderfield",
      "href": "/graphql/reference/enums#repositoryorderfield",
      "description": "<p>Properties by which repository connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order repositories by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order repositories by name.</p>"
        },
        {
          "name": "PUSHED_AT",
          "description": "<p>Order repositories by push time.</p>"
        },
        {
          "name": "STARGAZERS",
          "description": "<p>Order repositories by number of stargazers.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order repositories by update time.</p>"
        }
      ]
    },
    {
      "name": "RepositoryPermission",
      "kind": "enums",
      "id": "repositorypermission",
      "href": "/graphql/reference/enums#repositorypermission",
      "description": "<p>The access level to a repository.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>Can read, clone, and push to this repository. Can also manage issues, pull\nrequests, and repository settings, including adding collaborators.</p>"
        },
        {
          "name": "MAINTAIN",
          "description": "<p>Can read, clone, and push to this repository. They can also manage issues, pull requests, and some repository settings.</p>"
        },
        {
          "name": "READ",
          "description": "<p>Can read and clone this repository. Can also open and comment on issues and pull requests.</p>"
        },
        {
          "name": "TRIAGE",
          "description": "<p>Can read and clone this repository. Can also manage issues and pull requests.</p>"
        },
        {
          "name": "WRITE",
          "description": "<p>Can read, clone, and push to this repository. Can also manage issues and pull requests.</p>"
        }
      ]
    },
    {
      "name": "RepositoryPrivacy",
      "kind": "enums",
      "id": "repositoryprivacy",
      "href": "/graphql/reference/enums#repositoryprivacy",
      "description": "<p>The privacy of a repository.</p>",
      "values": [
        {
          "name": "PRIVATE",
          "description": "<p>Private.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>Public.</p>"
        }
      ]
    },
    {
      "name": "RepositoryVisibility",
      "kind": "enums",
      "id": "repositoryvisibility",
      "href": "/graphql/reference/enums#repositoryvisibility",
      "description": "<p>The repository's visibility level.</p>",
      "values": [
        {
          "name": "INTERNAL",
          "description": "<p>The repository is visible only to users in the same business.</p>"
        },
        {
          "name": "PRIVATE",
          "description": "<p>The repository is visible only to those with explicit access.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>The repository is visible to everyone.</p>"
        }
      ]
    },
    {
      "name": "RepositoryVulnerabilityAlertDependencyScope",
      "kind": "enums",
      "id": "repositoryvulnerabilityalertdependencyscope",
      "href": "/graphql/reference/enums#repositoryvulnerabilityalertdependencyscope",
      "description": "<p>The possible scopes of an alert's dependency.</p>",
      "values": [
        {
          "name": "DEVELOPMENT",
          "description": "<p>A dependency that is only used in development.</p>"
        },
        {
          "name": "RUNTIME",
          "description": "<p>A dependency that is leveraged during application runtime.</p>"
        }
      ]
    },
    {
      "name": "RepositoryVulnerabilityAlertState",
      "kind": "enums",
      "id": "repositoryvulnerabilityalertstate",
      "href": "/graphql/reference/enums#repositoryvulnerabilityalertstate",
      "description": "<p>The possible states of an alert.</p>",
      "values": [
        {
          "name": "DISMISSED",
          "description": "<p>An alert that has been manually closed by a user.</p>"
        },
        {
          "name": "FIXED",
          "description": "<p>An alert that has been resolved by a code change.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>An alert that is still open.</p>"
        }
      ]
    },
    {
      "name": "RequestableCheckStatusState",
      "kind": "enums",
      "id": "requestablecheckstatusstate",
      "href": "/graphql/reference/enums#requestablecheckstatusstate",
      "description": "<p>The possible states that can be requested when creating a check run.</p>",
      "values": [
        {
          "name": "COMPLETED",
          "description": "<p>The check suite or run has been completed.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The check suite or run is in progress.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>The check suite or run is in pending state.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The check suite or run has been queued.</p>"
        },
        {
          "name": "WAITING",
          "description": "<p>The check suite or run is in waiting state.</p>"
        }
      ]
    },
    {
      "name": "RoleInOrganization",
      "kind": "enums",
      "id": "roleinorganization",
      "href": "/graphql/reference/enums#roleinorganization",
      "description": "<p>Possible roles a user may have in relation to an organization.</p>",
      "values": [
        {
          "name": "DIRECT_MEMBER",
          "description": "<p>A user who is a direct member of the organization.</p>"
        },
        {
          "name": "OWNER",
          "description": "<p>A user with full administrative access to the organization.</p>"
        },
        {
          "name": "UNAFFILIATED",
          "description": "<p>A user who is unaffiliated with the organization.</p>"
        }
      ]
    },
    {
      "name": "SamlDigestAlgorithm",
      "kind": "enums",
      "id": "samldigestalgorithm",
      "href": "/graphql/reference/enums#samldigestalgorithm",
      "description": "<p>The possible digest algorithms used to sign SAML requests for an identity provider.</p>",
      "values": [
        {
          "name": "SHA1",
          "description": "<p>SHA1.</p>"
        },
        {
          "name": "SHA256",
          "description": "<p>SHA256.</p>"
        },
        {
          "name": "SHA384",
          "description": "<p>SHA384.</p>"
        },
        {
          "name": "SHA512",
          "description": "<p>SHA512.</p>"
        }
      ]
    },
    {
      "name": "SamlSignatureAlgorithm",
      "kind": "enums",
      "id": "samlsignaturealgorithm",
      "href": "/graphql/reference/enums#samlsignaturealgorithm",
      "description": "<p>The possible signature algorithms used to sign SAML requests for a Identity Provider.</p>",
      "values": [
        {
          "name": "RSA_SHA1",
          "description": "<p>RSA-SHA1.</p>"
        },
        {
          "name": "RSA_SHA256",
          "description": "<p>RSA-SHA256.</p>"
        },
        {
          "name": "RSA_SHA384",
          "description": "<p>RSA-SHA384.</p>"
        },
        {
          "name": "RSA_SHA512",
          "description": "<p>RSA-SHA512.</p>"
        }
      ]
    },
    {
      "name": "SavedReplyOrderField",
      "kind": "enums",
      "id": "savedreplyorderfield",
      "href": "/graphql/reference/enums#savedreplyorderfield",
      "description": "<p>Properties by which saved reply connections can be ordered.</p>",
      "values": [
        {
          "name": "UPDATED_AT",
          "description": "<p>Order saved reply by when they were updated.</p>"
        }
      ]
    },
    {
      "name": "SearchType",
      "kind": "enums",
      "id": "searchtype",
      "href": "/graphql/reference/enums#searchtype",
      "description": "<p>Represents the individual results of a search.</p>",
      "values": [
        {
          "name": "DISCUSSION",
          "description": "<p>Returns matching discussions in repositories.</p>"
        },
        {
          "name": "ISSUE",
          "description": "<p>Returns results matching issues in repositories.</p>"
        },
        {
          "name": "REPOSITORY",
          "description": "<p>Returns results matching repositories.</p>"
        },
        {
          "name": "USER",
          "description": "<p>Returns results matching users and organizations on GitHub.</p>"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryClassification",
      "kind": "enums",
      "id": "securityadvisoryclassification",
      "href": "/graphql/reference/enums#securityadvisoryclassification",
      "description": "<p>Classification of the advisory.</p>",
      "values": [
        {
          "name": "GENERAL",
          "description": "<p>Classification of general advisories.</p>"
        },
        {
          "name": "MALWARE",
          "description": "<p>Classification of malware advisories.</p>"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryEcosystem",
      "kind": "enums",
      "id": "securityadvisoryecosystem",
      "href": "/graphql/reference/enums#securityadvisoryecosystem",
      "description": "<p>The possible ecosystems of a security vulnerability's package.</p>",
      "values": [
        {
          "name": "ACTIONS",
          "description": "<p>GitHub Actions.</p>"
        },
        {
          "name": "COMPOSER",
          "description": "<p>PHP packages hosted at packagist.org.</p>"
        },
        {
          "name": "ERLANG",
          "description": "<p>Erlang/Elixir packages hosted at hex.pm.</p>"
        },
        {
          "name": "GO",
          "description": "<p>Go modules.</p>"
        },
        {
          "name": "MAVEN",
          "description": "<p>Java artifacts hosted at the Maven central repository.</p>"
        },
        {
          "name": "NPM",
          "description": "<p>JavaScript packages hosted at npmjs.com.</p>"
        },
        {
          "name": "NUGET",
          "description": "<p>.NET packages hosted at the NuGet Gallery.</p>"
        },
        {
          "name": "PIP",
          "description": "<p>Python packages hosted at PyPI.org.</p>"
        },
        {
          "name": "PUB",
          "description": "<p>Dart packages hosted at pub.dev.</p>"
        },
        {
          "name": "RUBYGEMS",
          "description": "<p>Ruby gems hosted at RubyGems.org.</p>"
        },
        {
          "name": "RUST",
          "description": "<p>Rust crates.</p>"
        },
        {
          "name": "SWIFT",
          "description": "<p>Swift packages.</p>"
        }
      ]
    },
    {
      "name": "SecurityAdvisorySeverity",
      "kind": "enums",
      "id": "securityadvisoryseverity",
      "href": "/graphql/reference/enums#securityadvisoryseverity",
      "description": "<p>Severity of the vulnerability.</p>",
      "values": [
        {
          "name": "CRITICAL",
          "description": "<p>Critical.</p>"
        },
        {
          "name": "HIGH",
          "description": "<p>High.</p>"
        },
        {
          "name": "LOW",
          "description": "<p>Low.</p>"
        },
        {
          "name": "MODERATE",
          "description": "<p>Moderate.</p>"
        }
      ]
    },
    {
      "name": "SocialAccountProvider",
      "kind": "enums",
      "id": "socialaccountprovider",
      "href": "/graphql/reference/enums#socialaccountprovider",
      "description": "<p>Software or company that hosts social media accounts.</p>",
      "values": [
        {
          "name": "FACEBOOK",
          "description": "<p>Social media and networking website.</p>"
        },
        {
          "name": "GENERIC",
          "description": "<p>Catch-all for social media providers that do not yet have specific handling.</p>"
        },
        {
          "name": "HOMETOWN",
          "description": "<p>Fork of Mastodon with a greater focus on local posting.</p>"
        },
        {
          "name": "INSTAGRAM",
          "description": "<p>Social media website with a focus on photo and video sharing.</p>"
        },
        {
          "name": "LINKEDIN",
          "description": "<p>Professional networking website.</p>"
        },
        {
          "name": "MASTODON",
          "description": "<p>Open-source federated microblogging service.</p>"
        },
        {
          "name": "REDDIT",
          "description": "<p>Social news aggregation and discussion website.</p>"
        },
        {
          "name": "TWITCH",
          "description": "<p>Live-streaming service.</p>"
        },
        {
          "name": "TWITTER",
          "description": "<p>Microblogging website.</p>"
        },
        {
          "name": "YOUTUBE",
          "description": "<p>Online video platform.</p>"
        }
      ]
    },
    {
      "name": "SquashMergeCommitMessage",
      "kind": "enums",
      "id": "squashmergecommitmessage",
      "href": "/graphql/reference/enums#squashmergecommitmessage",
      "description": "<p>The possible default commit messages for squash merges.</p>",
      "values": [
        {
          "name": "BLANK",
          "description": "<p>Default to a blank commit message.</p>"
        },
        {
          "name": "COMMIT_MESSAGES",
          "description": "<p>Default to the branch's commit messages.</p>"
        },
        {
          "name": "PR_BODY",
          "description": "<p>Default to the pull request's body.</p>"
        }
      ]
    },
    {
      "name": "SquashMergeCommitTitle",
      "kind": "enums",
      "id": "squashmergecommittitle",
      "href": "/graphql/reference/enums#squashmergecommittitle",
      "description": "<p>The possible default commit titles for squash merges.</p>",
      "values": [
        {
          "name": "COMMIT_OR_PR_TITLE",
          "description": "<p>Default to the commit's title (if only one commit) or the pull request's title (when more than one commit).</p>"
        },
        {
          "name": "PR_TITLE",
          "description": "<p>Default to the pull request's title.</p>"
        }
      ]
    },
    {
      "name": "StarOrderField",
      "kind": "enums",
      "id": "starorderfield",
      "href": "/graphql/reference/enums#starorderfield",
      "description": "<p>Properties by which star connections can be ordered.</p>",
      "values": [
        {
          "name": "STARRED_AT",
          "description": "<p>Allows ordering a list of stars by when they were created.</p>"
        }
      ]
    },
    {
      "name": "StatusState",
      "kind": "enums",
      "id": "statusstate",
      "href": "/graphql/reference/enums#statusstate",
      "description": "<p>The possible commit status states.</p>",
      "values": [
        {
          "name": "ERROR",
          "description": "<p>Status is errored.</p>"
        },
        {
          "name": "EXPECTED",
          "description": "<p>Status is expected.</p>"
        },
        {
          "name": "FAILURE",
          "description": "<p>Status is failing.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>Status is pending.</p>"
        },
        {
          "name": "SUCCESS",
          "description": "<p>Status is successful.</p>"
        }
      ]
    },
    {
      "name": "SubscriptionState",
      "kind": "enums",
      "id": "subscriptionstate",
      "href": "/graphql/reference/enums#subscriptionstate",
      "description": "<p>The possible states of a subscription.</p>",
      "values": [
        {
          "name": "IGNORED",
          "description": "<p>The User is never notified.</p>"
        },
        {
          "name": "SUBSCRIBED",
          "description": "<p>The User is notified of all conversations.</p>"
        },
        {
          "name": "UNSUBSCRIBED",
          "description": "<p>The User is only notified when participating or @mentioned.</p>"
        }
      ]
    },
    {
      "name": "TeamDiscussionCommentOrderField",
      "kind": "enums",
      "id": "teamdiscussioncommentorderfield",
      "href": "/graphql/reference/enums#teamdiscussioncommentorderfield",
      "description": "<p>Properties by which team discussion comment connections can be ordered.</p>",
      "values": [
        {
          "name": "NUMBER",
          "description": "<p>Allows sequential ordering of team discussion comments (which is equivalent to chronological ordering).</p>"
        }
      ]
    },
    {
      "name": "TeamDiscussionOrderField",
      "kind": "enums",
      "id": "teamdiscussionorderfield",
      "href": "/graphql/reference/enums#teamdiscussionorderfield",
      "description": "<p>Properties by which team discussion connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Allows chronological ordering of team discussions.</p>"
        }
      ]
    },
    {
      "name": "TeamMemberOrderField",
      "kind": "enums",
      "id": "teammemberorderfield",
      "href": "/graphql/reference/enums#teammemberorderfield",
      "description": "<p>Properties by which team member connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order team members by creation time.</p>"
        },
        {
          "name": "LOGIN",
          "description": "<p>Order team members by login.</p>"
        }
      ]
    },
    {
      "name": "TeamMemberRole",
      "kind": "enums",
      "id": "teammemberrole",
      "href": "/graphql/reference/enums#teammemberrole",
      "description": "<p>The possible team member roles; either<code>maintainer</code>or 'member'.</p>",
      "values": [
        {
          "name": "MAINTAINER",
          "description": "<p>A team maintainer has permission to add and remove team members.</p>"
        },
        {
          "name": "MEMBER",
          "description": "<p>A team member has no administrative permissions on the team.</p>"
        }
      ]
    },
    {
      "name": "TeamMembershipType",
      "kind": "enums",
      "id": "teammembershiptype",
      "href": "/graphql/reference/enums#teammembershiptype",
      "description": "<p>Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>Includes immediate and child team members for the team.</p>"
        },
        {
          "name": "CHILD_TEAM",
          "description": "<p>Includes only child team members for the team.</p>"
        },
        {
          "name": "IMMEDIATE",
          "description": "<p>Includes only immediate members of the team.</p>"
        }
      ]
    },
    {
      "name": "TeamNotificationSetting",
      "kind": "enums",
      "id": "teamnotificationsetting",
      "href": "/graphql/reference/enums#teamnotificationsetting",
      "description": "<p>The possible team notification values.</p>",
      "values": [
        {
          "name": "NOTIFICATIONS_DISABLED",
          "description": "<p>No one will receive notifications.</p>"
        },
        {
          "name": "NOTIFICATIONS_ENABLED",
          "description": "<p>Everyone will receive notifications when the team is @mentioned.</p>"
        }
      ]
    },
    {
      "name": "TeamOrderField",
      "kind": "enums",
      "id": "teamorderfield",
      "href": "/graphql/reference/enums#teamorderfield",
      "description": "<p>Properties by which team connections can be ordered.</p>",
      "values": [
        {
          "name": "NAME",
          "description": "<p>Allows ordering a list of teams by name.</p>"
        }
      ]
    },
    {
      "name": "TeamPrivacy",
      "kind": "enums",
      "id": "teamprivacy",
      "href": "/graphql/reference/enums#teamprivacy",
      "description": "<p>The possible team privacy values.</p>",
      "values": [
        {
          "name": "SECRET",
          "description": "<p>A secret team can only be seen by its members.</p>"
        },
        {
          "name": "VISIBLE",
          "description": "<p>A visible team can be seen and @mentioned by every member of the organization.</p>"
        }
      ]
    },
    {
      "name": "TeamRepositoryOrderField",
      "kind": "enums",
      "id": "teamrepositoryorderfield",
      "href": "/graphql/reference/enums#teamrepositoryorderfield",
      "description": "<p>Properties by which team repository connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order repositories by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order repositories by name.</p>"
        },
        {
          "name": "PERMISSION",
          "description": "<p>Order repositories by permission.</p>"
        },
        {
          "name": "PUSHED_AT",
          "description": "<p>Order repositories by push time.</p>"
        },
        {
          "name": "STARGAZERS",
          "description": "<p>Order repositories by number of stargazers.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order repositories by update time.</p>"
        }
      ]
    },
    {
      "name": "TeamReviewAssignmentAlgorithm",
      "kind": "enums",
      "id": "teamreviewassignmentalgorithm",
      "href": "/graphql/reference/enums#teamreviewassignmentalgorithm",
      "description": "<p>The possible team review assignment algorithms.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team review assignments preview",
        "description": "This preview adds support for updating the settings for team review assignment.",
        "toggled_by": "stone-crop-preview",
        "toggled_on": [
          "Mutation.updateTeamReviewAssignment",
          "TeamReviewAssignmentAlgorithm",
          "Team.reviewRequestDelegationEnabled",
          "Team.reviewRequestDelegationAlgorithm",
          "Team.reviewRequestDelegationMemberCount",
          "Team.reviewRequestDelegationNotifyTeam"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.stone-crop-preview+json",
        "href": "/graphql/overview/schema-previews#team-review-assignments-preview"
      },
      "values": [
        {
          "name": "LOAD_BALANCE",
          "description": "<p>Balance review load across the entire team.</p>"
        },
        {
          "name": "ROUND_ROBIN",
          "description": "<p>Alternate reviews between each team member.</p>"
        }
      ]
    },
    {
      "name": "TeamRole",
      "kind": "enums",
      "id": "teamrole",
      "href": "/graphql/reference/enums#teamrole",
      "description": "<p>The role of a user on a team.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>User has admin rights on the team.</p>"
        },
        {
          "name": "MEMBER",
          "description": "<p>User is a member of the team.</p>"
        }
      ]
    },
    {
      "name": "UserBlockDuration",
      "kind": "enums",
      "id": "userblockduration",
      "href": "/graphql/reference/enums#userblockduration",
      "description": "<p>The possible durations that a user can be blocked for.</p>",
      "values": [
        {
          "name": "ONE_DAY",
          "description": "<p>The user was blocked for 1 day.</p>"
        },
        {
          "name": "ONE_MONTH",
          "description": "<p>The user was blocked for 30 days.</p>"
        },
        {
          "name": "ONE_WEEK",
          "description": "<p>The user was blocked for 7 days.</p>"
        },
        {
          "name": "PERMANENT",
          "description": "<p>The user was blocked permanently.</p>"
        },
        {
          "name": "THREE_DAYS",
          "description": "<p>The user was blocked for 3 days.</p>"
        }
      ]
    },
    {
      "name": "UserStatusOrderField",
      "kind": "enums",
      "id": "userstatusorderfield",
      "href": "/graphql/reference/enums#userstatusorderfield",
      "description": "<p>Properties by which user status connections can be ordered.</p>",
      "values": [
        {
          "name": "UPDATED_AT",
          "description": "<p>Order user statuses by when they were updated.</p>"
        }
      ]
    },
    {
      "name": "VerifiableDomainOrderField",
      "kind": "enums",
      "id": "verifiabledomainorderfield",
      "href": "/graphql/reference/enums#verifiabledomainorderfield",
      "description": "<p>Properties by which verifiable domain connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order verifiable domains by their creation date.</p>"
        },
        {
          "name": "DOMAIN",
          "description": "<p>Order verifiable domains by the domain name.</p>"
        }
      ]
    },
    {
      "name": "WorkflowRunOrderField",
      "kind": "enums",
      "id": "workflowrunorderfield",
      "href": "/graphql/reference/enums#workflowrunorderfield",
      "description": "<p>Properties by which workflow run connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order workflow runs by most recently created.</p>"
        }
      ]
    },
    {
      "name": "WorkflowState",
      "kind": "enums",
      "id": "workflowstate",
      "href": "/graphql/reference/enums#workflowstate",
      "description": "<p>The possible states for a workflow.</p>",
      "values": [
        {
          "name": "ACTIVE",
          "description": "<p>The workflow is active.</p>"
        },
        {
          "name": "DELETED",
          "description": "<p>The workflow was deleted from the git repository.</p>"
        },
        {
          "name": "DISABLED_FORK",
          "description": "<p>The workflow was disabled by default on a fork.</p>"
        },
        {
          "name": "DISABLED_INACTIVITY",
          "description": "<p>The workflow was disabled for inactivity in the repository.</p>"
        },
        {
          "name": "DISABLED_MANUALLY",
          "description": "<p>The workflow was disabled manually.</p>"
        }
      ]
    }
  ],
  "unions": [
    {
      "name": "Assignee",
      "kind": "unions",
      "id": "assignee",
      "href": "/graphql/reference/unions#assignee",
      "description": "<p>Types that can be assigned to issues.</p>",
      "possibleTypes": [
        {
          "name": "Bot",
          "id": "bot",
          "href": "/graphql/reference/objects#bot"
        },
        {
          "name": "Mannequin",
          "id": "mannequin",
          "href": "/graphql/reference/objects#mannequin"
        },
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "AuditEntryActor",
      "kind": "unions",
      "id": "auditentryactor",
      "href": "/graphql/reference/unions#auditentryactor",
      "description": "<p>Types that can initiate an audit log event.</p>",
      "possibleTypes": [
        {
          "name": "Bot",
          "id": "bot",
          "href": "/graphql/reference/objects#bot"
        },
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "BranchActorAllowanceActor",
      "kind": "unions",
      "id": "branchactorallowanceactor",
      "href": "/graphql/reference/unions#branchactorallowanceactor",
      "description": "<p>Types which can be actors for <code>BranchActorAllowance</code> objects.</p>",
      "possibleTypes": [
        {
          "name": "App",
          "id": "app",
          "href": "/graphql/reference/objects#app"
        },
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Claimable",
      "kind": "unions",
      "id": "claimable",
      "href": "/graphql/reference/unions#claimable",
      "description": "<p>An object which can have its data claimed or claim data from another.</p>",
      "possibleTypes": [
        {
          "name": "Mannequin",
          "id": "mannequin",
          "href": "/graphql/reference/objects#mannequin"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Closer",
      "kind": "unions",
      "id": "closer",
      "href": "/graphql/reference/unions#closer",
      "description": "<p>The object which triggered a <code>ClosedEvent</code>.</p>",
      "possibleTypes": [
        {
          "name": "Commit",
          "id": "commit",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "CreatedIssueOrRestrictedContribution",
      "kind": "unions",
      "id": "createdissueorrestrictedcontribution",
      "href": "/graphql/reference/unions#createdissueorrestrictedcontribution",
      "description": "<p>Represents either a issue the viewer can access or a restricted contribution.</p>",
      "possibleTypes": [
        {
          "name": "CreatedIssueContribution",
          "id": "createdissuecontribution",
          "href": "/graphql/reference/objects#createdissuecontribution"
        },
        {
          "name": "RestrictedContribution",
          "id": "restrictedcontribution",
          "href": "/graphql/reference/objects#restrictedcontribution"
        }
      ]
    },
    {
      "name": "CreatedPullRequestOrRestrictedContribution",
      "kind": "unions",
      "id": "createdpullrequestorrestrictedcontribution",
      "href": "/graphql/reference/unions#createdpullrequestorrestrictedcontribution",
      "description": "<p>Represents either a pull request the viewer can access or a restricted contribution.</p>",
      "possibleTypes": [
        {
          "name": "CreatedPullRequestContribution",
          "id": "createdpullrequestcontribution",
          "href": "/graphql/reference/objects#createdpullrequestcontribution"
        },
        {
          "name": "RestrictedContribution",
          "id": "restrictedcontribution",
          "href": "/graphql/reference/objects#restrictedcontribution"
        }
      ]
    },
    {
      "name": "CreatedRepositoryOrRestrictedContribution",
      "kind": "unions",
      "id": "createdrepositoryorrestrictedcontribution",
      "href": "/graphql/reference/unions#createdrepositoryorrestrictedcontribution",
      "description": "<p>Represents either a repository the viewer can access or a restricted contribution.</p>",
      "possibleTypes": [
        {
          "name": "CreatedRepositoryContribution",
          "id": "createdrepositorycontribution",
          "href": "/graphql/reference/objects#createdrepositorycontribution"
        },
        {
          "name": "RestrictedContribution",
          "id": "restrictedcontribution",
          "href": "/graphql/reference/objects#restrictedcontribution"
        }
      ]
    },
    {
      "name": "DeploymentReviewer",
      "kind": "unions",
      "id": "deploymentreviewer",
      "href": "/graphql/reference/unions#deploymentreviewer",
      "description": "<p>Users and teams.</p>",
      "possibleTypes": [
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "EnterpriseMember",
      "kind": "unions",
      "id": "enterprisemember",
      "href": "/graphql/reference/unions#enterprisemember",
      "description": "<p>An object that is a member of an enterprise.</p>",
      "possibleTypes": [
        {
          "name": "EnterpriseUserAccount",
          "id": "enterpriseuseraccount",
          "href": "/graphql/reference/objects#enterpriseuseraccount"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "IpAllowListOwner",
      "kind": "unions",
      "id": "ipallowlistowner",
      "href": "/graphql/reference/unions#ipallowlistowner",
      "description": "<p>Types that can own an IP allow list.</p>",
      "possibleTypes": [
        {
          "name": "App",
          "id": "app",
          "href": "/graphql/reference/objects#app"
        },
        {
          "name": "Enterprise",
          "id": "enterprise",
          "href": "/graphql/reference/objects#enterprise"
        },
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        }
      ]
    },
    {
      "name": "IssueOrPullRequest",
      "kind": "unions",
      "id": "issueorpullrequest",
      "href": "/graphql/reference/unions#issueorpullrequest",
      "description": "<p>Used for return value of Repository.issueOrPullRequest.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "IssueTimelineItem",
      "kind": "unions",
      "id": "issuetimelineitem",
      "href": "/graphql/reference/unions#issuetimelineitem",
      "description": "<p>An item in an issue timeline.</p>",
      "possibleTypes": [
        {
          "name": "AssignedEvent",
          "id": "assignedevent",
          "href": "/graphql/reference/objects#assignedevent"
        },
        {
          "name": "ClosedEvent",
          "id": "closedevent",
          "href": "/graphql/reference/objects#closedevent"
        },
        {
          "name": "Commit",
          "id": "commit",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "CrossReferencedEvent",
          "id": "crossreferencedevent",
          "href": "/graphql/reference/objects#crossreferencedevent"
        },
        {
          "name": "DemilestonedEvent",
          "id": "demilestonedevent",
          "href": "/graphql/reference/objects#demilestonedevent"
        },
        {
          "name": "IssueComment",
          "id": "issuecomment",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "LabeledEvent",
          "id": "labeledevent",
          "href": "/graphql/reference/objects#labeledevent"
        },
        {
          "name": "LockedEvent",
          "id": "lockedevent",
          "href": "/graphql/reference/objects#lockedevent"
        },
        {
          "name": "MilestonedEvent",
          "id": "milestonedevent",
          "href": "/graphql/reference/objects#milestonedevent"
        },
        {
          "name": "ReferencedEvent",
          "id": "referencedevent",
          "href": "/graphql/reference/objects#referencedevent"
        },
        {
          "name": "RenamedTitleEvent",
          "id": "renamedtitleevent",
          "href": "/graphql/reference/objects#renamedtitleevent"
        },
        {
          "name": "ReopenedEvent",
          "id": "reopenedevent",
          "href": "/graphql/reference/objects#reopenedevent"
        },
        {
          "name": "SubscribedEvent",
          "id": "subscribedevent",
          "href": "/graphql/reference/objects#subscribedevent"
        },
        {
          "name": "TransferredEvent",
          "id": "transferredevent",
          "href": "/graphql/reference/objects#transferredevent"
        },
        {
          "name": "UnassignedEvent",
          "id": "unassignedevent",
          "href": "/graphql/reference/objects#unassignedevent"
        },
        {
          "name": "UnlabeledEvent",
          "id": "unlabeledevent",
          "href": "/graphql/reference/objects#unlabeledevent"
        },
        {
          "name": "UnlockedEvent",
          "id": "unlockedevent",
          "href": "/graphql/reference/objects#unlockedevent"
        },
        {
          "name": "UnsubscribedEvent",
          "id": "unsubscribedevent",
          "href": "/graphql/reference/objects#unsubscribedevent"
        },
        {
          "name": "UserBlockedEvent",
          "id": "userblockedevent",
          "href": "/graphql/reference/objects#userblockedevent"
        }
      ]
    },
    {
      "name": "IssueTimelineItems",
      "kind": "unions",
      "id": "issuetimelineitems",
      "href": "/graphql/reference/unions#issuetimelineitems",
      "description": "<p>An item in an issue timeline.</p>",
      "possibleTypes": [
        {
          "name": "AddedToProjectEvent",
          "id": "addedtoprojectevent",
          "href": "/graphql/reference/objects#addedtoprojectevent"
        },
        {
          "name": "AssignedEvent",
          "id": "assignedevent",
          "href": "/graphql/reference/objects#assignedevent"
        },
        {
          "name": "ClosedEvent",
          "id": "closedevent",
          "href": "/graphql/reference/objects#closedevent"
        },
        {
          "name": "CommentDeletedEvent",
          "id": "commentdeletedevent",
          "href": "/graphql/reference/objects#commentdeletedevent"
        },
        {
          "name": "ConnectedEvent",
          "id": "connectedevent",
          "href": "/graphql/reference/objects#connectedevent"
        },
        {
          "name": "ConvertedNoteToIssueEvent",
          "id": "convertednotetoissueevent",
          "href": "/graphql/reference/objects#convertednotetoissueevent"
        },
        {
          "name": "ConvertedToDiscussionEvent",
          "id": "convertedtodiscussionevent",
          "href": "/graphql/reference/objects#convertedtodiscussionevent"
        },
        {
          "name": "CrossReferencedEvent",
          "id": "crossreferencedevent",
          "href": "/graphql/reference/objects#crossreferencedevent"
        },
        {
          "name": "DemilestonedEvent",
          "id": "demilestonedevent",
          "href": "/graphql/reference/objects#demilestonedevent"
        },
        {
          "name": "DisconnectedEvent",
          "id": "disconnectedevent",
          "href": "/graphql/reference/objects#disconnectedevent"
        },
        {
          "name": "IssueComment",
          "id": "issuecomment",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "LabeledEvent",
          "id": "labeledevent",
          "href": "/graphql/reference/objects#labeledevent"
        },
        {
          "name": "LockedEvent",
          "id": "lockedevent",
          "href": "/graphql/reference/objects#lockedevent"
        },
        {
          "name": "MarkedAsDuplicateEvent",
          "id": "markedasduplicateevent",
          "href": "/graphql/reference/objects#markedasduplicateevent"
        },
        {
          "name": "MentionedEvent",
          "id": "mentionedevent",
          "href": "/graphql/reference/objects#mentionedevent"
        },
        {
          "name": "MilestonedEvent",
          "id": "milestonedevent",
          "href": "/graphql/reference/objects#milestonedevent"
        },
        {
          "name": "MovedColumnsInProjectEvent",
          "id": "movedcolumnsinprojectevent",
          "href": "/graphql/reference/objects#movedcolumnsinprojectevent"
        },
        {
          "name": "PinnedEvent",
          "id": "pinnedevent",
          "href": "/graphql/reference/objects#pinnedevent"
        },
        {
          "name": "ReferencedEvent",
          "id": "referencedevent",
          "href": "/graphql/reference/objects#referencedevent"
        },
        {
          "name": "RemovedFromProjectEvent",
          "id": "removedfromprojectevent",
          "href": "/graphql/reference/objects#removedfromprojectevent"
        },
        {
          "name": "RenamedTitleEvent",
          "id": "renamedtitleevent",
          "href": "/graphql/reference/objects#renamedtitleevent"
        },
        {
          "name": "ReopenedEvent",
          "id": "reopenedevent",
          "href": "/graphql/reference/objects#reopenedevent"
        },
        {
          "name": "SubscribedEvent",
          "id": "subscribedevent",
          "href": "/graphql/reference/objects#subscribedevent"
        },
        {
          "name": "TransferredEvent",
          "id": "transferredevent",
          "href": "/graphql/reference/objects#transferredevent"
        },
        {
          "name": "UnassignedEvent",
          "id": "unassignedevent",
          "href": "/graphql/reference/objects#unassignedevent"
        },
        {
          "name": "UnlabeledEvent",
          "id": "unlabeledevent",
          "href": "/graphql/reference/objects#unlabeledevent"
        },
        {
          "name": "UnlockedEvent",
          "id": "unlockedevent",
          "href": "/graphql/reference/objects#unlockedevent"
        },
        {
          "name": "UnmarkedAsDuplicateEvent",
          "id": "unmarkedasduplicateevent",
          "href": "/graphql/reference/objects#unmarkedasduplicateevent"
        },
        {
          "name": "UnpinnedEvent",
          "id": "unpinnedevent",
          "href": "/graphql/reference/objects#unpinnedevent"
        },
        {
          "name": "UnsubscribedEvent",
          "id": "unsubscribedevent",
          "href": "/graphql/reference/objects#unsubscribedevent"
        },
        {
          "name": "UserBlockedEvent",
          "id": "userblockedevent",
          "href": "/graphql/reference/objects#userblockedevent"
        }
      ]
    },
    {
      "name": "MilestoneItem",
      "kind": "unions",
      "id": "milestoneitem",
      "href": "/graphql/reference/unions#milestoneitem",
      "description": "<p>Types that can be inside a Milestone.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "OrgRestoreMemberAuditEntryMembership",
      "kind": "unions",
      "id": "orgrestorememberauditentrymembership",
      "href": "/graphql/reference/unions#orgrestorememberauditentrymembership",
      "description": "<p>Types of memberships that can be restored for an Organization member.</p>",
      "possibleTypes": [
        {
          "name": "OrgRestoreMemberMembershipOrganizationAuditEntryData",
          "id": "orgrestoremembermembershiporganizationauditentrydata",
          "href": "/graphql/reference/objects#orgrestoremembermembershiporganizationauditentrydata"
        },
        {
          "name": "OrgRestoreMemberMembershipRepositoryAuditEntryData",
          "id": "orgrestoremembermembershiprepositoryauditentrydata",
          "href": "/graphql/reference/objects#orgrestoremembermembershiprepositoryauditentrydata"
        },
        {
          "name": "OrgRestoreMemberMembershipTeamAuditEntryData",
          "id": "orgrestoremembermembershipteamauditentrydata",
          "href": "/graphql/reference/objects#orgrestoremembermembershipteamauditentrydata"
        }
      ]
    },
    {
      "name": "OrganizationAuditEntry",
      "kind": "unions",
      "id": "organizationauditentry",
      "href": "/graphql/reference/unions#organizationauditentry",
      "description": "<p>An audit entry in an organization audit log.</p>",
      "possibleTypes": [
        {
          "name": "MembersCanDeleteReposClearAuditEntry",
          "id": "memberscandeletereposclearauditentry",
          "href": "/graphql/reference/objects#memberscandeletereposclearauditentry"
        },
        {
          "name": "MembersCanDeleteReposDisableAuditEntry",
          "id": "memberscandeletereposdisableauditentry",
          "href": "/graphql/reference/objects#memberscandeletereposdisableauditentry"
        },
        {
          "name": "MembersCanDeleteReposEnableAuditEntry",
          "id": "memberscandeletereposenableauditentry",
          "href": "/graphql/reference/objects#memberscandeletereposenableauditentry"
        },
        {
          "name": "OauthApplicationCreateAuditEntry",
          "id": "oauthapplicationcreateauditentry",
          "href": "/graphql/reference/objects#oauthapplicationcreateauditentry"
        },
        {
          "name": "OrgAddBillingManagerAuditEntry",
          "id": "orgaddbillingmanagerauditentry",
          "href": "/graphql/reference/objects#orgaddbillingmanagerauditentry"
        },
        {
          "name": "OrgAddMemberAuditEntry",
          "id": "orgaddmemberauditentry",
          "href": "/graphql/reference/objects#orgaddmemberauditentry"
        },
        {
          "name": "OrgBlockUserAuditEntry",
          "id": "orgblockuserauditentry",
          "href": "/graphql/reference/objects#orgblockuserauditentry"
        },
        {
          "name": "OrgConfigDisableCollaboratorsOnlyAuditEntry",
          "id": "orgconfigdisablecollaboratorsonlyauditentry",
          "href": "/graphql/reference/objects#orgconfigdisablecollaboratorsonlyauditentry"
        },
        {
          "name": "OrgConfigEnableCollaboratorsOnlyAuditEntry",
          "id": "orgconfigenablecollaboratorsonlyauditentry",
          "href": "/graphql/reference/objects#orgconfigenablecollaboratorsonlyauditentry"
        },
        {
          "name": "OrgCreateAuditEntry",
          "id": "orgcreateauditentry",
          "href": "/graphql/reference/objects#orgcreateauditentry"
        },
        {
          "name": "OrgDisableOauthAppRestrictionsAuditEntry",
          "id": "orgdisableoauthapprestrictionsauditentry",
          "href": "/graphql/reference/objects#orgdisableoauthapprestrictionsauditentry"
        },
        {
          "name": "OrgDisableSamlAuditEntry",
          "id": "orgdisablesamlauditentry",
          "href": "/graphql/reference/objects#orgdisablesamlauditentry"
        },
        {
          "name": "OrgDisableTwoFactorRequirementAuditEntry",
          "id": "orgdisabletwofactorrequirementauditentry",
          "href": "/graphql/reference/objects#orgdisabletwofactorrequirementauditentry"
        },
        {
          "name": "OrgEnableOauthAppRestrictionsAuditEntry",
          "id": "orgenableoauthapprestrictionsauditentry",
          "href": "/graphql/reference/objects#orgenableoauthapprestrictionsauditentry"
        },
        {
          "name": "OrgEnableSamlAuditEntry",
          "id": "orgenablesamlauditentry",
          "href": "/graphql/reference/objects#orgenablesamlauditentry"
        },
        {
          "name": "OrgEnableTwoFactorRequirementAuditEntry",
          "id": "orgenabletwofactorrequirementauditentry",
          "href": "/graphql/reference/objects#orgenabletwofactorrequirementauditentry"
        },
        {
          "name": "OrgInviteMemberAuditEntry",
          "id": "orginvitememberauditentry",
          "href": "/graphql/reference/objects#orginvitememberauditentry"
        },
        {
          "name": "OrgInviteToBusinessAuditEntry",
          "id": "orginvitetobusinessauditentry",
          "href": "/graphql/reference/objects#orginvitetobusinessauditentry"
        },
        {
          "name": "OrgOauthAppAccessApprovedAuditEntry",
          "id": "orgoauthappaccessapprovedauditentry",
          "href": "/graphql/reference/objects#orgoauthappaccessapprovedauditentry"
        },
        {
          "name": "OrgOauthAppAccessDeniedAuditEntry",
          "id": "orgoauthappaccessdeniedauditentry",
          "href": "/graphql/reference/objects#orgoauthappaccessdeniedauditentry"
        },
        {
          "name": "OrgOauthAppAccessRequestedAuditEntry",
          "id": "orgoauthappaccessrequestedauditentry",
          "href": "/graphql/reference/objects#orgoauthappaccessrequestedauditentry"
        },
        {
          "name": "OrgRemoveBillingManagerAuditEntry",
          "id": "orgremovebillingmanagerauditentry",
          "href": "/graphql/reference/objects#orgremovebillingmanagerauditentry"
        },
        {
          "name": "OrgRemoveMemberAuditEntry",
          "id": "orgremovememberauditentry",
          "href": "/graphql/reference/objects#orgremovememberauditentry"
        },
        {
          "name": "OrgRemoveOutsideCollaboratorAuditEntry",
          "id": "orgremoveoutsidecollaboratorauditentry",
          "href": "/graphql/reference/objects#orgremoveoutsidecollaboratorauditentry"
        },
        {
          "name": "OrgRestoreMemberAuditEntry",
          "id": "orgrestorememberauditentry",
          "href": "/graphql/reference/objects#orgrestorememberauditentry"
        },
        {
          "name": "OrgUnblockUserAuditEntry",
          "id": "orgunblockuserauditentry",
          "href": "/graphql/reference/objects#orgunblockuserauditentry"
        },
        {
          "name": "OrgUpdateDefaultRepositoryPermissionAuditEntry",
          "id": "orgupdatedefaultrepositorypermissionauditentry",
          "href": "/graphql/reference/objects#orgupdatedefaultrepositorypermissionauditentry"
        },
        {
          "name": "OrgUpdateMemberAuditEntry",
          "id": "orgupdatememberauditentry",
          "href": "/graphql/reference/objects#orgupdatememberauditentry"
        },
        {
          "name": "OrgUpdateMemberRepositoryCreationPermissionAuditEntry",
          "id": "orgupdatememberrepositorycreationpermissionauditentry",
          "href": "/graphql/reference/objects#orgupdatememberrepositorycreationpermissionauditentry"
        },
        {
          "name": "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry",
          "id": "orgupdatememberrepositoryinvitationpermissionauditentry",
          "href": "/graphql/reference/objects#orgupdatememberrepositoryinvitationpermissionauditentry"
        },
        {
          "name": "PrivateRepositoryForkingDisableAuditEntry",
          "id": "privaterepositoryforkingdisableauditentry",
          "href": "/graphql/reference/objects#privaterepositoryforkingdisableauditentry"
        },
        {
          "name": "PrivateRepositoryForkingEnableAuditEntry",
          "id": "privaterepositoryforkingenableauditentry",
          "href": "/graphql/reference/objects#privaterepositoryforkingenableauditentry"
        },
        {
          "name": "RepoAccessAuditEntry",
          "id": "repoaccessauditentry",
          "href": "/graphql/reference/objects#repoaccessauditentry"
        },
        {
          "name": "RepoAddMemberAuditEntry",
          "id": "repoaddmemberauditentry",
          "href": "/graphql/reference/objects#repoaddmemberauditentry"
        },
        {
          "name": "RepoAddTopicAuditEntry",
          "id": "repoaddtopicauditentry",
          "href": "/graphql/reference/objects#repoaddtopicauditentry"
        },
        {
          "name": "RepoArchivedAuditEntry",
          "id": "repoarchivedauditentry",
          "href": "/graphql/reference/objects#repoarchivedauditentry"
        },
        {
          "name": "RepoChangeMergeSettingAuditEntry",
          "id": "repochangemergesettingauditentry",
          "href": "/graphql/reference/objects#repochangemergesettingauditentry"
        },
        {
          "name": "RepoConfigDisableAnonymousGitAccessAuditEntry",
          "id": "repoconfigdisableanonymousgitaccessauditentry",
          "href": "/graphql/reference/objects#repoconfigdisableanonymousgitaccessauditentry"
        },
        {
          "name": "RepoConfigDisableCollaboratorsOnlyAuditEntry",
          "id": "repoconfigdisablecollaboratorsonlyauditentry",
          "href": "/graphql/reference/objects#repoconfigdisablecollaboratorsonlyauditentry"
        },
        {
          "name": "RepoConfigDisableContributorsOnlyAuditEntry",
          "id": "repoconfigdisablecontributorsonlyauditentry",
          "href": "/graphql/reference/objects#repoconfigdisablecontributorsonlyauditentry"
        },
        {
          "name": "RepoConfigDisableSockpuppetDisallowedAuditEntry",
          "id": "repoconfigdisablesockpuppetdisallowedauditentry",
          "href": "/graphql/reference/objects#repoconfigdisablesockpuppetdisallowedauditentry"
        },
        {
          "name": "RepoConfigEnableAnonymousGitAccessAuditEntry",
          "id": "repoconfigenableanonymousgitaccessauditentry",
          "href": "/graphql/reference/objects#repoconfigenableanonymousgitaccessauditentry"
        },
        {
          "name": "RepoConfigEnableCollaboratorsOnlyAuditEntry",
          "id": "repoconfigenablecollaboratorsonlyauditentry",
          "href": "/graphql/reference/objects#repoconfigenablecollaboratorsonlyauditentry"
        },
        {
          "name": "RepoConfigEnableContributorsOnlyAuditEntry",
          "id": "repoconfigenablecontributorsonlyauditentry",
          "href": "/graphql/reference/objects#repoconfigenablecontributorsonlyauditentry"
        },
        {
          "name": "RepoConfigEnableSockpuppetDisallowedAuditEntry",
          "id": "repoconfigenablesockpuppetdisallowedauditentry",
          "href": "/graphql/reference/objects#repoconfigenablesockpuppetdisallowedauditentry"
        },
        {
          "name": "RepoConfigLockAnonymousGitAccessAuditEntry",
          "id": "repoconfiglockanonymousgitaccessauditentry",
          "href": "/graphql/reference/objects#repoconfiglockanonymousgitaccessauditentry"
        },
        {
          "name": "RepoConfigUnlockAnonymousGitAccessAuditEntry",
          "id": "repoconfigunlockanonymousgitaccessauditentry",
          "href": "/graphql/reference/objects#repoconfigunlockanonymousgitaccessauditentry"
        },
        {
          "name": "RepoCreateAuditEntry",
          "id": "repocreateauditentry",
          "href": "/graphql/reference/objects#repocreateauditentry"
        },
        {
          "name": "RepoDestroyAuditEntry",
          "id": "repodestroyauditentry",
          "href": "/graphql/reference/objects#repodestroyauditentry"
        },
        {
          "name": "RepoRemoveMemberAuditEntry",
          "id": "reporemovememberauditentry",
          "href": "/graphql/reference/objects#reporemovememberauditentry"
        },
        {
          "name": "RepoRemoveTopicAuditEntry",
          "id": "reporemovetopicauditentry",
          "href": "/graphql/reference/objects#reporemovetopicauditentry"
        },
        {
          "name": "RepositoryVisibilityChangeDisableAuditEntry",
          "id": "repositoryvisibilitychangedisableauditentry",
          "href": "/graphql/reference/objects#repositoryvisibilitychangedisableauditentry"
        },
        {
          "name": "RepositoryVisibilityChangeEnableAuditEntry",
          "id": "repositoryvisibilitychangeenableauditentry",
          "href": "/graphql/reference/objects#repositoryvisibilitychangeenableauditentry"
        },
        {
          "name": "TeamAddMemberAuditEntry",
          "id": "teamaddmemberauditentry",
          "href": "/graphql/reference/objects#teamaddmemberauditentry"
        },
        {
          "name": "TeamAddRepositoryAuditEntry",
          "id": "teamaddrepositoryauditentry",
          "href": "/graphql/reference/objects#teamaddrepositoryauditentry"
        },
        {
          "name": "TeamChangeParentTeamAuditEntry",
          "id": "teamchangeparentteamauditentry",
          "href": "/graphql/reference/objects#teamchangeparentteamauditentry"
        },
        {
          "name": "TeamRemoveMemberAuditEntry",
          "id": "teamremovememberauditentry",
          "href": "/graphql/reference/objects#teamremovememberauditentry"
        },
        {
          "name": "TeamRemoveRepositoryAuditEntry",
          "id": "teamremoverepositoryauditentry",
          "href": "/graphql/reference/objects#teamremoverepositoryauditentry"
        }
      ]
    },
    {
      "name": "OrganizationOrUser",
      "kind": "unions",
      "id": "organizationoruser",
      "href": "/graphql/reference/unions#organizationoruser",
      "description": "<p>Used for argument of CreateProjectV2 mutation.</p>",
      "possibleTypes": [
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "PermissionGranter",
      "kind": "unions",
      "id": "permissiongranter",
      "href": "/graphql/reference/unions#permissiongranter",
      "description": "<p>Types that can grant permissions on a repository to a user.</p>",
      "possibleTypes": [
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "Repository",
          "id": "repository",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        }
      ]
    },
    {
      "name": "PinnableItem",
      "kind": "unions",
      "id": "pinnableitem",
      "href": "/graphql/reference/unions#pinnableitem",
      "description": "<p>Types that can be pinned to a profile page.</p>",
      "possibleTypes": [
        {
          "name": "Gist",
          "id": "gist",
          "href": "/graphql/reference/objects#gist"
        },
        {
          "name": "Repository",
          "id": "repository",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "ProjectCardItem",
      "kind": "unions",
      "id": "projectcarditem",
      "href": "/graphql/reference/unions#projectcarditem",
      "description": "<p>Types that can be inside Project Cards.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "ProjectV2Actor",
      "kind": "unions",
      "id": "projectv2actor",
      "href": "/graphql/reference/unions#projectv2actor",
      "description": "<p>Possible collaborators for a project.</p>",
      "possibleTypes": [
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ProjectV2FieldConfiguration",
      "kind": "unions",
      "id": "projectv2fieldconfiguration",
      "href": "/graphql/reference/unions#projectv2fieldconfiguration",
      "description": "<p>Configurations for project fields.</p>",
      "possibleTypes": [
        {
          "name": "ProjectV2Field",
          "id": "projectv2field",
          "href": "/graphql/reference/objects#projectv2field"
        },
        {
          "name": "ProjectV2IterationField",
          "id": "projectv2iterationfield",
          "href": "/graphql/reference/objects#projectv2iterationfield"
        },
        {
          "name": "ProjectV2SingleSelectField",
          "id": "projectv2singleselectfield",
          "href": "/graphql/reference/objects#projectv2singleselectfield"
        }
      ]
    },
    {
      "name": "ProjectV2ItemContent",
      "kind": "unions",
      "id": "projectv2itemcontent",
      "href": "/graphql/reference/unions#projectv2itemcontent",
      "description": "<p>Types that can be inside Project Items.</p>",
      "possibleTypes": [
        {
          "name": "DraftIssue",
          "id": "draftissue",
          "href": "/graphql/reference/objects#draftissue"
        },
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldValue",
      "kind": "unions",
      "id": "projectv2itemfieldvalue",
      "href": "/graphql/reference/unions#projectv2itemfieldvalue",
      "description": "<p>Project field values.</p>",
      "possibleTypes": [
        {
          "name": "ProjectV2ItemFieldDateValue",
          "id": "projectv2itemfielddatevalue",
          "href": "/graphql/reference/objects#projectv2itemfielddatevalue"
        },
        {
          "name": "ProjectV2ItemFieldIterationValue",
          "id": "projectv2itemfielditerationvalue",
          "href": "/graphql/reference/objects#projectv2itemfielditerationvalue"
        },
        {
          "name": "ProjectV2ItemFieldLabelValue",
          "id": "projectv2itemfieldlabelvalue",
          "href": "/graphql/reference/objects#projectv2itemfieldlabelvalue"
        },
        {
          "name": "ProjectV2ItemFieldMilestoneValue",
          "id": "projectv2itemfieldmilestonevalue",
          "href": "/graphql/reference/objects#projectv2itemfieldmilestonevalue"
        },
        {
          "name": "ProjectV2ItemFieldNumberValue",
          "id": "projectv2itemfieldnumbervalue",
          "href": "/graphql/reference/objects#projectv2itemfieldnumbervalue"
        },
        {
          "name": "ProjectV2ItemFieldPullRequestValue",
          "id": "projectv2itemfieldpullrequestvalue",
          "href": "/graphql/reference/objects#projectv2itemfieldpullrequestvalue"
        },
        {
          "name": "ProjectV2ItemFieldRepositoryValue",
          "id": "projectv2itemfieldrepositoryvalue",
          "href": "/graphql/reference/objects#projectv2itemfieldrepositoryvalue"
        },
        {
          "name": "ProjectV2ItemFieldReviewerValue",
          "id": "projectv2itemfieldreviewervalue",
          "href": "/graphql/reference/objects#projectv2itemfieldreviewervalue"
        },
        {
          "name": "ProjectV2ItemFieldSingleSelectValue",
          "id": "projectv2itemfieldsingleselectvalue",
          "href": "/graphql/reference/objects#projectv2itemfieldsingleselectvalue"
        },
        {
          "name": "ProjectV2ItemFieldTextValue",
          "id": "projectv2itemfieldtextvalue",
          "href": "/graphql/reference/objects#projectv2itemfieldtextvalue"
        },
        {
          "name": "ProjectV2ItemFieldUserValue",
          "id": "projectv2itemfielduservalue",
          "href": "/graphql/reference/objects#projectv2itemfielduservalue"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItem",
      "kind": "unions",
      "id": "pullrequesttimelineitem",
      "href": "/graphql/reference/unions#pullrequesttimelineitem",
      "description": "<p>An item in a pull request timeline.</p>",
      "possibleTypes": [
        {
          "name": "AssignedEvent",
          "id": "assignedevent",
          "href": "/graphql/reference/objects#assignedevent"
        },
        {
          "name": "BaseRefDeletedEvent",
          "id": "baserefdeletedevent",
          "href": "/graphql/reference/objects#baserefdeletedevent"
        },
        {
          "name": "BaseRefForcePushedEvent",
          "id": "baserefforcepushedevent",
          "href": "/graphql/reference/objects#baserefforcepushedevent"
        },
        {
          "name": "ClosedEvent",
          "id": "closedevent",
          "href": "/graphql/reference/objects#closedevent"
        },
        {
          "name": "Commit",
          "id": "commit",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "CommitCommentThread",
          "id": "commitcommentthread",
          "href": "/graphql/reference/objects#commitcommentthread"
        },
        {
          "name": "CrossReferencedEvent",
          "id": "crossreferencedevent",
          "href": "/graphql/reference/objects#crossreferencedevent"
        },
        {
          "name": "DemilestonedEvent",
          "id": "demilestonedevent",
          "href": "/graphql/reference/objects#demilestonedevent"
        },
        {
          "name": "DeployedEvent",
          "id": "deployedevent",
          "href": "/graphql/reference/objects#deployedevent"
        },
        {
          "name": "DeploymentEnvironmentChangedEvent",
          "id": "deploymentenvironmentchangedevent",
          "href": "/graphql/reference/objects#deploymentenvironmentchangedevent"
        },
        {
          "name": "HeadRefDeletedEvent",
          "id": "headrefdeletedevent",
          "href": "/graphql/reference/objects#headrefdeletedevent"
        },
        {
          "name": "HeadRefForcePushedEvent",
          "id": "headrefforcepushedevent",
          "href": "/graphql/reference/objects#headrefforcepushedevent"
        },
        {
          "name": "HeadRefRestoredEvent",
          "id": "headrefrestoredevent",
          "href": "/graphql/reference/objects#headrefrestoredevent"
        },
        {
          "name": "IssueComment",
          "id": "issuecomment",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "LabeledEvent",
          "id": "labeledevent",
          "href": "/graphql/reference/objects#labeledevent"
        },
        {
          "name": "LockedEvent",
          "id": "lockedevent",
          "href": "/graphql/reference/objects#lockedevent"
        },
        {
          "name": "MergedEvent",
          "id": "mergedevent",
          "href": "/graphql/reference/objects#mergedevent"
        },
        {
          "name": "MilestonedEvent",
          "id": "milestonedevent",
          "href": "/graphql/reference/objects#milestonedevent"
        },
        {
          "name": "PullRequestReview",
          "id": "pullrequestreview",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "href": "/graphql/reference/objects#pullrequestreviewcomment"
        },
        {
          "name": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "href": "/graphql/reference/objects#pullrequestreviewthread"
        },
        {
          "name": "ReferencedEvent",
          "id": "referencedevent",
          "href": "/graphql/reference/objects#referencedevent"
        },
        {
          "name": "RenamedTitleEvent",
          "id": "renamedtitleevent",
          "href": "/graphql/reference/objects#renamedtitleevent"
        },
        {
          "name": "ReopenedEvent",
          "id": "reopenedevent",
          "href": "/graphql/reference/objects#reopenedevent"
        },
        {
          "name": "ReviewDismissedEvent",
          "id": "reviewdismissedevent",
          "href": "/graphql/reference/objects#reviewdismissedevent"
        },
        {
          "name": "ReviewRequestRemovedEvent",
          "id": "reviewrequestremovedevent",
          "href": "/graphql/reference/objects#reviewrequestremovedevent"
        },
        {
          "name": "ReviewRequestedEvent",
          "id": "reviewrequestedevent",
          "href": "/graphql/reference/objects#reviewrequestedevent"
        },
        {
          "name": "SubscribedEvent",
          "id": "subscribedevent",
          "href": "/graphql/reference/objects#subscribedevent"
        },
        {
          "name": "UnassignedEvent",
          "id": "unassignedevent",
          "href": "/graphql/reference/objects#unassignedevent"
        },
        {
          "name": "UnlabeledEvent",
          "id": "unlabeledevent",
          "href": "/graphql/reference/objects#unlabeledevent"
        },
        {
          "name": "UnlockedEvent",
          "id": "unlockedevent",
          "href": "/graphql/reference/objects#unlockedevent"
        },
        {
          "name": "UnsubscribedEvent",
          "id": "unsubscribedevent",
          "href": "/graphql/reference/objects#unsubscribedevent"
        },
        {
          "name": "UserBlockedEvent",
          "id": "userblockedevent",
          "href": "/graphql/reference/objects#userblockedevent"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItems",
      "kind": "unions",
      "id": "pullrequesttimelineitems",
      "href": "/graphql/reference/unions#pullrequesttimelineitems",
      "description": "<p>An item in a pull request timeline.</p>",
      "possibleTypes": [
        {
          "name": "AddedToProjectEvent",
          "id": "addedtoprojectevent",
          "href": "/graphql/reference/objects#addedtoprojectevent"
        },
        {
          "name": "AssignedEvent",
          "id": "assignedevent",
          "href": "/graphql/reference/objects#assignedevent"
        },
        {
          "name": "AutoMergeDisabledEvent",
          "id": "automergedisabledevent",
          "href": "/graphql/reference/objects#automergedisabledevent"
        },
        {
          "name": "AutoMergeEnabledEvent",
          "id": "automergeenabledevent",
          "href": "/graphql/reference/objects#automergeenabledevent"
        },
        {
          "name": "AutoRebaseEnabledEvent",
          "id": "autorebaseenabledevent",
          "href": "/graphql/reference/objects#autorebaseenabledevent"
        },
        {
          "name": "AutoSquashEnabledEvent",
          "id": "autosquashenabledevent",
          "href": "/graphql/reference/objects#autosquashenabledevent"
        },
        {
          "name": "AutomaticBaseChangeFailedEvent",
          "id": "automaticbasechangefailedevent",
          "href": "/graphql/reference/objects#automaticbasechangefailedevent"
        },
        {
          "name": "AutomaticBaseChangeSucceededEvent",
          "id": "automaticbasechangesucceededevent",
          "href": "/graphql/reference/objects#automaticbasechangesucceededevent"
        },
        {
          "name": "BaseRefChangedEvent",
          "id": "baserefchangedevent",
          "href": "/graphql/reference/objects#baserefchangedevent"
        },
        {
          "name": "BaseRefDeletedEvent",
          "id": "baserefdeletedevent",
          "href": "/graphql/reference/objects#baserefdeletedevent"
        },
        {
          "name": "BaseRefForcePushedEvent",
          "id": "baserefforcepushedevent",
          "href": "/graphql/reference/objects#baserefforcepushedevent"
        },
        {
          "name": "ClosedEvent",
          "id": "closedevent",
          "href": "/graphql/reference/objects#closedevent"
        },
        {
          "name": "CommentDeletedEvent",
          "id": "commentdeletedevent",
          "href": "/graphql/reference/objects#commentdeletedevent"
        },
        {
          "name": "ConnectedEvent",
          "id": "connectedevent",
          "href": "/graphql/reference/objects#connectedevent"
        },
        {
          "name": "ConvertToDraftEvent",
          "id": "converttodraftevent",
          "href": "/graphql/reference/objects#converttodraftevent"
        },
        {
          "name": "ConvertedNoteToIssueEvent",
          "id": "convertednotetoissueevent",
          "href": "/graphql/reference/objects#convertednotetoissueevent"
        },
        {
          "name": "ConvertedToDiscussionEvent",
          "id": "convertedtodiscussionevent",
          "href": "/graphql/reference/objects#convertedtodiscussionevent"
        },
        {
          "name": "CrossReferencedEvent",
          "id": "crossreferencedevent",
          "href": "/graphql/reference/objects#crossreferencedevent"
        },
        {
          "name": "DemilestonedEvent",
          "id": "demilestonedevent",
          "href": "/graphql/reference/objects#demilestonedevent"
        },
        {
          "name": "DeployedEvent",
          "id": "deployedevent",
          "href": "/graphql/reference/objects#deployedevent"
        },
        {
          "name": "DeploymentEnvironmentChangedEvent",
          "id": "deploymentenvironmentchangedevent",
          "href": "/graphql/reference/objects#deploymentenvironmentchangedevent"
        },
        {
          "name": "DisconnectedEvent",
          "id": "disconnectedevent",
          "href": "/graphql/reference/objects#disconnectedevent"
        },
        {
          "name": "HeadRefDeletedEvent",
          "id": "headrefdeletedevent",
          "href": "/graphql/reference/objects#headrefdeletedevent"
        },
        {
          "name": "HeadRefForcePushedEvent",
          "id": "headrefforcepushedevent",
          "href": "/graphql/reference/objects#headrefforcepushedevent"
        },
        {
          "name": "HeadRefRestoredEvent",
          "id": "headrefrestoredevent",
          "href": "/graphql/reference/objects#headrefrestoredevent"
        },
        {
          "name": "IssueComment",
          "id": "issuecomment",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "LabeledEvent",
          "id": "labeledevent",
          "href": "/graphql/reference/objects#labeledevent"
        },
        {
          "name": "LockedEvent",
          "id": "lockedevent",
          "href": "/graphql/reference/objects#lockedevent"
        },
        {
          "name": "MarkedAsDuplicateEvent",
          "id": "markedasduplicateevent",
          "href": "/graphql/reference/objects#markedasduplicateevent"
        },
        {
          "name": "MentionedEvent",
          "id": "mentionedevent",
          "href": "/graphql/reference/objects#mentionedevent"
        },
        {
          "name": "MergedEvent",
          "id": "mergedevent",
          "href": "/graphql/reference/objects#mergedevent"
        },
        {
          "name": "MilestonedEvent",
          "id": "milestonedevent",
          "href": "/graphql/reference/objects#milestonedevent"
        },
        {
          "name": "MovedColumnsInProjectEvent",
          "id": "movedcolumnsinprojectevent",
          "href": "/graphql/reference/objects#movedcolumnsinprojectevent"
        },
        {
          "name": "PinnedEvent",
          "id": "pinnedevent",
          "href": "/graphql/reference/objects#pinnedevent"
        },
        {
          "name": "PullRequestCommit",
          "id": "pullrequestcommit",
          "href": "/graphql/reference/objects#pullrequestcommit"
        },
        {
          "name": "PullRequestCommitCommentThread",
          "id": "pullrequestcommitcommentthread",
          "href": "/graphql/reference/objects#pullrequestcommitcommentthread"
        },
        {
          "name": "PullRequestReview",
          "id": "pullrequestreview",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "href": "/graphql/reference/objects#pullrequestreviewthread"
        },
        {
          "name": "PullRequestRevisionMarker",
          "id": "pullrequestrevisionmarker",
          "href": "/graphql/reference/objects#pullrequestrevisionmarker"
        },
        {
          "name": "ReadyForReviewEvent",
          "id": "readyforreviewevent",
          "href": "/graphql/reference/objects#readyforreviewevent"
        },
        {
          "name": "ReferencedEvent",
          "id": "referencedevent",
          "href": "/graphql/reference/objects#referencedevent"
        },
        {
          "name": "RemovedFromProjectEvent",
          "id": "removedfromprojectevent",
          "href": "/graphql/reference/objects#removedfromprojectevent"
        },
        {
          "name": "RenamedTitleEvent",
          "id": "renamedtitleevent",
          "href": "/graphql/reference/objects#renamedtitleevent"
        },
        {
          "name": "ReopenedEvent",
          "id": "reopenedevent",
          "href": "/graphql/reference/objects#reopenedevent"
        },
        {
          "name": "ReviewDismissedEvent",
          "id": "reviewdismissedevent",
          "href": "/graphql/reference/objects#reviewdismissedevent"
        },
        {
          "name": "ReviewRequestRemovedEvent",
          "id": "reviewrequestremovedevent",
          "href": "/graphql/reference/objects#reviewrequestremovedevent"
        },
        {
          "name": "ReviewRequestedEvent",
          "id": "reviewrequestedevent",
          "href": "/graphql/reference/objects#reviewrequestedevent"
        },
        {
          "name": "SubscribedEvent",
          "id": "subscribedevent",
          "href": "/graphql/reference/objects#subscribedevent"
        },
        {
          "name": "TransferredEvent",
          "id": "transferredevent",
          "href": "/graphql/reference/objects#transferredevent"
        },
        {
          "name": "UnassignedEvent",
          "id": "unassignedevent",
          "href": "/graphql/reference/objects#unassignedevent"
        },
        {
          "name": "UnlabeledEvent",
          "id": "unlabeledevent",
          "href": "/graphql/reference/objects#unlabeledevent"
        },
        {
          "name": "UnlockedEvent",
          "id": "unlockedevent",
          "href": "/graphql/reference/objects#unlockedevent"
        },
        {
          "name": "UnmarkedAsDuplicateEvent",
          "id": "unmarkedasduplicateevent",
          "href": "/graphql/reference/objects#unmarkedasduplicateevent"
        },
        {
          "name": "UnpinnedEvent",
          "id": "unpinnedevent",
          "href": "/graphql/reference/objects#unpinnedevent"
        },
        {
          "name": "UnsubscribedEvent",
          "id": "unsubscribedevent",
          "href": "/graphql/reference/objects#unsubscribedevent"
        },
        {
          "name": "UserBlockedEvent",
          "id": "userblockedevent",
          "href": "/graphql/reference/objects#userblockedevent"
        }
      ]
    },
    {
      "name": "PushAllowanceActor",
      "kind": "unions",
      "id": "pushallowanceactor",
      "href": "/graphql/reference/unions#pushallowanceactor",
      "description": "<p>Types that can be an actor.</p>",
      "possibleTypes": [
        {
          "name": "App",
          "id": "app",
          "href": "/graphql/reference/objects#app"
        },
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Reactor",
      "kind": "unions",
      "id": "reactor",
      "href": "/graphql/reference/unions#reactor",
      "description": "<p>Types that can be assigned to reactions.</p>",
      "possibleTypes": [
        {
          "name": "Bot",
          "id": "bot",
          "href": "/graphql/reference/objects#bot"
        },
        {
          "name": "Mannequin",
          "id": "mannequin",
          "href": "/graphql/reference/objects#mannequin"
        },
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ReferencedSubject",
      "kind": "unions",
      "id": "referencedsubject",
      "href": "/graphql/reference/unions#referencedsubject",
      "description": "<p>Any referencable object.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "RenamedTitleSubject",
      "kind": "unions",
      "id": "renamedtitlesubject",
      "href": "/graphql/reference/unions#renamedtitlesubject",
      "description": "<p>An object which has a renamable title.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "RequestedReviewer",
      "kind": "unions",
      "id": "requestedreviewer",
      "href": "/graphql/reference/unions#requestedreviewer",
      "description": "<p>Types that can be requested reviewers.</p>",
      "possibleTypes": [
        {
          "name": "Mannequin",
          "id": "mannequin",
          "href": "/graphql/reference/objects#mannequin"
        },
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ReviewDismissalAllowanceActor",
      "kind": "unions",
      "id": "reviewdismissalallowanceactor",
      "href": "/graphql/reference/unions#reviewdismissalallowanceactor",
      "description": "<p>Types that can be an actor.</p>",
      "possibleTypes": [
        {
          "name": "App",
          "id": "app",
          "href": "/graphql/reference/objects#app"
        },
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "SearchResultItem",
      "kind": "unions",
      "id": "searchresultitem",
      "href": "/graphql/reference/unions#searchresultitem",
      "description": "<p>The results of a search.</p>",
      "possibleTypes": [
        {
          "name": "App",
          "id": "app",
          "href": "/graphql/reference/objects#app"
        },
        {
          "name": "Discussion",
          "id": "discussion",
          "href": "/graphql/reference/objects#discussion"
        },
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "Repository",
          "id": "repository",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "StatusCheckRollupContext",
      "kind": "unions",
      "id": "statuscheckrollupcontext",
      "href": "/graphql/reference/unions#statuscheckrollupcontext",
      "description": "<p>Types that can be inside a StatusCheckRollup context.</p>",
      "possibleTypes": [
        {
          "name": "CheckRun",
          "id": "checkrun",
          "href": "/graphql/reference/objects#checkrun"
        },
        {
          "name": "StatusContext",
          "id": "statuscontext",
          "href": "/graphql/reference/objects#statuscontext"
        }
      ]
    },
    {
      "name": "VerifiableDomainOwner",
      "kind": "unions",
      "id": "verifiabledomainowner",
      "href": "/graphql/reference/unions#verifiabledomainowner",
      "description": "<p>Types that can own a verifiable domain.</p>",
      "possibleTypes": [
        {
          "name": "Enterprise",
          "id": "enterprise",
          "href": "/graphql/reference/objects#enterprise"
        },
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        }
      ]
    }
  ],
  "inputObjects": [
    {
      "name": "AbortQueuedMigrationsInput",
      "kind": "inputObjects",
      "id": "abortqueuedmigrationsinput",
      "href": "/graphql/reference/input-objects#abortqueuedmigrationsinput",
      "description": "<p>Autogenerated input type of AbortQueuedMigrations.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the organization that is running the migrations.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddAssigneesToAssignableInput",
      "kind": "inputObjects",
      "id": "addassigneestoassignableinput",
      "href": "/graphql/reference/input-objects#addassigneestoassignableinput",
      "description": "<p>Autogenerated input type of AddAssigneesToAssignable.</p>",
      "inputFields": [
        {
          "name": "assignableId",
          "description": "<p>The id of the assignable object to add assignees to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "assigneeIds",
          "description": "<p>The id of users to add as assignees.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "AddCommentInput",
      "kind": "inputObjects",
      "id": "addcommentinput",
      "href": "/graphql/reference/input-objects#addcommentinput",
      "description": "<p>Autogenerated input type of AddComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The contents of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddDiscussionCommentInput",
      "kind": "inputObjects",
      "id": "adddiscussioncommentinput",
      "href": "/graphql/reference/input-objects#adddiscussioncommentinput",
      "description": "<p>Autogenerated input type of AddDiscussionComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The contents of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "discussionId",
          "description": "<p>The Node ID of the discussion to comment on.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "replyToId",
          "description": "<p>The Node ID of the discussion comment within this discussion to reply to.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddDiscussionPollVoteInput",
      "kind": "inputObjects",
      "id": "adddiscussionpollvoteinput",
      "href": "/graphql/reference/input-objects#adddiscussionpollvoteinput",
      "description": "<p>Autogenerated input type of AddDiscussionPollVote.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pollOptionId",
          "description": "<p>The Node ID of the discussion poll option to vote for.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddEnterpriseAdminInput",
      "kind": "inputObjects",
      "id": "addenterpriseadmininput",
      "href": "/graphql/reference/input-objects#addenterpriseadmininput",
      "description": "<p>Autogenerated input type of AddEnterpriseAdmin.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise account to which the administrator should be added.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "login",
          "description": "<p>The login of the user to add as an administrator.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "AddEnterpriseOrganizationMemberInput",
      "kind": "inputObjects",
      "id": "addenterpriseorganizationmemberinput",
      "href": "/graphql/reference/input-objects#addenterpriseorganizationmemberinput",
      "description": "<p>Autogenerated input type of AddEnterpriseOrganizationMember.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise which owns the organization.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization the users will be added to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "role",
          "description": "<p>The role to assign the users in the organization.</p>",
          "type": "OrganizationMemberRole",
          "id": "organizationmemberrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationmemberrole"
        },
        {
          "name": "userIds",
          "description": "<p>The IDs of the enterprise members to add.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "AddLabelsToLabelableInput",
      "kind": "inputObjects",
      "id": "addlabelstolabelableinput",
      "href": "/graphql/reference/input-objects#addlabelstolabelableinput",
      "description": "<p>Autogenerated input type of AddLabelsToLabelable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labelIds",
          "description": "<p>The ids of the labels to add.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "labelableId",
          "description": "<p>The id of the labelable object to add labels to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddProjectCardInput",
      "kind": "inputObjects",
      "id": "addprojectcardinput",
      "href": "/graphql/reference/input-objects#addprojectcardinput",
      "description": "<p>Autogenerated input type of AddProjectCard.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "contentId",
          "description": "<p>The content of the card. Must be a member of the ProjectCardItem union.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "note",
          "description": "<p>The note on the card.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectColumnId",
          "description": "<p>The Node ID of the ProjectColumn.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddProjectColumnInput",
      "kind": "inputObjects",
      "id": "addprojectcolumninput",
      "href": "/graphql/reference/input-objects#addprojectcolumninput",
      "description": "<p>Autogenerated input type of AddProjectColumn.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the column.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The Node ID of the project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddProjectV2DraftIssueInput",
      "kind": "inputObjects",
      "id": "addprojectv2draftissueinput",
      "href": "/graphql/reference/input-objects#addprojectv2draftissueinput",
      "description": "<p>Autogenerated input type of AddProjectV2DraftIssue.</p>",
      "inputFields": [
        {
          "name": "assigneeIds",
          "description": "<p>The IDs of the assignees of the draft issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "body",
          "description": "<p>The body of the draft issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to add the draft issue to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the draft issue. A project item can also be created by providing\nthe URL of an Issue or Pull Request if you have access.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "AddProjectV2ItemByIdInput",
      "kind": "inputObjects",
      "id": "addprojectv2itembyidinput",
      "href": "/graphql/reference/input-objects#addprojectv2itembyidinput",
      "description": "<p>Autogenerated input type of AddProjectV2ItemById.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "contentId",
          "description": "<p>The id of the Issue or Pull Request to add.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to add the item to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddPullRequestReviewCommentInput",
      "kind": "inputObjects",
      "id": "addpullrequestreviewcommentinput",
      "href": "/graphql/reference/input-objects#addpullrequestreviewcommentinput",
      "description": "<p>Autogenerated input type of AddPullRequestReviewComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The text of the comment. This field is required</p>\n<p><strong>Upcoming Change on 2023-10-01 UTC</strong>\n<strong>Description:</strong> <code>body</code> will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n<strong>Reason:</strong> We are deprecating the addPullRequestReviewComment mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitOID",
          "description": "<p>The SHA of the commit to comment on.</p>\n<p><strong>Upcoming Change on 2023-10-01 UTC</strong>\n<strong>Description:</strong> <code>commitOID</code> will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n<strong>Reason:</strong> We are deprecating the addPullRequestReviewComment mutation.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "inReplyTo",
          "description": "<p>The comment id to reply to.</p>\n<p><strong>Upcoming Change on 2023-10-01 UTC</strong>\n<strong>Description:</strong> <code>inReplyTo</code> will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n<strong>Reason:</strong> We are deprecating the addPullRequestReviewComment mutation.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "path",
          "description": "<p>The relative path of the file to comment on.</p>\n<p><strong>Upcoming Change on 2023-10-01 UTC</strong>\n<strong>Description:</strong> <code>path</code> will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n<strong>Reason:</strong> We are deprecating the addPullRequestReviewComment mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>The line index in the diff to comment on.</p>\n<p><strong>Upcoming Change on 2023-10-01 UTC</strong>\n<strong>Description:</strong> <code>position</code> will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead\n<strong>Reason:</strong> We are deprecating the addPullRequestReviewComment mutation.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The node ID of the pull request reviewing</p>\n<p><strong>Upcoming Change on 2023-10-01 UTC</strong>\n<strong>Description:</strong> <code>pullRequestId</code> will be removed. use\naddPullRequestReviewThread or addPullRequestReviewThreadReply instead\n<strong>Reason:</strong> We are deprecating the addPullRequestReviewComment mutation.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Node ID of the review to modify.</p>\n<p><strong>Upcoming Change on 2023-10-01 UTC</strong>\n<strong>Description:</strong> <code>pullRequestReviewId</code> will be removed. use\naddPullRequestReviewThread or addPullRequestReviewThreadReply instead\n<strong>Reason:</strong> We are deprecating the addPullRequestReviewComment mutation.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddPullRequestReviewInput",
      "kind": "inputObjects",
      "id": "addpullrequestreviewinput",
      "href": "/graphql/reference/input-objects#addpullrequestreviewinput",
      "description": "<p>Autogenerated input type of AddPullRequestReview.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The contents of the review body comment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "comments",
          "description": "<p>The review line comments.</p>\n<p><strong>Upcoming Change on 2023-10-01 UTC</strong>\n<strong>Description:</strong> <code>comments</code> will be removed. use the <code>threads</code> argument instead\n<strong>Reason:</strong> We are deprecating comment fields that use diff-relative positioning.</p>",
          "type": "[DraftPullRequestReviewComment]",
          "id": "draftpullrequestreviewcomment",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#draftpullrequestreviewcomment"
        },
        {
          "name": "commitOID",
          "description": "<p>The commit OID the review pertains to.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "event",
          "description": "<p>The event to perform on the pull request review.</p>",
          "type": "PullRequestReviewEvent",
          "id": "pullrequestreviewevent",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewevent"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Node ID of the pull request to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "threads",
          "description": "<p>The review line comment threads.</p>",
          "type": "[DraftPullRequestReviewThread]",
          "id": "draftpullrequestreviewthread",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#draftpullrequestreviewthread"
        }
      ]
    },
    {
      "name": "AddPullRequestReviewThreadInput",
      "kind": "inputObjects",
      "id": "addpullrequestreviewthreadinput",
      "href": "/graphql/reference/input-objects#addpullrequestreviewthreadinput",
      "description": "<p>Autogenerated input type of AddPullRequestReviewThread.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>Body of the thread's first comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "line",
          "description": "<p>The line of the blob to which the thread refers, required for line-level\nthreads. The end of the line range for multi-line comments.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "path",
          "description": "<p>Path to the file being commented on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The node ID of the pull request reviewing.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Node ID of the review to modify.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "side",
          "description": "<p>The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range.</p>",
          "type": "DiffSide",
          "id": "diffside",
          "kind": "enums",
          "href": "/graphql/reference/enums#diffside"
        },
        {
          "name": "startLine",
          "description": "<p>The first line of the range to which the comment refers.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startSide",
          "description": "<p>The side of the diff on which the start line resides.</p>",
          "type": "DiffSide",
          "id": "diffside",
          "kind": "enums",
          "href": "/graphql/reference/enums#diffside"
        },
        {
          "name": "subjectType",
          "description": "<p>The level at which the comments in the corresponding thread are targeted, can be a diff line or a file.</p>",
          "type": "PullRequestReviewThreadSubjectType",
          "id": "pullrequestreviewthreadsubjecttype",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewthreadsubjecttype"
        }
      ]
    },
    {
      "name": "AddReactionInput",
      "kind": "inputObjects",
      "id": "addreactioninput",
      "href": "/graphql/reference/input-objects#addreactioninput",
      "description": "<p>Autogenerated input type of AddReaction.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "content",
          "description": "<p>The name of the emoji to react with.</p>",
          "type": "ReactionContent!",
          "id": "reactioncontent",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactioncontent"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddStarInput",
      "kind": "inputObjects",
      "id": "addstarinput",
      "href": "/graphql/reference/input-objects#addstarinput",
      "description": "<p>Autogenerated input type of AddStar.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "starrableId",
          "description": "<p>The Starrable ID to star.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddUpvoteInput",
      "kind": "inputObjects",
      "id": "addupvoteinput",
      "href": "/graphql/reference/input-objects#addupvoteinput",
      "description": "<p>Autogenerated input type of AddUpvote.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the discussion or comment to upvote.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddVerifiableDomainInput",
      "kind": "inputObjects",
      "id": "addverifiabledomaininput",
      "href": "/graphql/reference/input-objects#addverifiabledomaininput",
      "description": "<p>Autogenerated input type of AddVerifiableDomain.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "domain",
          "description": "<p>The URL of the domain.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the owner to add the domain to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ApproveDeploymentsInput",
      "kind": "inputObjects",
      "id": "approvedeploymentsinput",
      "href": "/graphql/reference/input-objects#approvedeploymentsinput",
      "description": "<p>Autogenerated input type of ApproveDeployments.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "comment",
          "description": "<p>Optional comment for approving deployments.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environmentIds",
          "description": "<p>The ids of environments to reject deployments.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "workflowRunId",
          "description": "<p>The node ID of the workflow run containing the pending deployments.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ApproveVerifiableDomainInput",
      "kind": "inputObjects",
      "id": "approveverifiabledomaininput",
      "href": "/graphql/reference/input-objects#approveverifiabledomaininput",
      "description": "<p>Autogenerated input type of ApproveVerifiableDomain.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the verifiable domain to approve.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ArchiveProjectV2ItemInput",
      "kind": "inputObjects",
      "id": "archiveprojectv2iteminput",
      "href": "/graphql/reference/input-objects#archiveprojectv2iteminput",
      "description": "<p>Autogenerated input type of ArchiveProjectV2Item.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "itemId",
          "description": "<p>The ID of the ProjectV2Item to archive.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to archive the item from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ArchiveRepositoryInput",
      "kind": "inputObjects",
      "id": "archiverepositoryinput",
      "href": "/graphql/reference/input-objects#archiverepositoryinput",
      "description": "<p>Autogenerated input type of ArchiveRepository.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the repository to mark as archived.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AuditLogOrder",
      "kind": "inputObjects",
      "id": "auditlogorder",
      "href": "/graphql/reference/input-objects#auditlogorder",
      "description": "<p>Ordering options for Audit Log connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order Audit Logs by.</p>",
          "type": "AuditLogOrderField",
          "id": "auditlogorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#auditlogorderfield"
        }
      ]
    },
    {
      "name": "ChangeUserStatusInput",
      "kind": "inputObjects",
      "id": "changeuserstatusinput",
      "href": "/graphql/reference/input-objects#changeuserstatusinput",
      "description": "<p>Autogenerated input type of ChangeUserStatus.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "emoji",
          "description": "<p>The emoji to represent your status. Can either be a native Unicode emoji or an emoji name with colons, e.g., 😀.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "expiresAt",
          "description": "<p>If set, the user status will not be shown after this date.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "limitedAvailability",
          "description": "<p>Whether this status should indicate you are not fully available on GitHub, e.g., you are away.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "message",
          "description": "<p>A short description of your current status.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization whose members will be allowed to see the status. If\nomitted, the status will be publicly visible.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CheckAnnotationData",
      "kind": "inputObjects",
      "id": "checkannotationdata",
      "href": "/graphql/reference/input-objects#checkannotationdata",
      "description": "<p>Information from a check run analysis to specific lines of code.</p>",
      "inputFields": [
        {
          "name": "annotationLevel",
          "description": "<p>Represents an annotation's information level.</p>",
          "type": "CheckAnnotationLevel!",
          "id": "checkannotationlevel",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkannotationlevel"
        },
        {
          "name": "location",
          "description": "<p>The location of the annotation.</p>",
          "type": "CheckAnnotationRange!",
          "id": "checkannotationrange",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkannotationrange"
        },
        {
          "name": "message",
          "description": "<p>A short description of the feedback for these lines of code.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>The path of the file to add an annotation to.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "rawDetails",
          "description": "<p>Details about this annotation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>The title that represents the annotation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CheckAnnotationRange",
      "kind": "inputObjects",
      "id": "checkannotationrange",
      "href": "/graphql/reference/input-objects#checkannotationrange",
      "description": "<p>Information from a check run analysis to specific lines of code.</p>",
      "inputFields": [
        {
          "name": "endColumn",
          "description": "<p>The ending column of the range.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "endLine",
          "description": "<p>The ending line of the range.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startColumn",
          "description": "<p>The starting column of the range.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startLine",
          "description": "<p>The starting line of the range.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckRunAction",
      "kind": "inputObjects",
      "id": "checkrunaction",
      "href": "/graphql/reference/input-objects#checkrunaction",
      "description": "<p>Possible further actions the integrator can perform.</p>",
      "inputFields": [
        {
          "name": "description",
          "description": "<p>A short explanation of what this action would do.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "identifier",
          "description": "<p>A reference for the action on the integrator's system.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "label",
          "description": "<p>The text to be displayed on a button in the web UI.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CheckRunFilter",
      "kind": "inputObjects",
      "id": "checkrunfilter",
      "href": "/graphql/reference/input-objects#checkrunfilter",
      "description": "<p>The filters that are available when fetching check runs.</p>",
      "inputFields": [
        {
          "name": "appId",
          "description": "<p>Filters the check runs created by this application ID.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "checkName",
          "description": "<p>Filters the check runs by this name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "checkType",
          "description": "<p>Filters the check runs by this type.</p>",
          "type": "CheckRunType",
          "id": "checkruntype",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkruntype"
        },
        {
          "name": "conclusions",
          "description": "<p>Filters the check runs by these conclusions.</p>",
          "type": "[CheckConclusionState!]",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "status",
          "description": "<p>Filters the check runs by this status. Superceded by statuses.</p>",
          "type": "CheckStatusState",
          "id": "checkstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkstatusstate"
        },
        {
          "name": "statuses",
          "description": "<p>Filters the check runs by this status. Overrides status.</p>",
          "type": "[CheckStatusState!]",
          "id": "checkstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkstatusstate"
        }
      ]
    },
    {
      "name": "CheckRunOutput",
      "kind": "inputObjects",
      "id": "checkrunoutput",
      "href": "/graphql/reference/input-objects#checkrunoutput",
      "description": "<p>Descriptive details about the check run.</p>",
      "inputFields": [
        {
          "name": "annotations",
          "description": "<p>The annotations that are made as part of the check run.</p>",
          "type": "[CheckAnnotationData!]",
          "id": "checkannotationdata",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkannotationdata"
        },
        {
          "name": "images",
          "description": "<p>Images attached to the check run output displayed in the GitHub pull request UI.</p>",
          "type": "[CheckRunOutputImage!]",
          "id": "checkrunoutputimage",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunoutputimage"
        },
        {
          "name": "summary",
          "description": "<p>The summary of the check run (supports Commonmark).</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "text",
          "description": "<p>The details of the check run (supports Commonmark).</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>A title to provide for this check run.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CheckRunOutputImage",
      "kind": "inputObjects",
      "id": "checkrunoutputimage",
      "href": "/graphql/reference/input-objects#checkrunoutputimage",
      "description": "<p>Images attached to the check run output displayed in the GitHub pull request UI.</p>",
      "inputFields": [
        {
          "name": "alt",
          "description": "<p>The alternative text for the image.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "caption",
          "description": "<p>A short image description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "imageUrl",
          "description": "<p>The full URL of the image.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CheckSuiteAutoTriggerPreference",
      "kind": "inputObjects",
      "id": "checksuiteautotriggerpreference",
      "href": "/graphql/reference/input-objects#checksuiteautotriggerpreference",
      "description": "<p>The auto-trigger preferences that are available for check suites.</p>",
      "inputFields": [
        {
          "name": "appId",
          "description": "<p>The node ID of the application that owns the check suite.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "setting",
          "description": "<p>Set to <code>true</code> to enable automatic creation of CheckSuite events upon pushes to the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "CheckSuiteFilter",
      "kind": "inputObjects",
      "id": "checksuitefilter",
      "href": "/graphql/reference/input-objects#checksuitefilter",
      "description": "<p>The filters that are available when fetching check suites.</p>",
      "inputFields": [
        {
          "name": "appId",
          "description": "<p>Filters the check suites created by this application ID.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "checkName",
          "description": "<p>Filters the check suites by this name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ClearLabelsFromLabelableInput",
      "kind": "inputObjects",
      "id": "clearlabelsfromlabelableinput",
      "href": "/graphql/reference/input-objects#clearlabelsfromlabelableinput",
      "description": "<p>Autogenerated input type of ClearLabelsFromLabelable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labelableId",
          "description": "<p>The id of the labelable object to clear the labels from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ClearProjectV2ItemFieldValueInput",
      "kind": "inputObjects",
      "id": "clearprojectv2itemfieldvalueinput",
      "href": "/graphql/reference/input-objects#clearprojectv2itemfieldvalueinput",
      "description": "<p>Autogenerated input type of ClearProjectV2ItemFieldValue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "fieldId",
          "description": "<p>The ID of the field to be cleared.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "itemId",
          "description": "<p>The ID of the item to be cleared.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CloneProjectInput",
      "kind": "inputObjects",
      "id": "cloneprojectinput",
      "href": "/graphql/reference/input-objects#cloneprojectinput",
      "description": "<p>Autogenerated input type of CloneProject.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The description of the project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "includeWorkflows",
          "description": "<p>Whether or not to clone the source project's workflows.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>The name of the project.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "public",
          "description": "<p>The visibility of the project, defaults to false (private).</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "sourceId",
          "description": "<p>The source project to clone.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "targetOwnerId",
          "description": "<p>The owner ID to create the project under.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CloneTemplateRepositoryInput",
      "kind": "inputObjects",
      "id": "clonetemplaterepositoryinput",
      "href": "/graphql/reference/input-objects#clonetemplaterepositoryinput",
      "description": "<p>Autogenerated input type of CloneTemplateRepository.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "description",
          "description": "<p>A short description of the new repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "includeAllBranches",
          "description": "<p>Whether to copy all branches from the template to the new repository. Defaults\nto copying only the default branch of the template.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>The name of the new repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the owner for the new repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the template repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "visibility",
          "description": "<p>Indicates the repository's visibility level.</p>",
          "type": "RepositoryVisibility!",
          "id": "repositoryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositoryvisibility"
        }
      ]
    },
    {
      "name": "CloseDiscussionInput",
      "kind": "inputObjects",
      "id": "closediscussioninput",
      "href": "/graphql/reference/input-objects#closediscussioninput",
      "description": "<p>Autogenerated input type of CloseDiscussion.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "discussionId",
          "description": "<p>ID of the discussion to be closed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "reason",
          "description": "<p>The reason why the discussion is being closed.</p>",
          "type": "DiscussionCloseReason",
          "id": "discussionclosereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#discussionclosereason"
        }
      ]
    },
    {
      "name": "CloseIssueInput",
      "kind": "inputObjects",
      "id": "closeissueinput",
      "href": "/graphql/reference/input-objects#closeissueinput",
      "description": "<p>Autogenerated input type of CloseIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>ID of the issue to be closed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "stateReason",
          "description": "<p>The reason the issue is to be closed.</p>",
          "type": "IssueClosedStateReason",
          "id": "issueclosedstatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#issueclosedstatereason"
        }
      ]
    },
    {
      "name": "ClosePullRequestInput",
      "kind": "inputObjects",
      "id": "closepullrequestinput",
      "href": "/graphql/reference/input-objects#closepullrequestinput",
      "description": "<p>Autogenerated input type of ClosePullRequest.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to be closed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CommitAuthor",
      "kind": "inputObjects",
      "id": "commitauthor",
      "href": "/graphql/reference/input-objects#commitauthor",
      "description": "<p>Specifies an author for filtering Git commits.</p>",
      "inputFields": [
        {
          "name": "emails",
          "description": "<p>Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>ID of a User to filter by. If non-null, only commits authored by this user\nwill be returned. This field takes precedence over emails.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "CommitContributionOrder",
      "kind": "inputObjects",
      "id": "commitcontributionorder",
      "href": "/graphql/reference/input-objects#commitcontributionorder",
      "description": "<p>Ordering options for commit contribution connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which to order commit contributions.</p>",
          "type": "CommitContributionOrderField!",
          "id": "commitcontributionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#commitcontributionorderfield"
        }
      ]
    },
    {
      "name": "CommitMessage",
      "kind": "inputObjects",
      "id": "commitmessage",
      "href": "/graphql/reference/input-objects#commitmessage",
      "description": "<p>A message to include with a new commit.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The body of the message.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "headline",
          "description": "<p>The headline of the message.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CommittableBranch",
      "kind": "inputObjects",
      "id": "committablebranch",
      "href": "/graphql/reference/input-objects#committablebranch",
      "description": "<p>A git ref for a commit to be appended to.</p>\n<p>The ref must be a branch, i.e. its fully qualified name must start\nwith <code>refs/heads/</code> (although the input is not required to be fully\nqualified).</p>\n<p>The Ref may be specified by its global node ID or by the\n<code>repositoryNameWithOwner</code> and <code>branchName</code>.</p>\n<h3 id=\"examples\" tabindex=\"-1\"><a class=\"heading-link\" href=\"#examples\">Examples<span class=\"heading-link-symbol\" aria-hidden=\"true\"></span></a></h3>\n<p>Specify a branch using a global node ID:</p>\n<pre><code>{ \"id\": \"MDM6UmVmMTpyZWZzL2hlYWRzL21haW4=\" }\n</code></pre>\n<p>Specify a branch using <code>repositoryNameWithOwner</code> and <code>branchName</code>:</p>\n<pre><code>{\n  \"repositoryNameWithOwner\": \"github/graphql-client\",\n  \"branchName\": \"main\"\n}.\n</code></pre>",
      "inputFields": [
        {
          "name": "branchName",
          "description": "<p>The unqualified name of the branch to append the commit to.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the Ref to be updated.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "repositoryNameWithOwner",
          "description": "<p>The nameWithOwner of the repository to commit to.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ContributionOrder",
      "kind": "inputObjects",
      "id": "contributionorder",
      "href": "/graphql/reference/input-objects#contributionorder",
      "description": "<p>Ordering options for contribution connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        }
      ]
    },
    {
      "name": "ConvertProjectCardNoteToIssueInput",
      "kind": "inputObjects",
      "id": "convertprojectcardnotetoissueinput",
      "href": "/graphql/reference/input-objects#convertprojectcardnotetoissueinput",
      "description": "<p>Autogenerated input type of ConvertProjectCardNoteToIssue.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The body of the newly created issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectCardId",
          "description": "<p>The ProjectCard ID to convert.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the repository to create the issue in.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the newly created issue. Defaults to the card's note text.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ConvertPullRequestToDraftInput",
      "kind": "inputObjects",
      "id": "convertpullrequesttodraftinput",
      "href": "/graphql/reference/input-objects#convertpullrequesttodraftinput",
      "description": "<p>Autogenerated input type of ConvertPullRequestToDraft.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to convert to draft.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CopyProjectV2Input",
      "kind": "inputObjects",
      "id": "copyprojectv2input",
      "href": "/graphql/reference/input-objects#copyprojectv2input",
      "description": "<p>Autogenerated input type of CopyProjectV2.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "includeDraftIssues",
          "description": "<p>Include draft issues in the new project.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "ownerId",
          "description": "<p>The owner ID of the new project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the source Project to copy.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the project.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateAttributionInvitationInput",
      "kind": "inputObjects",
      "id": "createattributioninvitationinput",
      "href": "/graphql/reference/input-objects#createattributioninvitationinput",
      "description": "<p>Autogenerated input type of CreateAttributionInvitation.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The Node ID of the owner scoping the reattributable data.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "sourceId",
          "description": "<p>The Node ID of the account owning the data to reattribute.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "targetId",
          "description": "<p>The Node ID of the account which may claim the data.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateBranchProtectionRuleInput",
      "kind": "inputObjects",
      "id": "createbranchprotectionruleinput",
      "href": "/graphql/reference/input-objects#createbranchprotectionruleinput",
      "description": "<p>Autogenerated input type of CreateBranchProtectionRule.</p>",
      "inputFields": [
        {
          "name": "allowsDeletions",
          "description": "<p>Can this branch be deleted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "allowsForcePushes",
          "description": "<p>Are force pushes allowed on this branch.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "blocksCreations",
          "description": "<p>Is branch creation a protected operation.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "bypassForcePushActorIds",
          "description": "<p>A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "bypassPullRequestActorIds",
          "description": "<p>A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissesStaleReviews",
          "description": "<p>Will new commits pushed to matching branches dismiss pull request review approvals.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isAdminEnforced",
          "description": "<p>Can admins overwrite branch protection.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lockAllowsFetchAndMerge",
          "description": "<p>Whether users can pull changes from upstream when the branch is locked. Set to\n<code>true</code> to allow fork syncing. Set to <code>false</code> to prevent fork syncing.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lockBranch",
          "description": "<p>Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "pattern",
          "description": "<p>The glob-like pattern used to determine matching branches.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pushActorIds",
          "description": "<p>A list of User, Team, or App IDs allowed to push to matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "repositoryId",
          "description": "<p>The global relay id of the repository in which a new branch protection rule should be created in.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "requireLastPushApproval",
          "description": "<p>Whether the most recent push must be approved by someone other than the person who pushed it.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiredApprovingReviewCount",
          "description": "<p>Number of approving reviews required to update matching branches.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "requiredDeploymentEnvironments",
          "description": "<p>The list of required deployment environments.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiredStatusCheckContexts",
          "description": "<p>List of required status check contexts that must pass for commits to be accepted to matching branches.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiredStatusChecks",
          "description": "<p>The list of required status checks.</p>",
          "type": "[RequiredStatusCheckInput!]",
          "id": "requiredstatuscheckinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#requiredstatuscheckinput"
        },
        {
          "name": "requiresApprovingReviews",
          "description": "<p>Are approving reviews required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCodeOwnerReviews",
          "description": "<p>Are reviews from code owners required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCommitSignatures",
          "description": "<p>Are commits required to be signed.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresConversationResolution",
          "description": "<p>Are conversations required to be resolved before merging.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresDeployments",
          "description": "<p>Are successful deployments required before merging.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresLinearHistory",
          "description": "<p>Are merge commits prohibited from being pushed to this branch.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStatusChecks",
          "description": "<p>Are status checks required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStrictStatusChecks",
          "description": "<p>Are branches required to be up to date before merging.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsPushes",
          "description": "<p>Is pushing to matching branches restricted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsReviewDismissals",
          "description": "<p>Is dismissal of pull request reviews restricted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "reviewDismissalActorIds",
          "description": "<p>A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "CreateCheckRunInput",
      "kind": "inputObjects",
      "id": "createcheckruninput",
      "href": "/graphql/reference/input-objects#createcheckruninput",
      "description": "<p>Autogenerated input type of CreateCheckRun.</p>",
      "inputFields": [
        {
          "name": "actions",
          "description": "<p>Possible further actions the integrator can perform, which a user may trigger.</p>",
          "type": "[CheckRunAction!]",
          "id": "checkrunaction",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunaction"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "completedAt",
          "description": "<p>The time that the check run finished.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "conclusion",
          "description": "<p>The final conclusion of the check.</p>",
          "type": "CheckConclusionState",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "detailsUrl",
          "description": "<p>The URL of the integrator's site that has the full details of the check.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "externalId",
          "description": "<p>A reference for the run on the integrator's system.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "headSha",
          "description": "<p>The SHA of the head commit.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "name",
          "description": "<p>The name of the check.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "output",
          "description": "<p>Descriptive details about the run.</p>",
          "type": "CheckRunOutput",
          "id": "checkrunoutput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunoutput"
        },
        {
          "name": "repositoryId",
          "description": "<p>The node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "startedAt",
          "description": "<p>The time that the check run began.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "status",
          "description": "<p>The current status.</p>",
          "type": "RequestableCheckStatusState",
          "id": "requestablecheckstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#requestablecheckstatusstate"
        }
      ]
    },
    {
      "name": "CreateCheckSuiteInput",
      "kind": "inputObjects",
      "id": "createchecksuiteinput",
      "href": "/graphql/reference/input-objects#createchecksuiteinput",
      "description": "<p>Autogenerated input type of CreateCheckSuite.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "headSha",
          "description": "<p>The SHA of the head commit.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateCommitOnBranchInput",
      "kind": "inputObjects",
      "id": "createcommitonbranchinput",
      "href": "/graphql/reference/input-objects#createcommitonbranchinput",
      "description": "<p>Autogenerated input type of CreateCommitOnBranch.</p>",
      "inputFields": [
        {
          "name": "branch",
          "description": "<p>The Ref to be updated.  Must be a branch.</p>",
          "type": "CommittableBranch!",
          "id": "committablebranch",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#committablebranch"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "expectedHeadOid",
          "description": "<p>The git commit oid expected at the head of the branch prior to the commit.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "fileChanges",
          "description": "<p>A description of changes to files in this commit.</p>",
          "type": "FileChanges",
          "id": "filechanges",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#filechanges"
        },
        {
          "name": "message",
          "description": "<p>The commit message the be included with the commit.</p>",
          "type": "CommitMessage!",
          "id": "commitmessage",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#commitmessage"
        }
      ]
    },
    {
      "name": "CreateDeploymentInput",
      "kind": "inputObjects",
      "id": "createdeploymentinput",
      "href": "/graphql/reference/input-objects#createdeploymentinput",
      "description": "<p>Autogenerated input type of CreateDeployment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Deployments preview",
        "description": "This preview adds support for deployments mutations and new deployments features.",
        "toggled_by": "flash-preview",
        "toggled_on": [
          "DeploymentStatus.environment",
          "Mutation.createDeploymentStatus",
          "Mutation.createDeployment"
        ],
        "owning_teams": [
          "@github/c2c-actions-service"
        ],
        "accept_header": "application/vnd.github.flash-preview+json",
        "href": "/graphql/overview/schema-previews#deployments-preview"
      },
      "inputFields": [
        {
          "name": "autoMerge",
          "description": "<p>Attempt to automatically merge the default branch into the requested ref, defaults to true.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "description",
          "description": "<p>Short description of the deployment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environment",
          "description": "<p>Name for the target deployment environment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "payload",
          "description": "<p>JSON payload with extra information about the deployment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "refId",
          "description": "<p>The node ID of the ref to be deployed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "requiredContexts",
          "description": "<p>The status contexts to verify against commit status checks. To bypass required\ncontexts, pass an empty array. Defaults to all unique contexts.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "task",
          "description": "<p>Specifies a task to execute.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateDeploymentStatusInput",
      "kind": "inputObjects",
      "id": "createdeploymentstatusinput",
      "href": "/graphql/reference/input-objects#createdeploymentstatusinput",
      "description": "<p>Autogenerated input type of CreateDeploymentStatus.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Deployments preview",
        "description": "This preview adds support for deployments mutations and new deployments features.",
        "toggled_by": "flash-preview",
        "toggled_on": [
          "DeploymentStatus.environment",
          "Mutation.createDeploymentStatus",
          "Mutation.createDeployment"
        ],
        "owning_teams": [
          "@github/c2c-actions-service"
        ],
        "accept_header": "application/vnd.github.flash-preview+json",
        "href": "/graphql/overview/schema-previews#deployments-preview"
      },
      "inputFields": [
        {
          "name": "autoInactive",
          "description": "<p>Adds a new inactive status to all non-transient, non-production environment\ndeployments with the same repository and environment name as the created\nstatus's deployment.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "deploymentId",
          "description": "<p>The node ID of the deployment.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "description",
          "description": "<p>A short description of the status. Maximum length of 140 characters.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environment",
          "description": "<p>If provided, updates the environment of the deploy. Otherwise, does not modify the environment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environmentUrl",
          "description": "<p>Sets the URL for accessing your environment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "logUrl",
          "description": "<p>The log URL to associate with this status.       This URL should contain\noutput to keep the user updated while the task is running       or serve as\nhistorical information for what happened in the deployment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "state",
          "description": "<p>The state of the deployment.</p>",
          "type": "DeploymentStatusState!",
          "id": "deploymentstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentstatusstate"
        }
      ]
    },
    {
      "name": "CreateDiscussionInput",
      "kind": "inputObjects",
      "id": "creatediscussioninput",
      "href": "/graphql/reference/input-objects#creatediscussioninput",
      "description": "<p>Autogenerated input type of CreateDiscussion.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The body of the discussion.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "categoryId",
          "description": "<p>The id of the discussion category to associate with this discussion.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The id of the repository on which to create the discussion.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the discussion.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateEnterpriseOrganizationInput",
      "kind": "inputObjects",
      "id": "createenterpriseorganizationinput",
      "href": "/graphql/reference/input-objects#createenterpriseorganizationinput",
      "description": "<p>Autogenerated input type of CreateEnterpriseOrganization.</p>",
      "inputFields": [
        {
          "name": "adminLogins",
          "description": "<p>The logins for the administrators of the new organization.</p>",
          "type": "[String!]!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "billingEmail",
          "description": "<p>The email used for sending billing receipts.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise owning the new organization.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "login",
          "description": "<p>The login of the new organization.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "profileName",
          "description": "<p>The profile name of the new organization.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateEnvironmentInput",
      "kind": "inputObjects",
      "id": "createenvironmentinput",
      "href": "/graphql/reference/input-objects#createenvironmentinput",
      "description": "<p>Autogenerated input type of CreateEnvironment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the environment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateIpAllowListEntryInput",
      "kind": "inputObjects",
      "id": "createipallowlistentryinput",
      "href": "/graphql/reference/input-objects#createipallowlistentryinput",
      "description": "<p>Autogenerated input type of CreateIpAllowListEntry.</p>",
      "inputFields": [
        {
          "name": "allowListValue",
          "description": "<p>An IP address or range of addresses in CIDR notation.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isActive",
          "description": "<p>Whether the IP allow list entry is active when an IP allow list is enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>An optional name for the IP allow list entry.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the owner for which to create the new IP allow list entry.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateIssueInput",
      "kind": "inputObjects",
      "id": "createissueinput",
      "href": "/graphql/reference/input-objects#createissueinput",
      "description": "<p>Autogenerated input type of CreateIssue.</p>",
      "inputFields": [
        {
          "name": "assigneeIds",
          "description": "<p>The Node ID for the user assignee for this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "body",
          "description": "<p>The body for the issue description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueTemplate",
          "description": "<p>The name of an issue template in the repository, assigns labels and assignees from the template to the issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labelIds",
          "description": "<p>An array of Node IDs of labels for this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "milestoneId",
          "description": "<p>The Node ID of the milestone for this issue.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectIds",
          "description": "<p>An array of Node IDs for projects associated with this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title for the issue.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateLabelInput",
      "kind": "inputObjects",
      "id": "createlabelinput",
      "href": "/graphql/reference/input-objects#createlabelinput",
      "description": "<p>Autogenerated input type of CreateLabel.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "color",
          "description": "<p>A 6 character hex code, without the leading #, identifying the color of the label.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "description",
          "description": "<p>A brief description of the label, such as its purpose.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the label.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateLinkedBranchInput",
      "kind": "inputObjects",
      "id": "createlinkedbranchinput",
      "href": "/graphql/reference/input-objects#createlinkedbranchinput",
      "description": "<p>Autogenerated input type of CreateLinkedBranch.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>ID of the issue to link to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "name",
          "description": "<p>The name of the new branch. Defaults to issue number and title.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oid",
          "description": "<p>The commit SHA to base the new branch on.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repositoryId",
          "description": "<p>ID of the repository to create the branch in. Defaults to the issue repository.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateMigrationSourceInput",
      "kind": "inputObjects",
      "id": "createmigrationsourceinput",
      "href": "/graphql/reference/input-objects#createmigrationsourceinput",
      "description": "<p>Autogenerated input type of CreateMigrationSource.</p>",
      "inputFields": [
        {
          "name": "accessToken",
          "description": "<p>The migration source access token.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "githubPat",
          "description": "<p>The GitHub personal access token of the user importing to the target repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The migration source name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the organization that will own the migration source.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "type",
          "description": "<p>The migration source type.</p>",
          "type": "MigrationSourceType!",
          "id": "migrationsourcetype",
          "kind": "enums",
          "href": "/graphql/reference/enums#migrationsourcetype"
        },
        {
          "name": "url",
          "description": "<p>The migration source URL, for example <code>https://github.com</code> or <code>https://monalisa.ghe.com</code>.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateProjectInput",
      "kind": "inputObjects",
      "id": "createprojectinput",
      "href": "/graphql/reference/input-objects#createprojectinput",
      "description": "<p>Autogenerated input type of CreateProject.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The description of project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of project.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The owner ID to create the project under.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryIds",
          "description": "<p>A list of repository IDs to create as linked repositories for the project.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "template",
          "description": "<p>The name of the GitHub-provided template.</p>",
          "type": "ProjectTemplate",
          "id": "projecttemplate",
          "kind": "enums",
          "href": "/graphql/reference/enums#projecttemplate"
        }
      ]
    },
    {
      "name": "CreateProjectV2FieldInput",
      "kind": "inputObjects",
      "id": "createprojectv2fieldinput",
      "href": "/graphql/reference/input-objects#createprojectv2fieldinput",
      "description": "<p>Autogenerated input type of CreateProjectV2Field.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dataType",
          "description": "<p>The data type of the field.</p>",
          "type": "ProjectV2CustomFieldType!",
          "id": "projectv2customfieldtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2customfieldtype"
        },
        {
          "name": "name",
          "description": "<p>The name of the field.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to create the field in.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "singleSelectOptions",
          "description": "<p>Options for a single select field. At least one value is required if data_type is SINGLE_SELECT.</p>",
          "type": "[ProjectV2SingleSelectFieldOptionInput!]",
          "id": "projectv2singleselectfieldoptioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#projectv2singleselectfieldoptioninput"
        }
      ]
    },
    {
      "name": "CreateProjectV2Input",
      "kind": "inputObjects",
      "id": "createprojectv2input",
      "href": "/graphql/reference/input-objects#createprojectv2input",
      "description": "<p>Autogenerated input type of CreateProjectV2.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The owner ID to create the project under.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The repository to link the project to.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "teamId",
          "description": "<p>The team to link the project to. The team will be granted read permissions.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the project.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreatePullRequestInput",
      "kind": "inputObjects",
      "id": "createpullrequestinput",
      "href": "/graphql/reference/input-objects#createpullrequestinput",
      "description": "<p>Autogenerated input type of CreatePullRequest.</p>",
      "inputFields": [
        {
          "name": "baseRefName",
          "description": "<p>The name of the branch you want your changes pulled into. This should be an existing branch\non the current repository. You cannot update the base branch on a pull request to point\nto another repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "body",
          "description": "<p>The contents of the pull request.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "draft",
          "description": "<p>Indicates whether this pull request should be a draft.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "headRefName",
          "description": "<p>The name of the branch where your changes are implemented. For cross-repository pull requests\nin the same network, namespace <code>head_ref_name</code> with a user like this: <code>username:branch</code>.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "headRepositoryId",
          "description": "<p>The Node ID of the head repository.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "maintainerCanModify",
          "description": "<p>Indicates whether maintainers can modify the pull request.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the pull request.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateRefInput",
      "kind": "inputObjects",
      "id": "createrefinput",
      "href": "/graphql/reference/input-objects#createrefinput",
      "description": "<p>Autogenerated input type of CreateRef.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The fully qualified name of the new Ref (ie: <code>refs/heads/my_new_branch</code>).</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oid",
          "description": "<p>The GitObjectID that the new Ref shall target. Must point to a commit.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the Repository to create the Ref in.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateRepositoryInput",
      "kind": "inputObjects",
      "id": "createrepositoryinput",
      "href": "/graphql/reference/input-objects#createrepositoryinput",
      "description": "<p>Autogenerated input type of CreateRepository.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "description",
          "description": "<p>A short description of the new repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "hasIssuesEnabled",
          "description": "<p>Indicates if the repository should have the issues feature enabled.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasWikiEnabled",
          "description": "<p>Indicates if the repository should have the wiki feature enabled.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "homepageUrl",
          "description": "<p>The URL for a web page about this repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>The name of the new repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the owner for the new repository.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "teamId",
          "description": "<p>When an organization is specified as the owner, this ID identifies the team\nthat should be granted access to the new repository.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "template",
          "description": "<p>Whether this repository should be marked as a template such that anyone who\ncan access it can create new repositories with the same files and directory structure.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "visibility",
          "description": "<p>Indicates the repository's visibility level.</p>",
          "type": "RepositoryVisibility!",
          "id": "repositoryvisibility",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositoryvisibility"
        }
      ]
    },
    {
      "name": "CreateTeamDiscussionCommentInput",
      "kind": "inputObjects",
      "id": "createteamdiscussioncommentinput",
      "href": "/graphql/reference/input-objects#createteamdiscussioncommentinput",
      "description": "<p>Autogenerated input type of CreateTeamDiscussionComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The content of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "discussionId",
          "description": "<p>The ID of the discussion to which the comment belongs.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateTeamDiscussionInput",
      "kind": "inputObjects",
      "id": "createteamdiscussioninput",
      "href": "/graphql/reference/input-objects#createteamdiscussioninput",
      "description": "<p>Autogenerated input type of CreateTeamDiscussion.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The content of the discussion.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "private",
          "description": "<p>If true, restricts the visibility of this discussion to team members and\norganization admins. If false or not specified, allows any organization member\nto view this discussion.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "teamId",
          "description": "<p>The ID of the team to which the discussion belongs.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the discussion.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "DeleteBranchProtectionRuleInput",
      "kind": "inputObjects",
      "id": "deletebranchprotectionruleinput",
      "href": "/graphql/reference/input-objects#deletebranchprotectionruleinput",
      "description": "<p>Autogenerated input type of DeleteBranchProtectionRule.</p>",
      "inputFields": [
        {
          "name": "branchProtectionRuleId",
          "description": "<p>The global relay id of the branch protection rule to be deleted.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "DeleteDeploymentInput",
      "kind": "inputObjects",
      "id": "deletedeploymentinput",
      "href": "/graphql/reference/input-objects#deletedeploymentinput",
      "description": "<p>Autogenerated input type of DeleteDeployment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the deployment to be deleted.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteDiscussionCommentInput",
      "kind": "inputObjects",
      "id": "deletediscussioncommentinput",
      "href": "/graphql/reference/input-objects#deletediscussioncommentinput",
      "description": "<p>Autogenerated input type of DeleteDiscussionComment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node id of the discussion comment to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteDiscussionInput",
      "kind": "inputObjects",
      "id": "deletediscussioninput",
      "href": "/graphql/reference/input-objects#deletediscussioninput",
      "description": "<p>Autogenerated input type of DeleteDiscussion.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The id of the discussion to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteEnvironmentInput",
      "kind": "inputObjects",
      "id": "deleteenvironmentinput",
      "href": "/graphql/reference/input-objects#deleteenvironmentinput",
      "description": "<p>Autogenerated input type of DeleteEnvironment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the environment to be deleted.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteIpAllowListEntryInput",
      "kind": "inputObjects",
      "id": "deleteipallowlistentryinput",
      "href": "/graphql/reference/input-objects#deleteipallowlistentryinput",
      "description": "<p>Autogenerated input type of DeleteIpAllowListEntry.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ipAllowListEntryId",
          "description": "<p>The ID of the IP allow list entry to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteIssueCommentInput",
      "kind": "inputObjects",
      "id": "deleteissuecommentinput",
      "href": "/graphql/reference/input-objects#deleteissuecommentinput",
      "description": "<p>Autogenerated input type of DeleteIssueComment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the comment to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteIssueInput",
      "kind": "inputObjects",
      "id": "deleteissueinput",
      "href": "/graphql/reference/input-objects#deleteissueinput",
      "description": "<p>Autogenerated input type of DeleteIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>The ID of the issue to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteLabelInput",
      "kind": "inputObjects",
      "id": "deletelabelinput",
      "href": "/graphql/reference/input-objects#deletelabelinput",
      "description": "<p>Autogenerated input type of DeleteLabel.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the label to be deleted.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteLinkedBranchInput",
      "kind": "inputObjects",
      "id": "deletelinkedbranchinput",
      "href": "/graphql/reference/input-objects#deletelinkedbranchinput",
      "description": "<p>Autogenerated input type of DeleteLinkedBranch.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "linkedBranchId",
          "description": "<p>The ID of the linked branch.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeletePackageVersionInput",
      "kind": "inputObjects",
      "id": "deletepackageversioninput",
      "href": "/graphql/reference/input-objects#deletepackageversioninput",
      "description": "<p>Autogenerated input type of DeletePackageVersion.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "packageVersionId",
          "description": "<p>The ID of the package version to be deleted.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteProjectCardInput",
      "kind": "inputObjects",
      "id": "deleteprojectcardinput",
      "href": "/graphql/reference/input-objects#deleteprojectcardinput",
      "description": "<p>Autogenerated input type of DeleteProjectCard.</p>",
      "inputFields": [
        {
          "name": "cardId",
          "description": "<p>The id of the card to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "DeleteProjectColumnInput",
      "kind": "inputObjects",
      "id": "deleteprojectcolumninput",
      "href": "/graphql/reference/input-objects#deleteprojectcolumninput",
      "description": "<p>Autogenerated input type of DeleteProjectColumn.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "columnId",
          "description": "<p>The id of the column to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteProjectInput",
      "kind": "inputObjects",
      "id": "deleteprojectinput",
      "href": "/graphql/reference/input-objects#deleteprojectinput",
      "description": "<p>Autogenerated input type of DeleteProject.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The Project ID to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteProjectV2FieldInput",
      "kind": "inputObjects",
      "id": "deleteprojectv2fieldinput",
      "href": "/graphql/reference/input-objects#deleteprojectv2fieldinput",
      "description": "<p>Autogenerated input type of DeleteProjectV2Field.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "fieldId",
          "description": "<p>The ID of the field to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteProjectV2Input",
      "kind": "inputObjects",
      "id": "deleteprojectv2input",
      "href": "/graphql/reference/input-objects#deleteprojectv2input",
      "description": "<p>Autogenerated input type of DeleteProjectV2.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteProjectV2ItemInput",
      "kind": "inputObjects",
      "id": "deleteprojectv2iteminput",
      "href": "/graphql/reference/input-objects#deleteprojectv2iteminput",
      "description": "<p>Autogenerated input type of DeleteProjectV2Item.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "itemId",
          "description": "<p>The ID of the item to be removed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project from which the item should be removed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteProjectV2WorkflowInput",
      "kind": "inputObjects",
      "id": "deleteprojectv2workflowinput",
      "href": "/graphql/reference/input-objects#deleteprojectv2workflowinput",
      "description": "<p>Autogenerated input type of DeleteProjectV2Workflow.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "workflowId",
          "description": "<p>The ID of the workflow to be removed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeletePullRequestReviewCommentInput",
      "kind": "inputObjects",
      "id": "deletepullrequestreviewcommentinput",
      "href": "/graphql/reference/input-objects#deletepullrequestreviewcommentinput",
      "description": "<p>Autogenerated input type of DeletePullRequestReviewComment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the comment to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeletePullRequestReviewInput",
      "kind": "inputObjects",
      "id": "deletepullrequestreviewinput",
      "href": "/graphql/reference/input-objects#deletepullrequestreviewinput",
      "description": "<p>Autogenerated input type of DeletePullRequestReview.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Node ID of the pull request review to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteRefInput",
      "kind": "inputObjects",
      "id": "deleterefinput",
      "href": "/graphql/reference/input-objects#deleterefinput",
      "description": "<p>Autogenerated input type of DeleteRef.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "refId",
          "description": "<p>The Node ID of the Ref to be deleted.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteTeamDiscussionCommentInput",
      "kind": "inputObjects",
      "id": "deleteteamdiscussioncommentinput",
      "href": "/graphql/reference/input-objects#deleteteamdiscussioncommentinput",
      "description": "<p>Autogenerated input type of DeleteTeamDiscussionComment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the comment to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteTeamDiscussionInput",
      "kind": "inputObjects",
      "id": "deleteteamdiscussioninput",
      "href": "/graphql/reference/input-objects#deleteteamdiscussioninput",
      "description": "<p>Autogenerated input type of DeleteTeamDiscussion.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The discussion ID to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteVerifiableDomainInput",
      "kind": "inputObjects",
      "id": "deleteverifiabledomaininput",
      "href": "/graphql/reference/input-objects#deleteverifiabledomaininput",
      "description": "<p>Autogenerated input type of DeleteVerifiableDomain.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the verifiable domain to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeploymentOrder",
      "kind": "inputObjects",
      "id": "deploymentorder",
      "href": "/graphql/reference/input-objects#deploymentorder",
      "description": "<p>Ordering options for deployment connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order deployments by.</p>",
          "type": "DeploymentOrderField!",
          "id": "deploymentorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentorderfield"
        }
      ]
    },
    {
      "name": "DisablePullRequestAutoMergeInput",
      "kind": "inputObjects",
      "id": "disablepullrequestautomergeinput",
      "href": "/graphql/reference/input-objects#disablepullrequestautomergeinput",
      "description": "<p>Autogenerated input type of DisablePullRequestAutoMerge.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to disable auto merge on.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DiscussionOrder",
      "kind": "inputObjects",
      "id": "discussionorder",
      "href": "/graphql/reference/input-objects#discussionorder",
      "description": "<p>Ways in which lists of discussions can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order discussions by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which to order discussions.</p>",
          "type": "DiscussionOrderField!",
          "id": "discussionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#discussionorderfield"
        }
      ]
    },
    {
      "name": "DiscussionPollOptionOrder",
      "kind": "inputObjects",
      "id": "discussionpolloptionorder",
      "href": "/graphql/reference/input-objects#discussionpolloptionorder",
      "description": "<p>Ordering options for discussion poll option connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order poll options by.</p>",
          "type": "DiscussionPollOptionOrderField!",
          "id": "discussionpolloptionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#discussionpolloptionorderfield"
        }
      ]
    },
    {
      "name": "DismissPullRequestReviewInput",
      "kind": "inputObjects",
      "id": "dismisspullrequestreviewinput",
      "href": "/graphql/reference/input-objects#dismisspullrequestreviewinput",
      "description": "<p>Autogenerated input type of DismissPullRequestReview.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "message",
          "description": "<p>The contents of the pull request review dismissal message.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Node ID of the pull request review to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DismissRepositoryVulnerabilityAlertInput",
      "kind": "inputObjects",
      "id": "dismissrepositoryvulnerabilityalertinput",
      "href": "/graphql/reference/input-objects#dismissrepositoryvulnerabilityalertinput",
      "description": "<p>Autogenerated input type of DismissRepositoryVulnerabilityAlert.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissReason",
          "description": "<p>The reason the Dependabot alert is being dismissed.</p>",
          "type": "DismissReason!",
          "id": "dismissreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#dismissreason"
        },
        {
          "name": "repositoryVulnerabilityAlertId",
          "description": "<p>The Dependabot alert ID to dismiss.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DraftPullRequestReviewComment",
      "kind": "inputObjects",
      "id": "draftpullrequestreviewcomment",
      "href": "/graphql/reference/input-objects#draftpullrequestreviewcomment",
      "description": "<p>Specifies a review comment to be left with a Pull Request Review.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>Body of the comment to leave.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>Path to the file being commented on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>Position in the file to leave a comment on.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DraftPullRequestReviewThread",
      "kind": "inputObjects",
      "id": "draftpullrequestreviewthread",
      "href": "/graphql/reference/input-objects#draftpullrequestreviewthread",
      "description": "<p>Specifies a review comment thread to be left with a Pull Request Review.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>Body of the comment to leave.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "line",
          "description": "<p>The line of the blob to which the thread refers. The end of the line range for multi-line comments.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "path",
          "description": "<p>Path to the file being commented on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "side",
          "description": "<p>The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range.</p>",
          "type": "DiffSide",
          "id": "diffside",
          "kind": "enums",
          "href": "/graphql/reference/enums#diffside"
        },
        {
          "name": "startLine",
          "description": "<p>The first line of the range to which the comment refers.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startSide",
          "description": "<p>The side of the diff on which the start line resides.</p>",
          "type": "DiffSide",
          "id": "diffside",
          "kind": "enums",
          "href": "/graphql/reference/enums#diffside"
        }
      ]
    },
    {
      "name": "EnablePullRequestAutoMergeInput",
      "kind": "inputObjects",
      "id": "enablepullrequestautomergeinput",
      "href": "/graphql/reference/input-objects#enablepullrequestautomergeinput",
      "description": "<p>Autogenerated input type of EnablePullRequestAutoMerge.</p>",
      "inputFields": [
        {
          "name": "authorEmail",
          "description": "<p>The email address to associate with this merge.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitBody",
          "description": "<p>Commit body to use for the commit when the PR is mergable; if omitted, a\ndefault message will be used. NOTE: when merging with a merge queue any input\nvalue for commit message is ignored.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitHeadline",
          "description": "<p>Commit headline to use for the commit when the PR is mergable; if omitted, a\ndefault message will be used. NOTE: when merging with a merge queue any input\nvalue for commit headline is ignored.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "expectedHeadOid",
          "description": "<p>The expected head OID of the pull request.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "mergeMethod",
          "description": "<p>The merge method to use. If omitted, defaults to <code>MERGE</code>. NOTE: when merging\nwith a merge queue any input value for merge method is ignored.</p>",
          "type": "PullRequestMergeMethod",
          "id": "pullrequestmergemethod",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestmergemethod"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to enable auto-merge on.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "EnterpriseAdministratorInvitationOrder",
      "kind": "inputObjects",
      "id": "enterpriseadministratorinvitationorder",
      "href": "/graphql/reference/input-objects#enterpriseadministratorinvitationorder",
      "description": "<p>Ordering options for enterprise administrator invitation connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order enterprise administrator invitations by.</p>",
          "type": "EnterpriseAdministratorInvitationOrderField!",
          "id": "enterpriseadministratorinvitationorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseadministratorinvitationorderfield"
        }
      ]
    },
    {
      "name": "EnterpriseMemberOrder",
      "kind": "inputObjects",
      "id": "enterprisememberorder",
      "href": "/graphql/reference/input-objects#enterprisememberorder",
      "description": "<p>Ordering options for enterprise member connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order enterprise members by.</p>",
          "type": "EnterpriseMemberOrderField!",
          "id": "enterprisememberorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterprisememberorderfield"
        }
      ]
    },
    {
      "name": "EnterpriseServerInstallationOrder",
      "kind": "inputObjects",
      "id": "enterpriseserverinstallationorder",
      "href": "/graphql/reference/input-objects#enterpriseserverinstallationorder",
      "description": "<p>Ordering options for Enterprise Server installation connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order Enterprise Server installations by.</p>",
          "type": "EnterpriseServerInstallationOrderField!",
          "id": "enterpriseserverinstallationorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseserverinstallationorderfield"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountEmailOrder",
      "kind": "inputObjects",
      "id": "enterpriseserveruseraccountemailorder",
      "href": "/graphql/reference/input-objects#enterpriseserveruseraccountemailorder",
      "description": "<p>Ordering options for Enterprise Server user account email connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order emails by.</p>",
          "type": "EnterpriseServerUserAccountEmailOrderField!",
          "id": "enterpriseserveruseraccountemailorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseserveruseraccountemailorderfield"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountOrder",
      "kind": "inputObjects",
      "id": "enterpriseserveruseraccountorder",
      "href": "/graphql/reference/input-objects#enterpriseserveruseraccountorder",
      "description": "<p>Ordering options for Enterprise Server user account connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order user accounts by.</p>",
          "type": "EnterpriseServerUserAccountOrderField!",
          "id": "enterpriseserveruseraccountorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseserveruseraccountorderfield"
        }
      ]
    },
    {
      "name": "EnterpriseServerUserAccountsUploadOrder",
      "kind": "inputObjects",
      "id": "enterpriseserveruseraccountsuploadorder",
      "href": "/graphql/reference/input-objects#enterpriseserveruseraccountsuploadorder",
      "description": "<p>Ordering options for Enterprise Server user accounts upload connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order user accounts uploads by.</p>",
          "type": "EnterpriseServerUserAccountsUploadOrderField!",
          "id": "enterpriseserveruseraccountsuploadorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseserveruseraccountsuploadorderfield"
        }
      ]
    },
    {
      "name": "FileAddition",
      "kind": "inputObjects",
      "id": "fileaddition",
      "href": "/graphql/reference/input-objects#fileaddition",
      "description": "<p>A command to add a file at the given path with the given contents as part of a\ncommit.  Any existing file at that that path will be replaced.</p>",
      "inputFields": [
        {
          "name": "contents",
          "description": "<p>The base64 encoded contents of the file.</p>",
          "type": "Base64String!",
          "id": "base64string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#base64string"
        },
        {
          "name": "path",
          "description": "<p>The path in the repository where the file will be located.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "FileChanges",
      "kind": "inputObjects",
      "id": "filechanges",
      "href": "/graphql/reference/input-objects#filechanges",
      "description": "<p>A description of a set of changes to a file tree to be made as part of\na git commit, modeled as zero or more file <code>additions</code> and zero or more\nfile <code>deletions</code>.</p>\n<p>Both fields are optional; omitting both will produce a commit with no\nfile changes.</p>\n<p><code>deletions</code> and <code>additions</code> describe changes to files identified\nby their path in the git tree using unix-style path separators, i.e.\n<code>/</code>.  The root of a git tree is an empty string, so paths are not\nslash-prefixed.</p>\n<p><code>path</code> values must be unique across all <code>additions</code> and <code>deletions</code>\nprovided.  Any duplication will result in a validation error.</p>\n<h3 id=\"encoding\" tabindex=\"-1\"><a class=\"heading-link\" href=\"#encoding\">Encoding<span class=\"heading-link-symbol\" aria-hidden=\"true\"></span></a></h3>\n<p>File contents must be provided in full for each <code>FileAddition</code>.</p>\n<p>The <code>contents</code> of a <code>FileAddition</code> must be encoded using RFC 4648\ncompliant base64, i.e. correct padding is required and no characters\noutside the standard alphabet may be used.  Invalid base64\nencoding will be rejected with a validation error.</p>\n<p>The encoded contents may be binary.</p>\n<p>For text files, no assumptions are made about the character encoding of\nthe file contents (after base64 decoding).  No charset transcoding or\nline-ending normalization will be performed; it is the client's\nresponsibility to manage the character encoding of files they provide.\nHowever, for maximum compatibility we recommend using UTF-8 encoding\nand ensuring that all files in a repository use a consistent\nline-ending convention (<code>\\n</code> or <code>\\r\\n</code>), and that all files end\nwith a newline.</p>\n<h3 id=\"modeling-file-changes\" tabindex=\"-1\"><a class=\"heading-link\" href=\"#modeling-file-changes\">Modeling file changes<span class=\"heading-link-symbol\" aria-hidden=\"true\"></span></a></h3>\n<p>Each of the the five types of conceptual changes that can be made in a\ngit commit can be described using the <code>FileChanges</code> type as follows:</p>\n<ol>\n<li>\n<p>New file addition: create file <code>hello world\\n</code> at path <code>docs/README.txt</code>:</p>\n<pre><code>{\n  \"additions\" [\n    {\n      \"path\": \"docs/README.txt\",\n      \"contents\": base64encode(\"hello world\\n\")\n    }\n  ]\n}\n</code></pre>\n</li>\n<li>\n<p>Existing file modification: change existing <code>docs/README.txt</code> to have new\ncontent <code>new content here\\n</code>:</p>\n<pre><code>{\n  \"additions\" [\n    {\n      \"path\": \"docs/README.txt\",\n      \"contents\": base64encode(\"new content here\\n\")\n    }\n  ]\n}\n</code></pre>\n</li>\n<li>\n<p>Existing file deletion: remove existing file <code>docs/README.txt</code>.\nNote that the path is required to exist -- specifying a\npath that does not exist on the given branch will abort the\ncommit and return an error.</p>\n<pre><code>{\n  \"deletions\" [\n    {\n      \"path\": \"docs/README.txt\"\n    }\n  ]\n}\n</code></pre>\n</li>\n<li>\n<p>File rename with no changes: rename <code>docs/README.txt</code> with\nprevious content <code>hello world\\n</code> to the same content at\n<code>newdocs/README.txt</code>:</p>\n<pre><code>{\n  \"deletions\" [\n    {\n      \"path\": \"docs/README.txt\",\n    }\n  ],\n  \"additions\" [\n    {\n      \"path\": \"newdocs/README.txt\",\n      \"contents\": base64encode(\"hello world\\n\")\n    }\n  ]\n}\n</code></pre>\n</li>\n<li>\n<p>File rename with changes: rename <code>docs/README.txt</code> with\nprevious content <code>hello world\\n</code> to a file at path\n<code>newdocs/README.txt</code> with content <code>new contents\\n</code>:</p>\n<pre><code>{\n  \"deletions\" [\n    {\n      \"path\": \"docs/README.txt\",\n    }\n  ],\n  \"additions\" [\n    {\n      \"path\": \"newdocs/README.txt\",\n      \"contents\": base64encode(\"new contents\\n\")\n    }\n  ]\n}.\n</code></pre>\n</li>\n</ol>",
      "inputFields": [
        {
          "name": "additions",
          "description": "<p>File to add or change.</p>",
          "type": "[FileAddition!]",
          "id": "fileaddition",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#fileaddition"
        },
        {
          "name": "deletions",
          "description": "<p>Files to delete.</p>",
          "type": "[FileDeletion!]",
          "id": "filedeletion",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#filedeletion"
        }
      ]
    },
    {
      "name": "FileDeletion",
      "kind": "inputObjects",
      "id": "filedeletion",
      "href": "/graphql/reference/input-objects#filedeletion",
      "description": "<p>A command to delete the file at the given path as part of a commit.</p>",
      "inputFields": [
        {
          "name": "path",
          "description": "<p>The path to delete.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "FollowOrganizationInput",
      "kind": "inputObjects",
      "id": "followorganizationinput",
      "href": "/graphql/reference/input-objects#followorganizationinput",
      "description": "<p>Autogenerated input type of FollowOrganization.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationId",
          "description": "<p>ID of the organization to follow.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "FollowUserInput",
      "kind": "inputObjects",
      "id": "followuserinput",
      "href": "/graphql/reference/input-objects#followuserinput",
      "description": "<p>Autogenerated input type of FollowUser.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userId",
          "description": "<p>ID of the user to follow.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "GistOrder",
      "kind": "inputObjects",
      "id": "gistorder",
      "href": "/graphql/reference/input-objects#gistorder",
      "description": "<p>Ordering options for gist connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order repositories by.</p>",
          "type": "GistOrderField!",
          "id": "gistorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#gistorderfield"
        }
      ]
    },
    {
      "name": "GrantEnterpriseOrganizationsMigratorRoleInput",
      "kind": "inputObjects",
      "id": "grantenterpriseorganizationsmigratorroleinput",
      "href": "/graphql/reference/input-objects#grantenterpriseorganizationsmigratorroleinput",
      "description": "<p>Autogenerated input type of GrantEnterpriseOrganizationsMigratorRole.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise to which all organizations managed by it will be granted the migrator role.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "login",
          "description": "<p>The login of the user to grant the migrator role.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "GrantMigratorRoleInput",
      "kind": "inputObjects",
      "id": "grantmigratorroleinput",
      "href": "/graphql/reference/input-objects#grantmigratorroleinput",
      "description": "<p>Autogenerated input type of GrantMigratorRole.</p>",
      "inputFields": [
        {
          "name": "actor",
          "description": "<p>The user login or Team slug to grant the migrator role.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorType",
          "description": "<p>Specifies the type of the actor, can be either USER or TEAM.</p>",
          "type": "ActorType!",
          "id": "actortype",
          "kind": "enums",
          "href": "/graphql/reference/enums#actortype"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization that the user/team belongs to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ImportProjectInput",
      "kind": "inputObjects",
      "id": "importprojectinput",
      "href": "/graphql/reference/input-objects#importprojectinput",
      "description": "<p>Autogenerated input type of ImportProject.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The description of Project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "columnImports",
          "description": "<p>A list of columns containing issues and pull requests.</p>",
          "type": "[ProjectColumnImport!]!",
          "id": "projectcolumnimport",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#projectcolumnimport"
        },
        {
          "name": "name",
          "description": "<p>The name of Project.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerName",
          "description": "<p>The name of the Organization or User to create the Project under.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "public",
          "description": "<p>Whether the Project is public or not.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "IpAllowListEntryOrder",
      "kind": "inputObjects",
      "id": "ipallowlistentryorder",
      "href": "/graphql/reference/input-objects#ipallowlistentryorder",
      "description": "<p>Ordering options for IP allow list entry connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order IP allow list entries by.</p>",
          "type": "IpAllowListEntryOrderField!",
          "id": "ipallowlistentryorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#ipallowlistentryorderfield"
        }
      ]
    },
    {
      "name": "IssueCommentOrder",
      "kind": "inputObjects",
      "id": "issuecommentorder",
      "href": "/graphql/reference/input-objects#issuecommentorder",
      "description": "<p>Ways in which lists of issue comments can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order issue comments by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order issue comments by.</p>",
          "type": "IssueCommentOrderField!",
          "id": "issuecommentorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuecommentorderfield"
        }
      ]
    },
    {
      "name": "IssueFilters",
      "kind": "inputObjects",
      "id": "issuefilters",
      "href": "/graphql/reference/input-objects#issuefilters",
      "description": "<p>Ways in which to filter lists of issues.</p>",
      "inputFields": [
        {
          "name": "assignee",
          "description": "<p>List issues assigned to given name. Pass in <code>null</code> for issues with no assigned\nuser, and <code>*</code> for issues assigned to any user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdBy",
          "description": "<p>List issues created by given name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labels",
          "description": "<p>List issues where the list of label names exist on the issue.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "mentioned",
          "description": "<p>List issues where the given name is mentioned in the issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "milestone",
          "description": "<p>List issues by given milestone argument. If an string representation of an\ninteger is passed, it should refer to a milestone by its database ID. Pass in\n<code>null</code> for issues with no milestone, and <code>*</code> for issues that are assigned to any milestone.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "milestoneNumber",
          "description": "<p>List issues by given milestone argument. If an string representation of an\ninteger is passed, it should refer to a milestone by its number field. Pass in\n<code>null</code> for issues with no milestone, and <code>*</code> for issues that are assigned to any milestone.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "since",
          "description": "<p>List issues that have been updated at or after the given date.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "states",
          "description": "<p>List issues filtered by the list of states given.</p>",
          "type": "[IssueState!]",
          "id": "issuestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuestate"
        },
        {
          "name": "viewerSubscribed",
          "description": "<p>List issues subscribed to by viewer.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "IssueOrder",
      "kind": "inputObjects",
      "id": "issueorder",
      "href": "/graphql/reference/input-objects#issueorder",
      "description": "<p>Ways in which lists of issues can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order issues by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order issues by.</p>",
          "type": "IssueOrderField!",
          "id": "issueorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#issueorderfield"
        }
      ]
    },
    {
      "name": "LabelOrder",
      "kind": "inputObjects",
      "id": "labelorder",
      "href": "/graphql/reference/input-objects#labelorder",
      "description": "<p>Ways in which lists of labels can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order labels by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order labels by.</p>",
          "type": "LabelOrderField!",
          "id": "labelorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#labelorderfield"
        }
      ]
    },
    {
      "name": "LanguageOrder",
      "kind": "inputObjects",
      "id": "languageorder",
      "href": "/graphql/reference/input-objects#languageorder",
      "description": "<p>Ordering options for language connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order languages by.</p>",
          "type": "LanguageOrderField!",
          "id": "languageorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#languageorderfield"
        }
      ]
    },
    {
      "name": "LinkProjectV2ToRepositoryInput",
      "kind": "inputObjects",
      "id": "linkprojectv2torepositoryinput",
      "href": "/graphql/reference/input-objects#linkprojectv2torepositoryinput",
      "description": "<p>Autogenerated input type of LinkProjectV2ToRepository.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the project to link to the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the repository to link to the project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "LinkProjectV2ToTeamInput",
      "kind": "inputObjects",
      "id": "linkprojectv2toteaminput",
      "href": "/graphql/reference/input-objects#linkprojectv2toteaminput",
      "description": "<p>Autogenerated input type of LinkProjectV2ToTeam.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the project to link to the team.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "teamId",
          "description": "<p>The ID of the team to link to the project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "LinkRepositoryToProjectInput",
      "kind": "inputObjects",
      "id": "linkrepositorytoprojectinput",
      "href": "/graphql/reference/input-objects#linkrepositorytoprojectinput",
      "description": "<p>Autogenerated input type of LinkRepositoryToProject.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to link to a Repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the Repository to link to a Project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "LockLockableInput",
      "kind": "inputObjects",
      "id": "locklockableinput",
      "href": "/graphql/reference/input-objects#locklockableinput",
      "description": "<p>Autogenerated input type of LockLockable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "lockReason",
          "description": "<p>A reason for why the item will be locked.</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "lockableId",
          "description": "<p>ID of the item to be locked.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MannequinOrder",
      "kind": "inputObjects",
      "id": "mannequinorder",
      "href": "/graphql/reference/input-objects#mannequinorder",
      "description": "<p>Ordering options for mannequins.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order mannequins by.</p>",
          "type": "MannequinOrderField!",
          "id": "mannequinorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#mannequinorderfield"
        }
      ]
    },
    {
      "name": "MarkDiscussionCommentAsAnswerInput",
      "kind": "inputObjects",
      "id": "markdiscussioncommentasanswerinput",
      "href": "/graphql/reference/input-objects#markdiscussioncommentasanswerinput",
      "description": "<p>Autogenerated input type of MarkDiscussionCommentAsAnswer.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the discussion comment to mark as an answer.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MarkFileAsViewedInput",
      "kind": "inputObjects",
      "id": "markfileasviewedinput",
      "href": "/graphql/reference/input-objects#markfileasviewedinput",
      "description": "<p>Autogenerated input type of MarkFileAsViewed.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>The path of the file to mark as viewed.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Node ID of the pull request.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MarkProjectV2AsTemplateInput",
      "kind": "inputObjects",
      "id": "markprojectv2astemplateinput",
      "href": "/graphql/reference/input-objects#markprojectv2astemplateinput",
      "description": "<p>Autogenerated input type of MarkProjectV2AsTemplate.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to mark as a template.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MarkPullRequestReadyForReviewInput",
      "kind": "inputObjects",
      "id": "markpullrequestreadyforreviewinput",
      "href": "/graphql/reference/input-objects#markpullrequestreadyforreviewinput",
      "description": "<p>Autogenerated input type of MarkPullRequestReadyForReview.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to be marked as ready for review.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MergeBranchInput",
      "kind": "inputObjects",
      "id": "mergebranchinput",
      "href": "/graphql/reference/input-objects#mergebranchinput",
      "description": "<p>Autogenerated input type of MergeBranch.</p>",
      "inputFields": [
        {
          "name": "base",
          "description": "<p>The name of the base branch that the provided head will be merged into.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitMessage",
          "description": "<p>Message to use for the merge commit. If omitted, a default will be used.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "head",
          "description": "<p>The head to merge into the base branch. This can be a branch name or a commit GitObjectID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the Repository containing the base branch that will be modified.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MergePullRequestInput",
      "kind": "inputObjects",
      "id": "mergepullrequestinput",
      "href": "/graphql/reference/input-objects#mergepullrequestinput",
      "description": "<p>Autogenerated input type of MergePullRequest.</p>",
      "inputFields": [
        {
          "name": "authorEmail",
          "description": "<p>The email address to associate with this merge.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitBody",
          "description": "<p>Commit body to use for the merge commit; if omitted, a default message will be used.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitHeadline",
          "description": "<p>Commit headline to use for the merge commit; if omitted, a default message will be used.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "expectedHeadOid",
          "description": "<p>OID that the pull request head ref must match to allow merge; if omitted, no check is performed.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "mergeMethod",
          "description": "<p>The merge method to use. If omitted, defaults to 'MERGE'.</p>",
          "type": "PullRequestMergeMethod",
          "id": "pullrequestmergemethod",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestmergemethod"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to be merged.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MilestoneOrder",
      "kind": "inputObjects",
      "id": "milestoneorder",
      "href": "/graphql/reference/input-objects#milestoneorder",
      "description": "<p>Ordering options for milestone connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order milestones by.</p>",
          "type": "MilestoneOrderField!",
          "id": "milestoneorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#milestoneorderfield"
        }
      ]
    },
    {
      "name": "MinimizeCommentInput",
      "kind": "inputObjects",
      "id": "minimizecommentinput",
      "href": "/graphql/reference/input-objects#minimizecommentinput",
      "description": "<p>Autogenerated input type of MinimizeComment.</p>",
      "inputFields": [
        {
          "name": "classifier",
          "description": "<p>The classification of comment.</p>",
          "type": "ReportedContentClassifiers!",
          "id": "reportedcontentclassifiers",
          "kind": "enums",
          "href": "/graphql/reference/enums#reportedcontentclassifiers"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MoveProjectCardInput",
      "kind": "inputObjects",
      "id": "moveprojectcardinput",
      "href": "/graphql/reference/input-objects#moveprojectcardinput",
      "description": "<p>Autogenerated input type of MoveProjectCard.</p>",
      "inputFields": [
        {
          "name": "afterCardId",
          "description": "<p>Place the new card after the card with this id. Pass null to place it at the top.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "cardId",
          "description": "<p>The id of the card to move.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "columnId",
          "description": "<p>The id of the column to move it into.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MoveProjectColumnInput",
      "kind": "inputObjects",
      "id": "moveprojectcolumninput",
      "href": "/graphql/reference/input-objects#moveprojectcolumninput",
      "description": "<p>Autogenerated input type of MoveProjectColumn.</p>",
      "inputFields": [
        {
          "name": "afterColumnId",
          "description": "<p>Place the new column after the column with this id. Pass null to place it at the front.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "columnId",
          "description": "<p>The id of the column to move.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "OrgEnterpriseOwnerOrder",
      "kind": "inputObjects",
      "id": "orgenterpriseownerorder",
      "href": "/graphql/reference/input-objects#orgenterpriseownerorder",
      "description": "<p>Ordering options for an organization's enterprise owner connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order enterprise owners by.</p>",
          "type": "OrgEnterpriseOwnerOrderField!",
          "id": "orgenterpriseownerorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#orgenterpriseownerorderfield"
        }
      ]
    },
    {
      "name": "OrganizationOrder",
      "kind": "inputObjects",
      "id": "organizationorder",
      "href": "/graphql/reference/input-objects#organizationorder",
      "description": "<p>Ordering options for organization connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order organizations by.</p>",
          "type": "OrganizationOrderField!",
          "id": "organizationorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationorderfield"
        }
      ]
    },
    {
      "name": "PackageFileOrder",
      "kind": "inputObjects",
      "id": "packagefileorder",
      "href": "/graphql/reference/input-objects#packagefileorder",
      "description": "<p>Ways in which lists of package files can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order package files by the specified field.</p>",
          "type": "OrderDirection",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order package files by.</p>",
          "type": "PackageFileOrderField",
          "id": "packagefileorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#packagefileorderfield"
        }
      ]
    },
    {
      "name": "PackageOrder",
      "kind": "inputObjects",
      "id": "packageorder",
      "href": "/graphql/reference/input-objects#packageorder",
      "description": "<p>Ways in which lists of packages can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order packages by the specified field.</p>",
          "type": "OrderDirection",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order packages by.</p>",
          "type": "PackageOrderField",
          "id": "packageorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#packageorderfield"
        }
      ]
    },
    {
      "name": "PackageVersionOrder",
      "kind": "inputObjects",
      "id": "packageversionorder",
      "href": "/graphql/reference/input-objects#packageversionorder",
      "description": "<p>Ways in which lists of package versions can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order package versions by the specified field.</p>",
          "type": "OrderDirection",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order package versions by.</p>",
          "type": "PackageVersionOrderField",
          "id": "packageversionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#packageversionorderfield"
        }
      ]
    },
    {
      "name": "PinIssueInput",
      "kind": "inputObjects",
      "id": "pinissueinput",
      "href": "/graphql/reference/input-objects#pinissueinput",
      "description": "<p>Autogenerated input type of PinIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>The ID of the issue to be pinned.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ProjectCardImport",
      "kind": "inputObjects",
      "id": "projectcardimport",
      "href": "/graphql/reference/input-objects#projectcardimport",
      "description": "<p>An issue or PR and its owning repository to be used in a project card.</p>",
      "inputFields": [
        {
          "name": "number",
          "description": "<p>The issue or pull request number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "repository",
          "description": "<p>Repository name with owner (owner/repository).</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ProjectColumnImport",
      "kind": "inputObjects",
      "id": "projectcolumnimport",
      "href": "/graphql/reference/input-objects#projectcolumnimport",
      "description": "<p>A project column and a list of its issues and PRs.</p>",
      "inputFields": [
        {
          "name": "columnName",
          "description": "<p>The name of the column.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issues",
          "description": "<p>A list of issues and pull requests in the column.</p>",
          "type": "[ProjectCardImport!]",
          "id": "projectcardimport",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#projectcardimport"
        },
        {
          "name": "position",
          "description": "<p>The position of the column, starting from 0.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectOrder",
      "kind": "inputObjects",
      "id": "projectorder",
      "href": "/graphql/reference/input-objects#projectorder",
      "description": "<p>Ways in which lists of projects can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order projects by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order projects by.</p>",
          "type": "ProjectOrderField!",
          "id": "projectorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectorderfield"
        }
      ]
    },
    {
      "name": "ProjectV2Collaborator",
      "kind": "inputObjects",
      "id": "projectv2collaborator",
      "href": "/graphql/reference/input-objects#projectv2collaborator",
      "description": "<p>A collaborator to update on a project. Only one of the userId or teamId should be provided.</p>",
      "inputFields": [
        {
          "name": "role",
          "description": "<p>The role to grant the collaborator.</p>",
          "type": "ProjectV2Roles!",
          "id": "projectv2roles",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2roles"
        },
        {
          "name": "teamId",
          "description": "<p>The ID of the team as a collaborator.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "userId",
          "description": "<p>The ID of the user as a collaborator.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ProjectV2FieldOrder",
      "kind": "inputObjects",
      "id": "projectv2fieldorder",
      "href": "/graphql/reference/input-objects#projectv2fieldorder",
      "description": "<p>Ordering options for project v2 field connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order the project v2 fields by.</p>",
          "type": "ProjectV2FieldOrderField!",
          "id": "projectv2fieldorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2fieldorderfield"
        }
      ]
    },
    {
      "name": "ProjectV2FieldValue",
      "kind": "inputObjects",
      "id": "projectv2fieldvalue",
      "href": "/graphql/reference/input-objects#projectv2fieldvalue",
      "description": "<p>The values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time.</p>",
      "inputFields": [
        {
          "name": "date",
          "description": "<p>The ISO 8601 date to set on the field.</p>",
          "type": "Date",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "iterationId",
          "description": "<p>The id of the iteration to set on the field.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "number",
          "description": "<p>The number to set on the field.</p>",
          "type": "Float",
          "id": "float",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#float"
        },
        {
          "name": "singleSelectOptionId",
          "description": "<p>The id of the single select option to set on the field.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "text",
          "description": "<p>The text to set on the field.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ProjectV2ItemFieldValueOrder",
      "kind": "inputObjects",
      "id": "projectv2itemfieldvalueorder",
      "href": "/graphql/reference/input-objects#projectv2itemfieldvalueorder",
      "description": "<p>Ordering options for project v2 item field value connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order the project v2 item field values by.</p>",
          "type": "ProjectV2ItemFieldValueOrderField!",
          "id": "projectv2itemfieldvalueorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2itemfieldvalueorderfield"
        }
      ]
    },
    {
      "name": "ProjectV2ItemOrder",
      "kind": "inputObjects",
      "id": "projectv2itemorder",
      "href": "/graphql/reference/input-objects#projectv2itemorder",
      "description": "<p>Ordering options for project v2 item connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order the project v2 items by.</p>",
          "type": "ProjectV2ItemOrderField!",
          "id": "projectv2itemorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2itemorderfield"
        }
      ]
    },
    {
      "name": "ProjectV2Order",
      "kind": "inputObjects",
      "id": "projectv2order",
      "href": "/graphql/reference/input-objects#projectv2order",
      "description": "<p>Ways in which lists of projects can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order projects by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order projects by.</p>",
          "type": "ProjectV2OrderField!",
          "id": "projectv2orderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2orderfield"
        }
      ]
    },
    {
      "name": "ProjectV2SingleSelectFieldOptionInput",
      "kind": "inputObjects",
      "id": "projectv2singleselectfieldoptioninput",
      "href": "/graphql/reference/input-objects#projectv2singleselectfieldoptioninput",
      "description": "<p>Represents a single select field option.</p>",
      "inputFields": [
        {
          "name": "color",
          "description": "<p>The display color of the option.</p>",
          "type": "ProjectV2SingleSelectFieldOptionColor!",
          "id": "projectv2singleselectfieldoptioncolor",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2singleselectfieldoptioncolor"
        },
        {
          "name": "description",
          "description": "<p>The description text of the option.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the option.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ProjectV2ViewOrder",
      "kind": "inputObjects",
      "id": "projectv2vieworder",
      "href": "/graphql/reference/input-objects#projectv2vieworder",
      "description": "<p>Ordering options for project v2 view connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order the project v2 views by.</p>",
          "type": "ProjectV2ViewOrderField!",
          "id": "projectv2vieworderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2vieworderfield"
        }
      ]
    },
    {
      "name": "ProjectV2WorkflowOrder",
      "kind": "inputObjects",
      "id": "projectv2workfloworder",
      "href": "/graphql/reference/input-objects#projectv2workfloworder",
      "description": "<p>Ordering options for project v2 workflows connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order the project v2 workflows by.</p>",
          "type": "ProjectV2WorkflowsOrderField!",
          "id": "projectv2workflowsorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectv2workflowsorderfield"
        }
      ]
    },
    {
      "name": "PullRequestOrder",
      "kind": "inputObjects",
      "id": "pullrequestorder",
      "href": "/graphql/reference/input-objects#pullrequestorder",
      "description": "<p>Ways in which lists of issues can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order pull requests by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order pull requests by.</p>",
          "type": "PullRequestOrderField!",
          "id": "pullrequestorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestorderfield"
        }
      ]
    },
    {
      "name": "ReactionOrder",
      "kind": "inputObjects",
      "id": "reactionorder",
      "href": "/graphql/reference/input-objects#reactionorder",
      "description": "<p>Ways in which lists of reactions can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order reactions by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order reactions by.</p>",
          "type": "ReactionOrderField!",
          "id": "reactionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactionorderfield"
        }
      ]
    },
    {
      "name": "RefOrder",
      "kind": "inputObjects",
      "id": "reforder",
      "href": "/graphql/reference/input-objects#reforder",
      "description": "<p>Ways in which lists of git refs can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order refs by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order refs by.</p>",
          "type": "RefOrderField!",
          "id": "reforderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#reforderfield"
        }
      ]
    },
    {
      "name": "RefUpdate",
      "kind": "inputObjects",
      "id": "refupdate",
      "href": "/graphql/reference/input-objects#refupdate",
      "description": "<p>A ref update.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Update refs preview update multiple refs in a single operation preview",
        "description": "This preview adds support for updating multiple refs in a single operation.",
        "toggled_by": "update-refs-preview",
        "toggled_on": [
          "Mutation.updateRefs",
          "GitRefname",
          "RefUpdate"
        ],
        "owning_teams": [
          "@github/repos"
        ],
        "accept_header": "application/vnd.github.update-refs-preview+json",
        "href": "/graphql/overview/schema-previews#update-refs-preview-update-multiple-refs-in-a-single-operation-preview"
      },
      "inputFields": [
        {
          "name": "afterOid",
          "description": "<p>The value this ref should be updated to.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "beforeOid",
          "description": "<p>The value this ref needs to point to before the update.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "force",
          "description": "<p>Force a non fast-forward update.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>The fully qualified name of the ref to be update. For example <code>refs/heads/branch-name</code>.</p>",
          "type": "GitRefname!",
          "id": "gitrefname",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitrefname"
        }
      ]
    },
    {
      "name": "RegenerateVerifiableDomainTokenInput",
      "kind": "inputObjects",
      "id": "regenerateverifiabledomaintokeninput",
      "href": "/graphql/reference/input-objects#regenerateverifiabledomaintokeninput",
      "description": "<p>Autogenerated input type of RegenerateVerifiableDomainToken.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the verifiable domain to regenerate the verification token of.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RejectDeploymentsInput",
      "kind": "inputObjects",
      "id": "rejectdeploymentsinput",
      "href": "/graphql/reference/input-objects#rejectdeploymentsinput",
      "description": "<p>Autogenerated input type of RejectDeployments.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "comment",
          "description": "<p>Optional comment for rejecting deployments.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environmentIds",
          "description": "<p>The ids of environments to reject deployments.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "workflowRunId",
          "description": "<p>The node ID of the workflow run containing the pending deployments.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ReleaseOrder",
      "kind": "inputObjects",
      "id": "releaseorder",
      "href": "/graphql/reference/input-objects#releaseorder",
      "description": "<p>Ways in which lists of releases can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order releases by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order releases by.</p>",
          "type": "ReleaseOrderField!",
          "id": "releaseorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#releaseorderfield"
        }
      ]
    },
    {
      "name": "RemoveAssigneesFromAssignableInput",
      "kind": "inputObjects",
      "id": "removeassigneesfromassignableinput",
      "href": "/graphql/reference/input-objects#removeassigneesfromassignableinput",
      "description": "<p>Autogenerated input type of RemoveAssigneesFromAssignable.</p>",
      "inputFields": [
        {
          "name": "assignableId",
          "description": "<p>The id of the assignable object to remove assignees from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "assigneeIds",
          "description": "<p>The id of users to remove as assignees.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RemoveEnterpriseAdminInput",
      "kind": "inputObjects",
      "id": "removeenterpriseadmininput",
      "href": "/graphql/reference/input-objects#removeenterpriseadmininput",
      "description": "<p>Autogenerated input type of RemoveEnterpriseAdmin.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The Enterprise ID from which to remove the administrator.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "login",
          "description": "<p>The login of the user to remove as an administrator.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RemoveLabelsFromLabelableInput",
      "kind": "inputObjects",
      "id": "removelabelsfromlabelableinput",
      "href": "/graphql/reference/input-objects#removelabelsfromlabelableinput",
      "description": "<p>Autogenerated input type of RemoveLabelsFromLabelable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labelIds",
          "description": "<p>The ids of labels to remove.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "labelableId",
          "description": "<p>The id of the Labelable to remove labels from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RemoveOutsideCollaboratorInput",
      "kind": "inputObjects",
      "id": "removeoutsidecollaboratorinput",
      "href": "/graphql/reference/input-objects#removeoutsidecollaboratorinput",
      "description": "<p>Autogenerated input type of RemoveOutsideCollaborator.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization to remove the outside collaborator from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "userId",
          "description": "<p>The ID of the outside collaborator to remove.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RemoveReactionInput",
      "kind": "inputObjects",
      "id": "removereactioninput",
      "href": "/graphql/reference/input-objects#removereactioninput",
      "description": "<p>Autogenerated input type of RemoveReaction.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "content",
          "description": "<p>The name of the emoji reaction to remove.</p>",
          "type": "ReactionContent!",
          "id": "reactioncontent",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactioncontent"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RemoveStarInput",
      "kind": "inputObjects",
      "id": "removestarinput",
      "href": "/graphql/reference/input-objects#removestarinput",
      "description": "<p>Autogenerated input type of RemoveStar.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "starrableId",
          "description": "<p>The Starrable ID to unstar.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RemoveUpvoteInput",
      "kind": "inputObjects",
      "id": "removeupvoteinput",
      "href": "/graphql/reference/input-objects#removeupvoteinput",
      "description": "<p>Autogenerated input type of RemoveUpvote.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the discussion or comment to remove upvote.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ReopenDiscussionInput",
      "kind": "inputObjects",
      "id": "reopendiscussioninput",
      "href": "/graphql/reference/input-objects#reopendiscussioninput",
      "description": "<p>Autogenerated input type of ReopenDiscussion.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "discussionId",
          "description": "<p>ID of the discussion to be reopened.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ReopenIssueInput",
      "kind": "inputObjects",
      "id": "reopenissueinput",
      "href": "/graphql/reference/input-objects#reopenissueinput",
      "description": "<p>Autogenerated input type of ReopenIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>ID of the issue to be opened.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ReopenPullRequestInput",
      "kind": "inputObjects",
      "id": "reopenpullrequestinput",
      "href": "/graphql/reference/input-objects#reopenpullrequestinput",
      "description": "<p>Autogenerated input type of ReopenPullRequest.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to be reopened.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RepositoryInvitationOrder",
      "kind": "inputObjects",
      "id": "repositoryinvitationorder",
      "href": "/graphql/reference/input-objects#repositoryinvitationorder",
      "description": "<p>Ordering options for repository invitation connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order repository invitations by.</p>",
          "type": "RepositoryInvitationOrderField!",
          "id": "repositoryinvitationorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositoryinvitationorderfield"
        }
      ]
    },
    {
      "name": "RepositoryMigrationOrder",
      "kind": "inputObjects",
      "id": "repositorymigrationorder",
      "href": "/graphql/reference/input-objects#repositorymigrationorder",
      "description": "<p>Ordering options for repository migrations.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "RepositoryMigrationOrderDirection!",
          "id": "repositorymigrationorderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorymigrationorderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order repository migrations by.</p>",
          "type": "RepositoryMigrationOrderField!",
          "id": "repositorymigrationorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorymigrationorderfield"
        }
      ]
    },
    {
      "name": "RepositoryOrder",
      "kind": "inputObjects",
      "id": "repositoryorder",
      "href": "/graphql/reference/input-objects#repositoryorder",
      "description": "<p>Ordering options for repository connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order repositories by.</p>",
          "type": "RepositoryOrderField!",
          "id": "repositoryorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositoryorderfield"
        }
      ]
    },
    {
      "name": "RequestReviewsInput",
      "kind": "inputObjects",
      "id": "requestreviewsinput",
      "href": "/graphql/reference/input-objects#requestreviewsinput",
      "description": "<p>Autogenerated input type of RequestReviews.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Node ID of the pull request to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "teamIds",
          "description": "<p>The Node IDs of the team to request.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "union",
          "description": "<p>Add users to the set rather than replace.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "userIds",
          "description": "<p>The Node IDs of the user to request.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RequiredStatusCheckInput",
      "kind": "inputObjects",
      "id": "requiredstatuscheckinput",
      "href": "/graphql/reference/input-objects#requiredstatuscheckinput",
      "description": "<p>Specifies the attributes for a new or updated required status check.</p>",
      "inputFields": [
        {
          "name": "appId",
          "description": "<p>The ID of the App that must set the status in order for it to be accepted.\nOmit this value to use whichever app has recently been setting this status, or\nuse \"any\" to allow any app to set the status.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "context",
          "description": "<p>Status check context that must pass for commits to be accepted to the matching branch.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RerequestCheckSuiteInput",
      "kind": "inputObjects",
      "id": "rerequestchecksuiteinput",
      "href": "/graphql/reference/input-objects#rerequestchecksuiteinput",
      "description": "<p>Autogenerated input type of RerequestCheckSuite.</p>",
      "inputFields": [
        {
          "name": "checkSuiteId",
          "description": "<p>The Node ID of the check suite.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ResolveReviewThreadInput",
      "kind": "inputObjects",
      "id": "resolvereviewthreadinput",
      "href": "/graphql/reference/input-objects#resolvereviewthreadinput",
      "description": "<p>Autogenerated input type of ResolveReviewThread.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "threadId",
          "description": "<p>The ID of the thread to resolve.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RevertPullRequestInput",
      "kind": "inputObjects",
      "id": "revertpullrequestinput",
      "href": "/graphql/reference/input-objects#revertpullrequestinput",
      "description": "<p>Autogenerated input type of RevertPullRequest.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The description of the revert pull request.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "draft",
          "description": "<p>Indicates whether the revert pull request should be a draft.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The ID of the pull request to revert.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the revert pull request.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RevokeEnterpriseOrganizationsMigratorRoleInput",
      "kind": "inputObjects",
      "id": "revokeenterpriseorganizationsmigratorroleinput",
      "href": "/graphql/reference/input-objects#revokeenterpriseorganizationsmigratorroleinput",
      "description": "<p>Autogenerated input type of RevokeEnterpriseOrganizationsMigratorRole.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise to which all organizations managed by it will be granted the migrator role.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "login",
          "description": "<p>The login of the user to revoke the migrator role.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RevokeMigratorRoleInput",
      "kind": "inputObjects",
      "id": "revokemigratorroleinput",
      "href": "/graphql/reference/input-objects#revokemigratorroleinput",
      "description": "<p>Autogenerated input type of RevokeMigratorRole.</p>",
      "inputFields": [
        {
          "name": "actor",
          "description": "<p>The user login or Team slug to revoke the migrator role from.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "actorType",
          "description": "<p>Specifies the type of the actor, can be either USER or TEAM.</p>",
          "type": "ActorType!",
          "id": "actortype",
          "kind": "enums",
          "href": "/graphql/reference/enums#actortype"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization that the user/team belongs to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "SavedReplyOrder",
      "kind": "inputObjects",
      "id": "savedreplyorder",
      "href": "/graphql/reference/input-objects#savedreplyorder",
      "description": "<p>Ordering options for saved reply connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order saved replies by.</p>",
          "type": "SavedReplyOrderField!",
          "id": "savedreplyorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#savedreplyorderfield"
        }
      ]
    },
    {
      "name": "StarOrder",
      "kind": "inputObjects",
      "id": "starorder",
      "href": "/graphql/reference/input-objects#starorder",
      "description": "<p>Ways in which star connections can be ordered.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order nodes.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order nodes by.</p>",
          "type": "StarOrderField!",
          "id": "starorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#starorderfield"
        }
      ]
    },
    {
      "name": "StartOrganizationMigrationInput",
      "kind": "inputObjects",
      "id": "startorganizationmigrationinput",
      "href": "/graphql/reference/input-objects#startorganizationmigrationinput",
      "description": "<p>Autogenerated input type of StartOrganizationMigration.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "sourceAccessToken",
          "description": "<p>The migration source access token.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "sourceOrgUrl",
          "description": "<p>The URL of the organization to migrate.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "targetEnterpriseId",
          "description": "<p>The ID of the enterprise the target organization belongs to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "targetOrgName",
          "description": "<p>The name of the target organization.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "StartRepositoryMigrationInput",
      "kind": "inputObjects",
      "id": "startrepositorymigrationinput",
      "href": "/graphql/reference/input-objects#startrepositorymigrationinput",
      "description": "<p>Autogenerated input type of StartRepositoryMigration.</p>",
      "inputFields": [
        {
          "name": "accessToken",
          "description": "<p>The migration source access token.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "continueOnError",
          "description": "<p>Whether to continue the migration on error. Defaults to <code>false</code>.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "gitArchiveUrl",
          "description": "<p>The signed URL to access the user-uploaded git archive.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "githubPat",
          "description": "<p>The GitHub personal access token of the user importing to the target repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "lockSource",
          "description": "<p>Whether to lock the source repository.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "metadataArchiveUrl",
          "description": "<p>The signed URL to access the user-uploaded metadata archive.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the organization that will own the imported repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryName",
          "description": "<p>The name of the imported repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "skipReleases",
          "description": "<p>Whether to skip migrating releases for the repository.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "sourceId",
          "description": "<p>The ID of the migration source.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "sourceRepositoryUrl",
          "description": "<p>The URL of the source repository.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "targetRepoVisibility",
          "description": "<p>The visibility of the imported repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SubmitPullRequestReviewInput",
      "kind": "inputObjects",
      "id": "submitpullrequestreviewinput",
      "href": "/graphql/reference/input-objects#submitpullrequestreviewinput",
      "description": "<p>Autogenerated input type of SubmitPullRequestReview.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The text field to set on the Pull Request Review.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "event",
          "description": "<p>The event to send to the Pull Request Review.</p>",
          "type": "PullRequestReviewEvent!",
          "id": "pullrequestreviewevent",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewevent"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Pull Request ID to submit any pending reviews.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Pull Request Review ID to submit.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "TeamDiscussionCommentOrder",
      "kind": "inputObjects",
      "id": "teamdiscussioncommentorder",
      "href": "/graphql/reference/input-objects#teamdiscussioncommentorder",
      "description": "<p>Ways in which team discussion comment connections can be ordered.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order nodes.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which to order nodes.</p>",
          "type": "TeamDiscussionCommentOrderField!",
          "id": "teamdiscussioncommentorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamdiscussioncommentorderfield"
        }
      ]
    },
    {
      "name": "TeamDiscussionOrder",
      "kind": "inputObjects",
      "id": "teamdiscussionorder",
      "href": "/graphql/reference/input-objects#teamdiscussionorder",
      "description": "<p>Ways in which team discussion connections can be ordered.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order nodes.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which to order nodes.</p>",
          "type": "TeamDiscussionOrderField!",
          "id": "teamdiscussionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamdiscussionorderfield"
        }
      ]
    },
    {
      "name": "TeamMemberOrder",
      "kind": "inputObjects",
      "id": "teammemberorder",
      "href": "/graphql/reference/input-objects#teammemberorder",
      "description": "<p>Ordering options for team member connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order team members by.</p>",
          "type": "TeamMemberOrderField!",
          "id": "teammemberorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teammemberorderfield"
        }
      ]
    },
    {
      "name": "TeamOrder",
      "kind": "inputObjects",
      "id": "teamorder",
      "href": "/graphql/reference/input-objects#teamorder",
      "description": "<p>Ways in which team connections can be ordered.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order nodes.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order nodes by.</p>",
          "type": "TeamOrderField!",
          "id": "teamorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamorderfield"
        }
      ]
    },
    {
      "name": "TeamRepositoryOrder",
      "kind": "inputObjects",
      "id": "teamrepositoryorder",
      "href": "/graphql/reference/input-objects#teamrepositoryorder",
      "description": "<p>Ordering options for team repository connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order repositories by.</p>",
          "type": "TeamRepositoryOrderField!",
          "id": "teamrepositoryorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamrepositoryorderfield"
        }
      ]
    },
    {
      "name": "TransferIssueInput",
      "kind": "inputObjects",
      "id": "transferissueinput",
      "href": "/graphql/reference/input-objects#transferissueinput",
      "description": "<p>Autogenerated input type of TransferIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createLabelsIfMissing",
          "description": "<p>Whether to create labels if they don't exist in the target repository (matched by name).</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issueId",
          "description": "<p>The Node ID of the issue to be transferred.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository the issue should be transferred to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnarchiveProjectV2ItemInput",
      "kind": "inputObjects",
      "id": "unarchiveprojectv2iteminput",
      "href": "/graphql/reference/input-objects#unarchiveprojectv2iteminput",
      "description": "<p>Autogenerated input type of UnarchiveProjectV2Item.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "itemId",
          "description": "<p>The ID of the ProjectV2Item to unarchive.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to archive the item from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnarchiveRepositoryInput",
      "kind": "inputObjects",
      "id": "unarchiverepositoryinput",
      "href": "/graphql/reference/input-objects#unarchiverepositoryinput",
      "description": "<p>Autogenerated input type of UnarchiveRepository.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the repository to unarchive.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnfollowOrganizationInput",
      "kind": "inputObjects",
      "id": "unfolloworganizationinput",
      "href": "/graphql/reference/input-objects#unfolloworganizationinput",
      "description": "<p>Autogenerated input type of UnfollowOrganization.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationId",
          "description": "<p>ID of the organization to unfollow.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnfollowUserInput",
      "kind": "inputObjects",
      "id": "unfollowuserinput",
      "href": "/graphql/reference/input-objects#unfollowuserinput",
      "description": "<p>Autogenerated input type of UnfollowUser.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "userId",
          "description": "<p>ID of the user to unfollow.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnlinkProjectV2FromRepositoryInput",
      "kind": "inputObjects",
      "id": "unlinkprojectv2fromrepositoryinput",
      "href": "/graphql/reference/input-objects#unlinkprojectv2fromrepositoryinput",
      "description": "<p>Autogenerated input type of UnlinkProjectV2FromRepository.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the project to unlink from the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the repository to unlink from the project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnlinkProjectV2FromTeamInput",
      "kind": "inputObjects",
      "id": "unlinkprojectv2fromteaminput",
      "href": "/graphql/reference/input-objects#unlinkprojectv2fromteaminput",
      "description": "<p>Autogenerated input type of UnlinkProjectV2FromTeam.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the project to unlink from the team.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "teamId",
          "description": "<p>The ID of the team to unlink from the project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnlinkRepositoryFromProjectInput",
      "kind": "inputObjects",
      "id": "unlinkrepositoryfromprojectinput",
      "href": "/graphql/reference/input-objects#unlinkrepositoryfromprojectinput",
      "description": "<p>Autogenerated input type of UnlinkRepositoryFromProject.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project linked to the Repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the Repository linked to the Project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnlockLockableInput",
      "kind": "inputObjects",
      "id": "unlocklockableinput",
      "href": "/graphql/reference/input-objects#unlocklockableinput",
      "description": "<p>Autogenerated input type of UnlockLockable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "lockableId",
          "description": "<p>ID of the item to be unlocked.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnmarkDiscussionCommentAsAnswerInput",
      "kind": "inputObjects",
      "id": "unmarkdiscussioncommentasanswerinput",
      "href": "/graphql/reference/input-objects#unmarkdiscussioncommentasanswerinput",
      "description": "<p>Autogenerated input type of UnmarkDiscussionCommentAsAnswer.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the discussion comment to unmark as an answer.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnmarkFileAsViewedInput",
      "kind": "inputObjects",
      "id": "unmarkfileasviewedinput",
      "href": "/graphql/reference/input-objects#unmarkfileasviewedinput",
      "description": "<p>Autogenerated input type of UnmarkFileAsViewed.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>The path of the file to mark as unviewed.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Node ID of the pull request.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnmarkIssueAsDuplicateInput",
      "kind": "inputObjects",
      "id": "unmarkissueasduplicateinput",
      "href": "/graphql/reference/input-objects#unmarkissueasduplicateinput",
      "description": "<p>Autogenerated input type of UnmarkIssueAsDuplicate.</p>",
      "inputFields": [
        {
          "name": "canonicalId",
          "description": "<p>ID of the issue or pull request currently considered canonical/authoritative/original.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "duplicateId",
          "description": "<p>ID of the issue or pull request currently marked as a duplicate.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnmarkProjectV2AsTemplateInput",
      "kind": "inputObjects",
      "id": "unmarkprojectv2astemplateinput",
      "href": "/graphql/reference/input-objects#unmarkprojectv2astemplateinput",
      "description": "<p>Autogenerated input type of UnmarkProjectV2AsTemplate.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to unmark as a template.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnminimizeCommentInput",
      "kind": "inputObjects",
      "id": "unminimizecommentinput",
      "href": "/graphql/reference/input-objects#unminimizecommentinput",
      "description": "<p>Autogenerated input type of UnminimizeComment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnpinIssueInput",
      "kind": "inputObjects",
      "id": "unpinissueinput",
      "href": "/graphql/reference/input-objects#unpinissueinput",
      "description": "<p>Autogenerated input type of UnpinIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>The ID of the issue to be unpinned.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnresolveReviewThreadInput",
      "kind": "inputObjects",
      "id": "unresolvereviewthreadinput",
      "href": "/graphql/reference/input-objects#unresolvereviewthreadinput",
      "description": "<p>Autogenerated input type of UnresolveReviewThread.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "threadId",
          "description": "<p>The ID of the thread to unresolve.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateBranchProtectionRuleInput",
      "kind": "inputObjects",
      "id": "updatebranchprotectionruleinput",
      "href": "/graphql/reference/input-objects#updatebranchprotectionruleinput",
      "description": "<p>Autogenerated input type of UpdateBranchProtectionRule.</p>",
      "inputFields": [
        {
          "name": "allowsDeletions",
          "description": "<p>Can this branch be deleted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "allowsForcePushes",
          "description": "<p>Are force pushes allowed on this branch.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "blocksCreations",
          "description": "<p>Is branch creation a protected operation.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "branchProtectionRuleId",
          "description": "<p>The global relay id of the branch protection rule to be updated.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "bypassForcePushActorIds",
          "description": "<p>A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "bypassPullRequestActorIds",
          "description": "<p>A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissesStaleReviews",
          "description": "<p>Will new commits pushed to matching branches dismiss pull request review approvals.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isAdminEnforced",
          "description": "<p>Can admins overwrite branch protection.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lockAllowsFetchAndMerge",
          "description": "<p>Whether users can pull changes from upstream when the branch is locked. Set to\n<code>true</code> to allow fork syncing. Set to <code>false</code> to prevent fork syncing.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lockBranch",
          "description": "<p>Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "pattern",
          "description": "<p>The glob-like pattern used to determine matching branches.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pushActorIds",
          "description": "<p>A list of User, Team, or App IDs allowed to push to matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "requireLastPushApproval",
          "description": "<p>Whether the most recent push must be approved by someone other than the person who pushed it.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiredApprovingReviewCount",
          "description": "<p>Number of approving reviews required to update matching branches.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "requiredDeploymentEnvironments",
          "description": "<p>The list of required deployment environments.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiredStatusCheckContexts",
          "description": "<p>List of required status check contexts that must pass for commits to be accepted to matching branches.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiredStatusChecks",
          "description": "<p>The list of required status checks.</p>",
          "type": "[RequiredStatusCheckInput!]",
          "id": "requiredstatuscheckinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#requiredstatuscheckinput"
        },
        {
          "name": "requiresApprovingReviews",
          "description": "<p>Are approving reviews required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCodeOwnerReviews",
          "description": "<p>Are reviews from code owners required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCommitSignatures",
          "description": "<p>Are commits required to be signed.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresConversationResolution",
          "description": "<p>Are conversations required to be resolved before merging.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresDeployments",
          "description": "<p>Are successful deployments required before merging.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresLinearHistory",
          "description": "<p>Are merge commits prohibited from being pushed to this branch.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStatusChecks",
          "description": "<p>Are status checks required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStrictStatusChecks",
          "description": "<p>Are branches required to be up to date before merging.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsPushes",
          "description": "<p>Is pushing to matching branches restricted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsReviewDismissals",
          "description": "<p>Is dismissal of pull request reviews restricted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "reviewDismissalActorIds",
          "description": "<p>A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "UpdateCheckRunInput",
      "kind": "inputObjects",
      "id": "updatecheckruninput",
      "href": "/graphql/reference/input-objects#updatecheckruninput",
      "description": "<p>Autogenerated input type of UpdateCheckRun.</p>",
      "inputFields": [
        {
          "name": "actions",
          "description": "<p>Possible further actions the integrator can perform, which a user may trigger.</p>",
          "type": "[CheckRunAction!]",
          "id": "checkrunaction",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunaction"
        },
        {
          "name": "checkRunId",
          "description": "<p>The node of the check.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "completedAt",
          "description": "<p>The time that the check run finished.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "conclusion",
          "description": "<p>The final conclusion of the check.</p>",
          "type": "CheckConclusionState",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "detailsUrl",
          "description": "<p>The URL of the integrator's site that has the full details of the check.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "externalId",
          "description": "<p>A reference for the run on the integrator's system.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the check.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "output",
          "description": "<p>Descriptive details about the run.</p>",
          "type": "CheckRunOutput",
          "id": "checkrunoutput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunoutput"
        },
        {
          "name": "repositoryId",
          "description": "<p>The node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "startedAt",
          "description": "<p>The time that the check run began.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "status",
          "description": "<p>The current status.</p>",
          "type": "RequestableCheckStatusState",
          "id": "requestablecheckstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#requestablecheckstatusstate"
        }
      ]
    },
    {
      "name": "UpdateCheckSuitePreferencesInput",
      "kind": "inputObjects",
      "id": "updatechecksuitepreferencesinput",
      "href": "/graphql/reference/input-objects#updatechecksuitepreferencesinput",
      "description": "<p>Autogenerated input type of UpdateCheckSuitePreferences.</p>",
      "inputFields": [
        {
          "name": "autoTriggerPreferences",
          "description": "<p>The check suite preferences to modify.</p>",
          "type": "[CheckSuiteAutoTriggerPreference!]!",
          "id": "checksuiteautotriggerpreference",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checksuiteautotriggerpreference"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateDiscussionCommentInput",
      "kind": "inputObjects",
      "id": "updatediscussioncommentinput",
      "href": "/graphql/reference/input-objects#updatediscussioncommentinput",
      "description": "<p>Autogenerated input type of UpdateDiscussionComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The new contents of the comment body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commentId",
          "description": "<p>The Node ID of the discussion comment to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateDiscussionInput",
      "kind": "inputObjects",
      "id": "updatediscussioninput",
      "href": "/graphql/reference/input-objects#updatediscussioninput",
      "description": "<p>Autogenerated input type of UpdateDiscussion.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The new contents of the discussion body.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "categoryId",
          "description": "<p>The Node ID of a discussion category within the same repository to change this discussion to.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "discussionId",
          "description": "<p>The Node ID of the discussion to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The new discussion title.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput",
      "kind": "inputObjects",
      "id": "updateenterpriseallowprivaterepositoryforkingsettinginput",
      "href": "/graphql/reference/input-objects#updateenterpriseallowprivaterepositoryforkingsettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the allow private repository forking setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "policyValue",
          "description": "<p>The value for the allow private repository forking policy on the enterprise.</p>",
          "type": "EnterpriseAllowPrivateRepositoryForkingPolicyValue",
          "id": "enterpriseallowprivaterepositoryforkingpolicyvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseallowprivaterepositoryforkingpolicyvalue"
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the allow private repository forking setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseDefaultRepositoryPermissionSettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisedefaultrepositorypermissionsettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisedefaultrepositorypermissionsettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the base repository permission setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the base repository permission setting on the enterprise.</p>",
          "type": "EnterpriseDefaultRepositoryPermissionSettingValue!",
          "id": "enterprisedefaultrepositorypermissionsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterprisedefaultrepositorypermissionsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisememberscanchangerepositoryvisibilitysettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisememberscanchangerepositoryvisibilitysettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the members can change repository visibility setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the members can change repository visibility setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseMembersCanCreateRepositoriesSettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisememberscancreaterepositoriessettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisememberscancreaterepositoriessettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the members can create repositories setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "membersCanCreateInternalRepositories",
          "description": "<p>Allow members to create internal repositories. Defaults to current value.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "membersCanCreatePrivateRepositories",
          "description": "<p>Allow members to create private repositories. Defaults to current value.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "membersCanCreatePublicRepositories",
          "description": "<p>Allow members to create public repositories. Defaults to current value.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "membersCanCreateRepositoriesPolicyEnabled",
          "description": "<p>When false, allow member organizations to set their own repository creation member privileges.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "settingValue",
          "description": "<p>Value for the members can create repositories setting on the enterprise. This\nor the granular public/private/internal allowed fields (but not both) must be provided.</p>",
          "type": "EnterpriseMembersCanCreateRepositoriesSettingValue",
          "id": "enterprisememberscancreaterepositoriessettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterprisememberscancreaterepositoriessettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseMembersCanDeleteIssuesSettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisememberscandeleteissuessettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisememberscandeleteissuessettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the members can delete issues setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the members can delete issues setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisememberscandeleterepositoriessettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisememberscandeleterepositoriessettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the members can delete repositories setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the members can delete repositories setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisememberscaninvitecollaboratorssettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisememberscaninvitecollaboratorssettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the members can invite collaborators setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the members can invite collaborators setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseMembersCanMakePurchasesSettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisememberscanmakepurchasessettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisememberscanmakepurchasessettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the members can make purchases setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the members can make purchases setting on the enterprise.</p>",
          "type": "EnterpriseMembersCanMakePurchasesSettingValue!",
          "id": "enterprisememberscanmakepurchasessettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterprisememberscanmakepurchasessettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisememberscanupdateprotectedbranchessettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisememberscanupdateprotectedbranchessettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the members can update protected branches setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the members can update protected branches setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisememberscanviewdependencyinsightssettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisememberscanviewdependencyinsightssettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the members can view dependency insights setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the members can view dependency insights setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseOrganizationProjectsSettingInput",
      "kind": "inputObjects",
      "id": "updateenterpriseorganizationprojectssettinginput",
      "href": "/graphql/reference/input-objects#updateenterpriseorganizationprojectssettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the organization projects setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the organization projects setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseOwnerOrganizationRoleInput",
      "kind": "inputObjects",
      "id": "updateenterpriseownerorganizationroleinput",
      "href": "/graphql/reference/input-objects#updateenterpriseownerorganizationroleinput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseOwnerOrganizationRole.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the Enterprise which the owner belongs to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization for membership change.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "organizationRole",
          "description": "<p>The role to assume in the organization.</p>",
          "type": "RoleInOrganization!",
          "id": "roleinorganization",
          "kind": "enums",
          "href": "/graphql/reference/enums#roleinorganization"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseProfileInput",
      "kind": "inputObjects",
      "id": "updateenterpriseprofileinput",
      "href": "/graphql/reference/input-objects#updateenterpriseprofileinput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseProfile.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "description",
          "description": "<p>The description of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The Enterprise ID to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "location",
          "description": "<p>The location of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the enterprise.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "websiteUrl",
          "description": "<p>The URL of the enterprise's website.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseRepositoryProjectsSettingInput",
      "kind": "inputObjects",
      "id": "updateenterpriserepositoryprojectssettinginput",
      "href": "/graphql/reference/input-objects#updateenterpriserepositoryprojectssettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the repository projects setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the repository projects setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseTeamDiscussionsSettingInput",
      "kind": "inputObjects",
      "id": "updateenterpriseteamdiscussionssettinginput",
      "href": "/graphql/reference/input-objects#updateenterpriseteamdiscussionssettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the team discussions setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the team discussions setting on the enterprise.</p>",
          "type": "EnterpriseEnabledDisabledSettingValue!",
          "id": "enterpriseenableddisabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenableddisabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput",
      "kind": "inputObjects",
      "id": "updateenterprisetwofactorauthenticationrequiredsettinginput",
      "href": "/graphql/reference/input-objects#updateenterprisetwofactorauthenticationrequiredsettinginput",
      "description": "<p>Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enterpriseId",
          "description": "<p>The ID of the enterprise on which to set the two factor authentication required setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the two factor authentication required setting on the enterprise.</p>",
          "type": "EnterpriseEnabledSettingValue!",
          "id": "enterpriseenabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#enterpriseenabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateEnvironmentInput",
      "kind": "inputObjects",
      "id": "updateenvironmentinput",
      "href": "/graphql/reference/input-objects#updateenvironmentinput",
      "description": "<p>Autogenerated input type of UpdateEnvironment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environmentId",
          "description": "<p>The node ID of the environment.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "reviewers",
          "description": "<p>The ids of users or teams that can approve deployments to this environment.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "waitTimer",
          "description": "<p>The wait timer in minutes.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "UpdateIpAllowListEnabledSettingInput",
      "kind": "inputObjects",
      "id": "updateipallowlistenabledsettinginput",
      "href": "/graphql/reference/input-objects#updateipallowlistenabledsettinginput",
      "description": "<p>Autogenerated input type of UpdateIpAllowListEnabledSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the owner on which to set the IP allow list enabled setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the IP allow list enabled setting.</p>",
          "type": "IpAllowListEnabledSettingValue!",
          "id": "ipallowlistenabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#ipallowlistenabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateIpAllowListEntryInput",
      "kind": "inputObjects",
      "id": "updateipallowlistentryinput",
      "href": "/graphql/reference/input-objects#updateipallowlistentryinput",
      "description": "<p>Autogenerated input type of UpdateIpAllowListEntry.</p>",
      "inputFields": [
        {
          "name": "allowListValue",
          "description": "<p>An IP address or range of addresses in CIDR notation.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ipAllowListEntryId",
          "description": "<p>The ID of the IP allow list entry to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "isActive",
          "description": "<p>Whether the IP allow list entry is active when an IP allow list is enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>An optional name for the IP allow list entry.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateIpAllowListForInstalledAppsEnabledSettingInput",
      "kind": "inputObjects",
      "id": "updateipallowlistforinstalledappsenabledsettinginput",
      "href": "/graphql/reference/input-objects#updateipallowlistforinstalledappsenabledsettinginput",
      "description": "<p>Autogenerated input type of UpdateIpAllowListForInstalledAppsEnabledSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the owner.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the IP allow list configuration for installed GitHub Apps setting.</p>",
          "type": "IpAllowListForInstalledAppsEnabledSettingValue!",
          "id": "ipallowlistforinstalledappsenabledsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#ipallowlistforinstalledappsenabledsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateIssueCommentInput",
      "kind": "inputObjects",
      "id": "updateissuecommentinput",
      "href": "/graphql/reference/input-objects#updateissuecommentinput",
      "description": "<p>Autogenerated input type of UpdateIssueComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The updated text of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the IssueComment to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateIssueInput",
      "kind": "inputObjects",
      "id": "updateissueinput",
      "href": "/graphql/reference/input-objects#updateissueinput",
      "description": "<p>Autogenerated input type of UpdateIssue.</p>",
      "inputFields": [
        {
          "name": "assigneeIds",
          "description": "<p>An array of Node IDs of users for this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "body",
          "description": "<p>The body for the issue description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the Issue to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "labelIds",
          "description": "<p>An array of Node IDs of labels for this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "milestoneId",
          "description": "<p>The Node ID of the milestone for this issue.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectIds",
          "description": "<p>An array of Node IDs for projects associated with this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "state",
          "description": "<p>The desired issue state.</p>",
          "type": "IssueState",
          "id": "issuestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuestate"
        },
        {
          "name": "title",
          "description": "<p>The title for the issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateLabelInput",
      "kind": "inputObjects",
      "id": "updatelabelinput",
      "href": "/graphql/reference/input-objects#updatelabelinput",
      "description": "<p>Autogenerated input type of UpdateLabel.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "color",
          "description": "<p>A 6 character hex code, without the leading #, identifying the updated color of the label.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "description",
          "description": "<p>A brief description of the label, such as its purpose.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the label to be updated.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "name",
          "description": "<p>The updated name of the label.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateNotificationRestrictionSettingInput",
      "kind": "inputObjects",
      "id": "updatenotificationrestrictionsettinginput",
      "href": "/graphql/reference/input-objects#updatenotificationrestrictionsettinginput",
      "description": "<p>Autogenerated input type of UpdateNotificationRestrictionSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The ID of the owner on which to set the restrict notifications setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "settingValue",
          "description": "<p>The value for the restrict notifications setting.</p>",
          "type": "NotificationRestrictionSettingValue!",
          "id": "notificationrestrictionsettingvalue",
          "kind": "enums",
          "href": "/graphql/reference/enums#notificationrestrictionsettingvalue"
        }
      ]
    },
    {
      "name": "UpdateOrganizationAllowPrivateRepositoryForkingSettingInput",
      "kind": "inputObjects",
      "id": "updateorganizationallowprivaterepositoryforkingsettinginput",
      "href": "/graphql/reference/input-objects#updateorganizationallowprivaterepositoryforkingsettinginput",
      "description": "<p>Autogenerated input type of UpdateOrganizationAllowPrivateRepositoryForkingSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "forkingEnabled",
          "description": "<p>Enable forking of private repositories in the organization?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization on which to set the allow private repository forking setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateOrganizationWebCommitSignoffSettingInput",
      "kind": "inputObjects",
      "id": "updateorganizationwebcommitsignoffsettinginput",
      "href": "/graphql/reference/input-objects#updateorganizationwebcommitsignoffsettinginput",
      "description": "<p>Autogenerated input type of UpdateOrganizationWebCommitSignoffSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization on which to set the web commit signoff setting.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "webCommitSignoffRequired",
          "description": "<p>Enable signoff on web-based commits for repositories in the organization?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "UpdateProjectCardInput",
      "kind": "inputObjects",
      "id": "updateprojectcardinput",
      "href": "/graphql/reference/input-objects#updateprojectcardinput",
      "description": "<p>Autogenerated input type of UpdateProjectCard.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isArchived",
          "description": "<p>Whether or not the ProjectCard should be archived.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "note",
          "description": "<p>The note of ProjectCard.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectCardId",
          "description": "<p>The ProjectCard ID to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateProjectColumnInput",
      "kind": "inputObjects",
      "id": "updateprojectcolumninput",
      "href": "/graphql/reference/input-objects#updateprojectcolumninput",
      "description": "<p>Autogenerated input type of UpdateProjectColumn.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of project column.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectColumnId",
          "description": "<p>The ProjectColumn ID to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateProjectInput",
      "kind": "inputObjects",
      "id": "updateprojectinput",
      "href": "/graphql/reference/input-objects#updateprojectinput",
      "description": "<p>Autogenerated input type of UpdateProject.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The description of project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The Project ID to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "public",
          "description": "<p>Whether the project is public or not.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "state",
          "description": "<p>Whether the project is open or closed.</p>",
          "type": "ProjectState",
          "id": "projectstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectstate"
        }
      ]
    },
    {
      "name": "UpdateProjectV2CollaboratorsInput",
      "kind": "inputObjects",
      "id": "updateprojectv2collaboratorsinput",
      "href": "/graphql/reference/input-objects#updateprojectv2collaboratorsinput",
      "description": "<p>Autogenerated input type of UpdateProjectV2Collaborators.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "collaborators",
          "description": "<p>The collaborators to update.</p>",
          "type": "[ProjectV2Collaborator!]!",
          "id": "projectv2collaborator",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#projectv2collaborator"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the project to update the collaborators for.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateProjectV2DraftIssueInput",
      "kind": "inputObjects",
      "id": "updateprojectv2draftissueinput",
      "href": "/graphql/reference/input-objects#updateprojectv2draftissueinput",
      "description": "<p>Autogenerated input type of UpdateProjectV2DraftIssue.</p>",
      "inputFields": [
        {
          "name": "assigneeIds",
          "description": "<p>The IDs of the assignees of the draft issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "body",
          "description": "<p>The body of the draft issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "draftIssueId",
          "description": "<p>The ID of the draft issue to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the draft issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateProjectV2Input",
      "kind": "inputObjects",
      "id": "updateprojectv2input",
      "href": "/graphql/reference/input-objects#updateprojectv2input",
      "description": "<p>Autogenerated input type of UpdateProjectV2.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "closed",
          "description": "<p>Set the project to closed or open.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "public",
          "description": "<p>Set the project to public or private.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "readme",
          "description": "<p>Set the readme description of the project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "shortDescription",
          "description": "<p>Set the short description of the project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>Set the title of the project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateProjectV2ItemFieldValueInput",
      "kind": "inputObjects",
      "id": "updateprojectv2itemfieldvalueinput",
      "href": "/graphql/reference/input-objects#updateprojectv2itemfieldvalueinput",
      "description": "<p>Autogenerated input type of UpdateProjectV2ItemFieldValue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "fieldId",
          "description": "<p>The ID of the field to be updated.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "itemId",
          "description": "<p>The ID of the item to be updated.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "value",
          "description": "<p>The value which will be set on the field.</p>",
          "type": "ProjectV2FieldValue!",
          "id": "projectv2fieldvalue",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#projectv2fieldvalue"
        }
      ]
    },
    {
      "name": "UpdateProjectV2ItemPositionInput",
      "kind": "inputObjects",
      "id": "updateprojectv2itempositioninput",
      "href": "/graphql/reference/input-objects#updateprojectv2itempositioninput",
      "description": "<p>Autogenerated input type of UpdateProjectV2ItemPosition.</p>",
      "inputFields": [
        {
          "name": "afterId",
          "description": "<p>The ID of the item to position this item after. If omitted or set to null the item will be moved to top.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "itemId",
          "description": "<p>The ID of the item to be moved.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectId",
          "description": "<p>The ID of the Project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdatePullRequestBranchInput",
      "kind": "inputObjects",
      "id": "updatepullrequestbranchinput",
      "href": "/graphql/reference/input-objects#updatepullrequestbranchinput",
      "description": "<p>Autogenerated input type of UpdatePullRequestBranch.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "expectedHeadOid",
          "description": "<p>The head ref oid for the upstream branch.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Node ID of the pull request.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdatePullRequestInput",
      "kind": "inputObjects",
      "id": "updatepullrequestinput",
      "href": "/graphql/reference/input-objects#updatepullrequestinput",
      "description": "<p>Autogenerated input type of UpdatePullRequest.</p>",
      "inputFields": [
        {
          "name": "assigneeIds",
          "description": "<p>An array of Node IDs of users for this pull request.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "baseRefName",
          "description": "<p>The name of the branch you want your changes pulled into. This should be an existing branch\non the current repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "body",
          "description": "<p>The contents of the pull request.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labelIds",
          "description": "<p>An array of Node IDs of labels for this pull request.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "maintainerCanModify",
          "description": "<p>Indicates whether maintainers can modify the pull request.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "milestoneId",
          "description": "<p>The Node ID of the milestone for this pull request.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectIds",
          "description": "<p>An array of Node IDs for projects associated with this pull request.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Node ID of the pull request.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "state",
          "description": "<p>The target state of the pull request.</p>",
          "type": "PullRequestUpdateState",
          "id": "pullrequestupdatestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestupdatestate"
        },
        {
          "name": "title",
          "description": "<p>The title of the pull request.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdatePullRequestReviewCommentInput",
      "kind": "inputObjects",
      "id": "updatepullrequestreviewcommentinput",
      "href": "/graphql/reference/input-objects#updatepullrequestreviewcommentinput",
      "description": "<p>Autogenerated input type of UpdatePullRequestReviewComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The text of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestReviewCommentId",
          "description": "<p>The Node ID of the comment to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdatePullRequestReviewInput",
      "kind": "inputObjects",
      "id": "updatepullrequestreviewinput",
      "href": "/graphql/reference/input-objects#updatepullrequestreviewinput",
      "description": "<p>Autogenerated input type of UpdatePullRequestReview.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The contents of the pull request review body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Node ID of the pull request review to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateRefInput",
      "kind": "inputObjects",
      "id": "updaterefinput",
      "href": "/graphql/reference/input-objects#updaterefinput",
      "description": "<p>Autogenerated input type of UpdateRef.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "force",
          "description": "<p>Permit updates of branch Refs that are not fast-forwards?.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "oid",
          "description": "<p>The GitObjectID that the Ref shall be updated to target.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "refId",
          "description": "<p>The Node ID of the Ref to be updated.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateRefsInput",
      "kind": "inputObjects",
      "id": "updaterefsinput",
      "href": "/graphql/reference/input-objects#updaterefsinput",
      "description": "<p>Autogenerated input type of UpdateRefs.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Update refs preview update multiple refs in a single operation preview",
        "description": "This preview adds support for updating multiple refs in a single operation.",
        "toggled_by": "update-refs-preview",
        "toggled_on": [
          "Mutation.updateRefs",
          "GitRefname",
          "RefUpdate"
        ],
        "owning_teams": [
          "@github/repos"
        ],
        "accept_header": "application/vnd.github.update-refs-preview+json",
        "href": "/graphql/overview/schema-previews#update-refs-preview-update-multiple-refs-in-a-single-operation-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "refUpdates",
          "description": "<p>A list of ref updates.</p>",
          "type": "[RefUpdate!]!",
          "id": "refupdate",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#refupdate"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateRepositoryInput",
      "kind": "inputObjects",
      "id": "updaterepositoryinput",
      "href": "/graphql/reference/input-objects#updaterepositoryinput",
      "description": "<p>Autogenerated input type of UpdateRepository.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "description",
          "description": "<p>A new description for the repository. Pass an empty string to erase the existing description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "hasDiscussionsEnabled",
          "description": "<p>Indicates if the repository should have the discussions feature enabled.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasIssuesEnabled",
          "description": "<p>Indicates if the repository should have the issues feature enabled.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasProjectsEnabled",
          "description": "<p>Indicates if the repository should have the project boards feature enabled.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasWikiEnabled",
          "description": "<p>Indicates if the repository should have the wiki feature enabled.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "homepageUrl",
          "description": "<p>The URL for a web page about this repository. Pass an empty string to erase the existing URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>The new name of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the repository to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "template",
          "description": "<p>Whether this repository should be marked as a template such that anyone who\ncan access it can create new repositories with the same files and directory structure.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "UpdateRepositoryWebCommitSignoffSettingInput",
      "kind": "inputObjects",
      "id": "updaterepositorywebcommitsignoffsettinginput",
      "href": "/graphql/reference/input-objects#updaterepositorywebcommitsignoffsettinginput",
      "description": "<p>Autogenerated input type of UpdateRepositoryWebCommitSignoffSetting.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the repository to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "webCommitSignoffRequired",
          "description": "<p>Indicates if the repository should require signoff on web-based commits.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "UpdateSubscriptionInput",
      "kind": "inputObjects",
      "id": "updatesubscriptioninput",
      "href": "/graphql/reference/input-objects#updatesubscriptioninput",
      "description": "<p>Autogenerated input type of UpdateSubscription.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "state",
          "description": "<p>The new state of the subscription.</p>",
          "type": "SubscriptionState!",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        },
        {
          "name": "subscribableId",
          "description": "<p>The Node ID of the subscribable object to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateTeamDiscussionCommentInput",
      "kind": "inputObjects",
      "id": "updateteamdiscussioncommentinput",
      "href": "/graphql/reference/input-objects#updateteamdiscussioncommentinput",
      "description": "<p>Autogenerated input type of UpdateTeamDiscussionComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The updated text of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyVersion",
          "description": "<p>The current version of the body content.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the comment to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateTeamDiscussionInput",
      "kind": "inputObjects",
      "id": "updateteamdiscussioninput",
      "href": "/graphql/reference/input-objects#updateteamdiscussioninput",
      "description": "<p>Autogenerated input type of UpdateTeamDiscussion.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The updated text of the discussion.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyVersion",
          "description": "<p>The current version of the body content. If provided, this update operation\nwill be rejected if the given version does not match the latest version on the server.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the discussion to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "pinned",
          "description": "<p>If provided, sets the pinned state of the updated discussion.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "title",
          "description": "<p>The updated title of the discussion.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateTeamReviewAssignmentInput",
      "kind": "inputObjects",
      "id": "updateteamreviewassignmentinput",
      "href": "/graphql/reference/input-objects#updateteamreviewassignmentinput",
      "description": "<p>Autogenerated input type of UpdateTeamReviewAssignment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team review assignments preview",
        "description": "This preview adds support for updating the settings for team review assignment.",
        "toggled_by": "stone-crop-preview",
        "toggled_on": [
          "Mutation.updateTeamReviewAssignment",
          "TeamReviewAssignmentAlgorithm",
          "Team.reviewRequestDelegationEnabled",
          "Team.reviewRequestDelegationAlgorithm",
          "Team.reviewRequestDelegationMemberCount",
          "Team.reviewRequestDelegationNotifyTeam"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.stone-crop-preview+json",
        "href": "/graphql/overview/schema-previews#team-review-assignments-preview"
      },
      "inputFields": [
        {
          "name": "algorithm",
          "description": "<p>The algorithm to use for review assignment.</p>",
          "type": "TeamReviewAssignmentAlgorithm",
          "id": "teamreviewassignmentalgorithm",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamreviewassignmentalgorithm"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "enabled",
          "description": "<p>Turn on or off review assignment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "excludedTeamMemberIds",
          "description": "<p>An array of team member IDs to exclude.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the team to update review assignments of.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "notifyTeam",
          "description": "<p>Notify the entire team of the PR if it is delegated.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "teamMemberCount",
          "description": "<p>The number of team members to assign.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "UpdateTeamsRepositoryInput",
      "kind": "inputObjects",
      "id": "updateteamsrepositoryinput",
      "href": "/graphql/reference/input-objects#updateteamsrepositoryinput",
      "description": "<p>Autogenerated input type of UpdateTeamsRepository.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "permission",
          "description": "<p>Permission that should be granted to the teams.</p>",
          "type": "RepositoryPermission!",
          "id": "repositorypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorypermission"
        },
        {
          "name": "repositoryId",
          "description": "<p>Repository ID being granted access to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "teamIds",
          "description": "<p>A list of teams being granted access. Limit: 10.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateTopicsInput",
      "kind": "inputObjects",
      "id": "updatetopicsinput",
      "href": "/graphql/reference/input-objects#updatetopicsinput",
      "description": "<p>Autogenerated input type of UpdateTopics.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "topicNames",
          "description": "<p>An array of topic names.</p>",
          "type": "[String!]!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UserStatusOrder",
      "kind": "inputObjects",
      "id": "userstatusorder",
      "href": "/graphql/reference/input-objects#userstatusorder",
      "description": "<p>Ordering options for user status connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order user statuses by.</p>",
          "type": "UserStatusOrderField!",
          "id": "userstatusorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#userstatusorderfield"
        }
      ]
    },
    {
      "name": "VerifiableDomainOrder",
      "kind": "inputObjects",
      "id": "verifiabledomainorder",
      "href": "/graphql/reference/input-objects#verifiabledomainorder",
      "description": "<p>Ordering options for verifiable domain connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order verifiable domains by.</p>",
          "type": "VerifiableDomainOrderField!",
          "id": "verifiabledomainorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#verifiabledomainorderfield"
        }
      ]
    },
    {
      "name": "VerifyVerifiableDomainInput",
      "kind": "inputObjects",
      "id": "verifyverifiabledomaininput",
      "href": "/graphql/reference/input-objects#verifyverifiabledomaininput",
      "description": "<p>Autogenerated input type of VerifyVerifiableDomain.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the verifiable domain to verify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "WorkflowRunOrder",
      "kind": "inputObjects",
      "id": "workflowrunorder",
      "href": "/graphql/reference/input-objects#workflowrunorder",
      "description": "<p>Ways in which lists of workflow runs can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order workflow runs by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which to order workflows.</p>",
          "type": "WorkflowRunOrderField!",
          "id": "workflowrunorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#workflowrunorderfield"
        }
      ]
    }
  ],
  "scalars": [
    {
      "name": "Base64String",
      "kind": "scalars",
      "id": "base64string",
      "href": "/graphql/reference/scalars#base64string",
      "description": "<p>A (potentially binary) string encoded using base64.</p>"
    },
    {
      "name": "BigInt",
      "kind": "scalars",
      "id": "bigint",
      "href": "/graphql/reference/scalars#bigint",
      "description": "<p>Represents non-fractional signed whole numeric values. Since the value may\nexceed the size of a 32-bit integer, it's encoded as a string.</p>"
    },
    {
      "name": "Boolean",
      "description": "<p>Represents <code>true</code> or <code>false</code> values.</p>",
      "id": "boolean",
      "href": "/graphql/reference/scalars#boolean"
    },
    {
      "name": "Date",
      "kind": "scalars",
      "id": "date",
      "href": "/graphql/reference/scalars#date",
      "description": "<p>An ISO-8601 encoded date string.</p>"
    },
    {
      "name": "DateTime",
      "kind": "scalars",
      "id": "datetime",
      "href": "/graphql/reference/scalars#datetime",
      "description": "<p>An ISO-8601 encoded UTC date string.</p>"
    },
    {
      "name": "Float",
      "description": "<p>Represents signed double-precision fractional values as specified by <a href=\"https://en.wikipedia.org/wiki/IEEE_floating_point\">IEEE 754</a>.</p>",
      "id": "float",
      "href": "/graphql/reference/scalars#float"
    },
    {
      "name": "GitObjectID",
      "kind": "scalars",
      "id": "gitobjectid",
      "href": "/graphql/reference/scalars#gitobjectid",
      "description": "<p>A Git object ID.</p>"
    },
    {
      "name": "GitRefname",
      "kind": "scalars",
      "id": "gitrefname",
      "href": "/graphql/reference/scalars#gitrefname",
      "description": "<p>A fully qualified reference name (e.g. <code>refs/heads/master</code>).</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Update refs preview update multiple refs in a single operation preview",
        "description": "This preview adds support for updating multiple refs in a single operation.",
        "toggled_by": "update-refs-preview",
        "toggled_on": [
          "Mutation.updateRefs",
          "GitRefname",
          "RefUpdate"
        ],
        "owning_teams": [
          "@github/repos"
        ],
        "accept_header": "application/vnd.github.update-refs-preview+json",
        "href": "/graphql/overview/schema-previews#update-refs-preview-update-multiple-refs-in-a-single-operation-preview"
      }
    },
    {
      "name": "GitSSHRemote",
      "kind": "scalars",
      "id": "gitsshremote",
      "href": "/graphql/reference/scalars#gitsshremote",
      "description": "<p>Git SSH string.</p>"
    },
    {
      "name": "GitTimestamp",
      "kind": "scalars",
      "id": "gittimestamp",
      "href": "/graphql/reference/scalars#gittimestamp",
      "description": "<p>An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.</p>"
    },
    {
      "name": "HTML",
      "kind": "scalars",
      "id": "html",
      "href": "/graphql/reference/scalars#html",
      "description": "<p>A string containing HTML code.</p>"
    },
    {
      "name": "ID",
      "description": "<p>Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as <code>\"VXNlci0xMA==\"</code>) or integer (such as <code>4</code>) input value will be accepted as an ID.</p>",
      "id": "id",
      "href": "/graphql/reference/scalars#id"
    },
    {
      "name": "Int",
      "description": "<p>Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.</p>",
      "id": "int",
      "href": "/graphql/reference/scalars#int"
    },
    {
      "name": "PreciseDateTime",
      "kind": "scalars",
      "id": "precisedatetime",
      "href": "/graphql/reference/scalars#precisedatetime",
      "description": "<p>An ISO-8601 encoded UTC date string with millisecond precision.</p>"
    },
    {
      "name": "String",
      "description": "<p>Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.</p>",
      "id": "string",
      "href": "/graphql/reference/scalars#string"
    },
    {
      "name": "URI",
      "kind": "scalars",
      "id": "uri",
      "href": "/graphql/reference/scalars#uri",
      "description": "<p>An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.</p>"
    },
    {
      "name": "X509Certificate",
      "kind": "scalars",
      "id": "x509certificate",
      "href": "/graphql/reference/scalars#x509certificate",
      "description": "<p>A valid x509 certificate string.</p>"
    }
  ]
}