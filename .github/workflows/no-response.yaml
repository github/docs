name: No Response

# **What it does**: Closes issues that don't have enough information to be
#                   actionable.
# **Why we have it**: To remove the need for maintainers to remember to check
#                     back on issues periodically to see if contributors have
#                     responded.
# **Who does it impact**: Everyone that works on docs or docs-internal.

on:
  issue_comment:
    types: [created]

  schedule:
    - cron: '20 * * * *' # Run each hour at 20 minutes past

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  noResponse:
    runs-on: ubuntu-latest
    if: github.repository == 'github/docs'
    steps:
      - uses: actions/stale@28ca1036281a5e5922ead5184a1bbf96e5fc984e # v9.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          only-labels: 'more-information-needed'
          days-before-stale: -1
          days-before-issue-stale: 14
          days-before-close: -1
          days-before-issue-close: 0
          close-issue-message: >
            This issue has been automatically closed because there has been no response
            to our request for more information from the original author. With only the
            information that is currently in the issue, we don't have enough information
            to take action. Please reach out if you have or find the answers we need so
            that we can investigate further. See [this blog post on bug reports and the
            importance of repro steps](https://www.lee-dohm.com/2015/01/04/writing-good-bug-reports/)
            for more information about the kind of information that may be helpful.
          days-before-pr-stale: 7
          days-before-pr-close: 0
          close-pr-message: >
            This PR has been automatically closed because there has been no response to
            to our request for more information from the original author. Please reach out
            if you have the information we requested, or open a [new issue](https://github.com/github/docs/issues/new/choose)
            to describe your changes. Then we can begin the review process.

      - name: Check out repo
        if: ${{ failure() }}
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: ./.github/actions/slack-alert
        if: ${{ failure() }}
        with:
          slack_channel_id: ${{ secrets.DOCS_ALERTS_SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_DOCS_BOT_TOKEN }}

|---
language: node_js
sudo: false
node_js:
|---^

addons:
  jwt:
    secure: OYhRpW+8A0Iik+9GmHwa45ZwXeBXw/6zh6I+1w2H9g/LqPRp+Nhq3f4FSpvrrfno8lO8W4h+7s6+JOzF8C8NxNda5UUygKjF9pUphgiQdqls3YZMJlC9zXVl7gQXAHi3nG1s8vWSpwpzYD9fqczE1FX9n0+R63qX3eB6C/LbPeI=

cache:
  directories:
    - ~/.npm
    - ~/.yarn-cache
    - travis_phantomjs

env:
  global:
    - BIN=node ISTANBUL=false OPTION=""
    - SAUCE_LABS=false SAUCE_USERNAME=lodash

  matrix:
    -
    - BIN=phantomjs
    - ISTANBUL=true
    - SAUCE_LABS=true

matrix:
  include:
    - node_js: 6
      env:

git:
  depth: 10

branches:
  only:
    - master
    - 4.17

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/4aab6358b0e9aed0b628
    on_success: change
    on_failure: always

before_install:
  # Upgrade PhantomJS.
  - |
      export PHANTOMJS_VERSION=2.1.1
      export PATH=$PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/bin:$PATH
      if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then
        rm -rf $PWD/travis_phantomjs
        mkdir -p $PWD/travis_phantomjs
        wget https://github.com/Medium/phantomjs/releases/download/v$PHANTOMJS_VERSION/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2
        tar -xvf phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C $PWD/travis_phantomjs
      fi
      phantomjs -v

  # Use exact Node version.
  - nvm use $TRAVIS_NODE_VERSION

  # Setup package managers.
  - npm set loglevel error
  - npm set progress false
  - npm i -g yarn@0.16.1
  - yarn -V

  # Remove code skipped on the coverage run.
  - |
      PATTERN[0]="|\s*while\s*\([^)]+\)\s*\{\s*iteratee\(index\);\s*\}|"
      PATTERN[1]="|\bindex,\s*iterable\)\s*===\s*false\)[^}]+?(break;)|"
      PATTERN[2]="|\bcase\s+(?:dataView|promise|set|map|weakMap)CtorString:.+|g"
      PATTERN[3]="|\s*if\s*\(cache\.size\b[\s\S]+?\}|"
      PATTERN[4]="|\s*if\s*\(\!lodashFunc\)\s*\{\s*return;\s*\}|"
      PATTERN[5]="|\s*define\([\s\S]+?\);|"
      PATTERN[6]="|\s*root\._\s*=\s*_;|"

      if [ $ISTANBUL = true ]; then
        set -e
        for PTRN in ${PATTERN[@]}; do
          node ./test/remove.js $PTRN ./lodash.js
        done
      fi

install:
  # Install packages.
  - yarn

  # Use lodash-cli from GitHub. Temporarily use a fork.
  - git clone --depth=10 --branch=master git://github.com/bnjmnt4n/lodash-cli ./node_modules/lodash-cli
  - cd ./node_modules/lodash-cli/; npm i --production; cd ../../
  - mkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json; cd ../../../../

script:
  # Detect code coverage.
  - |
      if [ $ISTANBUL = true ]; then
        istanbul cover -x "**/vendor/**" --report lcovonly ./test/test.js -- ./lodash.js
        if [ $TRAVIS_SECURE_ENV_VARS = true ]; then
          cat ./coverage/lcov.info | coveralls
          cat ./coverage/coverage.json | codecov
        fi
      fi

  # Test in Node.js and PhantomJS.
  - |
      if [ $ISTANBUL = false ]; then
        node ./node_modules/lodash-cli/bin/lodash -o ./dist/lodash.js
        node ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./
        node ./node_modules/lodash-cli/bin/lodash -d -o ./lodash.js
        if [ $SAUCE_LABS = false ]; then
          cd ./test
          $BIN $OPTION ./test.js ../lodash.js
          if [ $TRAVIS_SECURE_ENV_VARS = true ]; then
            $BIN $OPTION ./test.js ../dist/lodash.min.js
          fi
        fi
      fi

  # Test in Sauce Labs.
  - |
      if [ $SAUCE_LABS = true ]; then
        node ./node_modules/lodash-cli/bin/lodash core -o ./dist/lodash.core.js
        npm run build
        $BIN ./test/saucelabs.js name="lodash tests"     runner="test/index.html?build=../dist/lodash.js&noglobals=true"     tags=development
        $BIN ./test/saucelabs.js name="lodash tests"     runner="test/index.html?build=../dist/lodash.min.js&noglobals=true" tags=production
        $BIN ./test/saucelabs.js name="lodash-fp tests"  runner="test/fp.html?noglobals=true"                                tags=development
        $BIN ./test/saucelabs.js name="underscore tests" runner="test/underscore.html?build=../dist/lodash.js"               tags=development,underscore
        $BIN ./test/saucelabs.js name="underscore tests" runner="test/underscore.html?build=../dist/lodash.min.js"           tags=production,underscore
        $BIN ./test/saucelabs.js name="backbone tests"   runner="test/backbone.html?build=../dist/lodash.js"                 tags=development,backbone
        $BIN ./test/saucelabs.js name="backbone tests"   runner="test/backbone.html?build=../dist/lodash.min.js"             tags=production,backbone
        $BIN ./test/saucelabs.js name="backbone tests"   runner="test/backbone.html?build=../dist/lodash.core.js"            tags=development,backbone
        $BIN ./test/saucelabs.js name="backbone tests"   runner="test/backbone.html?build=../dist/lodash.core.min.js"        tags=production,backbone
      fi
lodash/.travis.yml at 846e434c7a5b5692c55ebf5715ed677b70a32389 Â· lodash/lodash
